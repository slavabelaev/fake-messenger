{"version":3,"sources":["store/authSlice.ts","layout/ErrorMessage.tsx","layout/Loading.tsx","views/Welcome/Welcome.tsx","views/Welcome/index.tsx","views/NotFound/NotFound.tsx","views/NotFound/index.tsx","components/MessageList/MessageReadStatus.tsx","components/MessageList/MessageListItem.tsx","components/ListView.tsx","components/MessageList/MessageList.tsx","store/chatsSlice.ts","components/MessageList/index.tsx","components/SearchInputBase.tsx","components/ListItemToolbar.tsx","layout/View.tsx","store/contactsSlice.ts","components/PopoverAction.tsx","layout/BackButton.tsx","layout/LayoutToolbar.tsx","components/DetailListItem.tsx","components/ListItemSwitch.tsx","views/ContactProfile/BlackListContactSwitch.tsx","views/ContactProfile/NotificationsContactSwitch.tsx","views/ContactProfile/ContactProfile.tsx","views/ContactProfile/index.tsx","components/AttachmentList/AttachmentListItem.tsx","components/AttachmentList/AttachmentList.tsx","layout/Empty.tsx","components/AttachmentList/index.tsx","components/AttachmentLinkList/AttachmentLinkListItem.tsx","components/AttachmentLinkList/AttachmentLinkList.tsx","components/AttachmentLinkList/index.tsx","components/MenuListItem.tsx","views/Attachments/Attachments.tsx","views/Attachments/index.tsx","components/SendMessageToolbar/EmojiList.tsx","components/SendMessageToolbar/SendMessageToolbar.tsx","components/SendMessageToolbar/index.tsx","components/ContactList/ContactListItem.tsx","components/ContactList/ContactList.tsx","components/ContactList/index.tsx","store/settingsSlice.ts","components/SettingList/settings/DarkThemeSwitch.tsx","components/SettingList/SettingList.tsx","views/Settings/Settings.tsx","views/Settings/index.tsx","forms/EditProfile.tsx","views/Profile/Profile.tsx","views/Profile/index.tsx","services/fakerService.ts","views/Contacts/Contacts.tsx","views/Contacts/index.tsx","views/Chat/Chat.tsx","layout/ErrorBoundary.tsx","layout/Layout.tsx","layout/index.tsx","views/Chat/ChatRoutes.tsx","views/Chat/index.tsx","app/Routes.tsx","store/statusSlice.ts","app/ActionSnackbar.tsx","app/MobileRoutes.tsx","app/index.tsx","serviceWorker.ts","store/rootReducer.ts","services/contactService.ts","sagas/contactsSaga.ts","services/authService.ts","sagas/authSaga.ts","services/messageService.ts","sagas/chatSaga.ts","sagas/index.ts","store/index.ts","components/ThemeProvider/theme.ts","components/ThemeProvider/index.tsx","index.tsx"],"names":["authSlice","createSlice","name","initialState","loading","error","user","reducers","request","state","action","success","payload","failure","update","changes","selectAuth","auth","actions","authRequest","authSuccess","authFailure","updateProfile","authReducer","reducer","useStyles","makeStyles","theme","createStyles","root","display","flexDirection","justifyContent","alignItems","padding","spacing","height","width","ErrorMessage","text","classes","className","Typography","variant","color","Loading","CircularProgress","header","avatar","marginBottom","Welcome","useSelector","Avatar","src","avatarUrl","component","firstName","textAlign","NotFound","MessageReadStatus","props","marginRight","gutterRight","deliveredIcon","zIndex","opacity","delivered","readIcon","marginLeft","read","Check","fontSize","MessageListItem","direction","createdAt","CheckboxProps","bgColor","palette","primary","main","background","paper","textColor","getContrastText","directionRight","directionLeft","message","position","maxWidth","backgroundColor","borderRadius","shape","status","listItemText","margin","tailRight","right","top","borderWidth","borderColor","borderStyle","borderRightColor","borderBottomColor","tailLeft","left","borderLeftColor","listItemIcon","secondary","toLocaleTimeString","substring","ListItemIcon","Checkbox","messageStatus","messageTail","ListItem","dense","selected","checked","ListItemText","ListView","List","Array","itemCount","fill","map","_","index","renderItem","MessageList","getItem","getItemKey","itemProps","itemKey","key","itemInitialState","messages","checkedIds","searchQuery","prints","checkModeEnabled","chatsSlice","chatId","setPrints","setSearchQuery","addMessageRequest","add","push","switchCheckMode","enabled","chat","undefined","removeMany","messageIds","filter","item","includes","id","toggleCheck","messageId","removeAttachmentFiles","forEach","attachmentFile","removeAttachmentLinks","attachmentLink","selectChatById","chats","messagesRequest","messagesSuccess","messagesFailure","messagesSearchQuery","addOneMessage","switchMessagesCheckMode","removeManyMessages","toggleCheckMessage","setMessagePrints","chatsReducer","MessageListContainer","allMessages","messagesFilter","query","toLowerCase","getMessagesFilter","messagesFetched","Boolean","dispatch","useDispatch","useEffect","length","createdByMe","mapMessageToItemProps","onChange","event","SearchInputBase","placeholder","initialValue","onBack","onClear","inputProps","useState","value","setValue","startAdornment","InputAdornment","Tooltip","title","IconButton","edge","onClick","ArrowBack","endAdornment","Clear","InputBase","fullWidth","autoFocus","target","primaryText","whiteSpace","overflow","textOverflow","ListItemToolbar","viewName","setViewName","handleBack","SearchInputBaseProps","Toolbar","avatarTo","size","Link","to","avatarSrc","searchButton","endAction","Search","startAction","ListItemAvatar","defaultView","onKeyUp","keyCode","content","flex","toolbar","divider","borderBottomStyle","borderBottomWidth","footer","borderTopColor","borderTopStyle","borderTopWidth","View","contentRef","React","createRef","classNames","join","needScrollBottom","current","scrollTo","scrollHeight","ref","children","contactsAdapter","createEntityAdapter","getInitialState","contactsSlice","addMany","addOne","removeOne","switchFavorite","contactId","inBlackList","entities","updateOne","switchNotifications","notificationsEnabled","selectContacts","contacts","getSelectors","selectContactById","selectAll","selectById","getContactByIdSelector","selectFoundContacts","createSelector","searchResults","entity","lastName","contactsRequest","contactsSuccess","contactsFailure","addOneContact","removeContactById","contactsSearchQuery","contactsSwitchBlackList","contactsSwitchNotifications","contactsReducer","PopoverAction","anchorEl","setAnchorEl","open","handleClick","currentTarget","handleClose","iconButton","renderButton","MoreVert","popover","Popover","onClose","anchorOrigin","vertical","horizontal","renderPopover","BackButton","history","useHistory","goBack","LayoutToolbar","useTheme","isBreakpointSm","useMediaQuery","breakpoints","down","DetailListItem","ListItemSwitch","switchProps","button","ListItemSecondaryAction","Switch","BlackListContactSwitch","selectContact","contact","NotificationsContactSwitch","ContactProfile","useParams","Divider","ListSubheader","href","phoneNumber","email","dateOfBirth","toLocaleDateString","bio","typeIcons","PlayCircleOutline","Audiotrack","Image","FontDownload","TextFields","Message","AttachmentListItem","type","Attachment","bytes","download","GetApp","AttachmentList","Empty","image","AttachmentListContainer","selectAttachments","messagesWithAttachments","attachments","attachment","lastModified","imageUrl","singleLine","AttachmentLinkListItem","OpenInNew","AttachmentLinkList","LinkListContainer","selectAttachmentLinks","attachmentLinks","link","description","url","MenuListItem","icon","disabled","Attachments","tabsValue","setTabsValue","popoverMenuButton","tabs","Tabs","indicatorColor","Tab","label","toolbarWithTabs","emojiGroups","items","group","gridTemplateColumns","cursor","EmojiList","emoji","role","emojiGroup","disableGutters","Container","messageField","marginTop","sendButton","emojiList","maxHeight","SendMessageToolbar","onSubmit","emojiOpen","setEmojiOpen","setMessage","handleSubmit","Send","InsertEmoticon","htmlFor","AttachFile","hidden","TextField","onKeyDown","ctrlKey","preventDefault","multiline","rowsMax","InputProps","SendMessageToolbarContainer","messageText","ContactListItem","secondaryAction","onDelete","NavLink","activeClassName","Badge","overlap","invisible","isOnline","fullName","lastMessage","ContactList","ContactListContainer","CHAT_ROUTE_PATH","replace","mapContactToItemProps","settingsSlice","darkThemeEnabled","enableDarkTheme","selectSettings","settings","settingsReducer","DarkThemeSwitch","SettingList","Settings","EditProfile","profile","setProfile","getChangeHandler","fieldName","Grid","container","xs","style","Button","readOnly","required","InputLabelProps","shrink","toISOString","split","paddingTop","paddingBottom","Profile","fakerService","faker","random","uuid","internet","phone","boolean","lastVisitAt","date","recent","past","number","min","max","lorem","sentence","hasAttachmentFile","Math","hasAttachmentLink","system","fileType","fileName","getMilliseconds","company","companyName","authUser","fab","bottom","Contacts","settingsButton","handleReset","statusText","addButton","Fab","Add","cancelButton","Chat","removeAllMessages","formatDistance","Date","pathToProfile","backButton","startIcon","Delete","ErrorBoundary","errorInfo","this","setState","Component","leftSide","minWidth","borderRightWidth","borderRightStyle","rightSide","borderLeftWidth","borderLeftStyle","appTitle","textDecoration","Layout","ChatRoutes","path","ChatContainer","Routes","exact","statusSlice","autoHideDuration","setStatusMessage","setStatusError","resetStatus","selectStatus","statusReducer","ActionSnackbar","hasMessage","hideSnackbar","aria-label","Close","Snackbar","reason","MobileRoutes","App","login","password","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","rootReducer","combineReducers","fetchContacts","a","limit","count","removeContact","addContact","removeContactSaga","addContactSaga","fetchContactsSaga","watchContactsSaga","call","response","errors","Error","statusAction","put","statusMessage","delay","all","takeEvery","takeLatest","signInWithLoginAndPassword","updateUserProfile","signInSaga","updateProfileSaga","watchAuthSaga","profileChanges","fetchMessages","addMessage","removeMessages","ids","removeMessageSaga","sendFakeAnswerSaga","addMessageSaga","fetchMessagesSaga","watchChatSaga","createdBy","startPrintsTimeout","startsPrintsAction","timeout","addMessageAction","endsPrintsAction","fork","rooSaga","contactsSaga","authSaga","chatSaga","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","rootSaga","LIGHT_THEME","createMuiTheme","blue","green","overrides","DARK_THEME","ThemeProvider","Root","StrictMode","CssBaseline","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"iOAgBMA,EAAYC,YAAY,CAC1BC,KAAM,OACNC,aAR4B,CAC5BC,SAAS,EACTC,OAAO,EACPC,KAAM,MAMNC,SAAU,CACNC,QADM,SACEC,EAAOC,GAIXD,EAAML,SAAU,EAChBK,EAAMJ,OAAQ,GAElBM,QARM,SAQEF,EAAOC,GACXD,EAAMJ,OAAQ,EACdI,EAAML,SAAU,EAChBK,EAAMH,KAAOI,EAAOE,SAExBC,QAbM,SAaEJ,GACJA,EAAMJ,OAAQ,EACdI,EAAML,SAAU,GAEpBU,OAjBM,SAiBCL,EAAOC,GACV,IAAMK,EAAUL,EAAOE,QACvBH,EAAMH,KAAOG,EAAMH,KAAN,eACNG,EAAMH,KADA,GAENS,GACH,SAKHC,EAAa,SAACP,GAAD,OAAsBA,EAAMQ,M,EAOlDjB,EAAUkB,QAJDC,E,EAATX,QACSY,E,EAATT,QACSU,E,EAATR,QACQS,E,EAARR,OAKWS,EAFKvB,EAAUwB,QC/CxBC,EAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CACxDC,KAAM,CACFC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,QAASP,EAAMQ,QAAQ,GACvBC,OAAQ,OACRC,MAAO,aAoBAC,MAhBf,YAEuB,IAAD,IADlBC,YACkB,MADX,uBACW,EACZC,EAAUf,IAChB,OACI,yBAAKgB,UAAWD,EAAQX,MACpB,kBAACa,EAAA,EAAD,CACIC,QAAQ,KACRC,MAAM,SAELL,K,UC1BXd,EAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CACxDC,KAAM,CACFK,QAASP,EAAMQ,QAAQ,GACvBL,QAAS,OACTG,WAAY,SACZD,eAAgB,SAChBK,MAAO,OACPD,OAAQ,aAaDS,MATf,WACI,IAAML,EAAUf,IAChB,OACI,yBAAKgB,UAAWD,EAAQX,MACpB,kBAACiB,EAAA,EAAD,Q,UCVNrB,EAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CACxDC,KAAM,CACFC,QAAS,OACTG,WAAY,SACZD,eAAgB,SAChBI,OAAQ,QAEZW,OAAQ,CACJjB,QAAS,OACTC,cAAe,SACfE,WAAY,SACZD,eAAgB,UAEpBgB,OAAQ,CACJX,MAAO,GACPD,OAAQ,GACRa,aAActB,EAAMQ,QAAQ,SAgCrBe,ICvDAA,ED2Bf,WACI,IAAMV,EAAUf,IADD,EAEkB0B,YAAYnC,GAArCV,EAFO,EAEPA,KAAMD,EAFC,EAEDA,MAEd,OAJe,EAEMD,UAELE,EAAa,kBAAC,EAAD,MACzBD,EAAc,kBAAC,EAAD,MAGd,yBAAKoC,UAAWD,EAAQX,MACpB,4BAAQY,UAAWD,EAAQO,QACvB,kBAACK,EAAA,EAAD,CACIX,UAAWD,EAAQQ,OACnBK,IAAG,OAAE/C,QAAF,IAAEA,OAAF,EAAEA,EAAMgD,YAEf,kBAACZ,EAAA,EAAD,CACIC,QAAQ,KACRY,UAAU,MAFd,qCAIgCjD,QAJhC,IAIgCA,OAJhC,EAIgCA,EAAMkD,WAEtC,kBAACd,EAAA,EAAD,SE7CVjB,EAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CACxDC,KAAM,CACFC,QAAS,OACTG,WAAY,SACZD,eAAgB,SAChBI,OAAQ,QAEZW,OAAQ,CACJU,UAAW,eAwBJC,IChCAA,EDYf,WACI,IAAMlB,EAAUf,IAChB,OACI,yBAAKgB,UAAWD,EAAQX,MACpB,4BAAQY,UAAWD,EAAQO,QACvB,kBAACL,EAAA,EAAD,CACIC,QAAQ,KACRY,UAAU,KACVX,MAAM,SAHV,4BAOA,kBAACF,EAAA,EAAD,oF,6EEmBDiB,MAlBf,SAA2BC,GACvB,IAAMpB,EAnBQ,SAACoB,GAAD,OAAmClC,KAAW,SAACC,GAAD,OAAkBC,YAAa,CAC3FC,KAAM,CACFC,QAAS,cACTG,WAAY,SACZ4B,YAAaD,EAAME,YACbnC,EAAMQ,QAAQ,KACd,GAEV4B,cAAe,CACXC,OAAQ,EACRC,QAASL,EAAMM,UAAY,EAAI,KAEnCC,SAAU,CACNC,YAAazC,EAAMQ,QAAQ,GAC3B8B,QAASL,EAAMS,KAAO,EAAI,UAKd5C,CAAUmC,EAAVnC,GAChB,OACI,0BAAMgB,UAAWD,EAAQX,MACrB,kBAACyC,EAAA,EAAD,CACI7B,UAAWD,EAAQuB,cACnBnB,MAAM,UACN2B,SAAS,YAEb,kBAACD,EAAA,EAAD,CACI7B,UAAWD,EAAQ2B,SACnBvB,MAAM,UACN2B,SAAS,cC0HVC,MA/Ef,SAAyBZ,GAA8B,IAAD,EAS9CA,EAPAjB,eAF8C,MAEpC,UAFoC,IAS9CiB,EANAa,iBAH8C,MAGlC,QAHkC,EAI9ClC,EAKAqB,EALArB,KACA2B,EAIAN,EAJAM,UACAG,EAGAT,EAHAS,KACAK,EAEAd,EAFAc,UACAC,EACAf,EADAe,cAEEnC,EA1EQ,SAACoB,GAAD,OAAiClC,aAAW,SAACC,GAC3D,IAAMiD,EAA0B,YAAhBhB,EAAMhB,MAChBjB,EAAMkD,QAAQC,QAAQC,KACtBpD,EAAMkD,QAAQG,WAAWC,MACzBC,EAA4B,YAAhBtB,EAAMhB,MAClBjB,EAAMkD,QAAQM,gBAAgBP,GAC9B,UACN,OAAOhD,YAAa,CAChBwD,eAAgB,CACZpD,eAAgB,YAEpBqD,cAAe,CACXrD,eAAgB,cAEpBsD,QAAS,CACLC,SAAU,WACVC,SAAU,MACVpB,WAAgC,SAApBR,EAAMa,UACZ9C,EAAMQ,QAAQ,GACd,UACN0B,YAAiC,UAApBD,EAAMa,UACb9C,EAAMQ,QAAQ,GACd,UACNsD,gBAAiBb,EACjBhC,MAAOsC,EACPhD,QAASP,EAAMQ,QAAQ,GACvBuD,aAAc/D,EAAMgE,MAAMD,cAE9BE,OAAQ,CACJ9D,QAAS,cACTG,WAAY,SACZW,MAAOsC,GAEXW,aAAc,CACVC,OAAQ,GAEZC,UAAW,CACPR,SAAU,WACVS,OAAQrE,EAAMQ,QAAQ,GAAKR,EAAMgE,MAAMD,aACvCO,IAAK,EACLnE,QAAS,QACToE,YAAavE,EAAMQ,QAAQ,GAC3BgE,YAAavB,EACbwB,YAAa,QACbC,iBAAkB,cAClBC,kBAAmB,eAEvBC,SAAU,CACNhB,SAAU,WACViB,MAAO7E,EAAMQ,QAAQ,GAAKR,EAAMgE,MAAMD,aACtCO,IAAK,EACLnE,QAAS,QACToE,YAAavE,EAAMQ,QAAQ,GAC3BgE,YAAavB,EACbwB,YAAa,QACbK,gBAAiB,cACjBH,kBAAmB,eAEvBI,aAAc,CACV7C,YAAa,aAeLpC,CAAUmC,EAAVnC,GAEVqD,EACF,kBAACpC,EAAA,EAAD,CACIC,QAAQ,SAEPJ,GAIHoE,EACF,kBAACjE,EAAA,EAAD,CACIC,QAAQ,UACRC,MAAM,WAEL8B,EAAUkC,qBAAqBC,UAAU,EAAG,IAK/CH,EAA2B,aAAZ/D,GACjB,kBAACmE,EAAA,EAAD,CACIrE,UAAWD,EAAQkE,cAEnB,kBAACK,EAAA,EACOpC,IAKVqC,EACF,kBAAC,EAAD,CACI9C,UAAWA,EACXG,KAAMA,EACNP,aAAW,IAIbmD,EAA4B,UAAdxC,EACd,yBAAKhC,UAAWD,EAAQuD,YACxB,yBAAKtD,UAAWD,EAAQ+D,WAExB9D,EAA0B,UAAdgC,EACZjC,EAAQ4C,eACR5C,EAAQ6C,cACd,OACI,kBAAC6B,EAAA,EAAD,CACIzE,UAAWA,EACX0E,OAAK,EACLC,SAAQ,OAAEzC,QAAF,IAAEA,OAAF,EAAEA,EAAe0C,SAExBX,EACD,yBAAKjE,UAAWD,EAAQ8C,SACpB,kBAACgC,EAAA,EAAD,CACI7E,UAAWD,EAAQqD,aACnBf,QAASA,EACT6B,UACI,0BAAMlE,UAAWD,EAAQoD,QACpBoB,EACAL,KAIZM,K,UC5IFM,MATf,SAAkB3D,GAEd,OACI,kBAAC4D,EAAA,EAAD,KACKC,MAAM7D,EAAM8D,WAAWC,KAAK,MAAMC,KAHxB,SAACC,EAASC,GAAV,OAA4BlE,EAAMmE,WAAWD,QCyBrDE,MAxBf,YAIsB,IAHlBN,EAGiB,EAHjBA,UACAO,EAEiB,EAFjBA,QACAC,EACiB,EADjBA,WAaA,OACI,kBAAC,EAAD,CACIR,UAAWA,EACXK,WAdW,SAACD,GAChB,IAAMK,EAAYF,EAAQH,GACpBM,EAAUF,EAAaA,EAAWJ,GAASA,EACjD,OACI,kBAAC,EAAD,eACIO,IAAKD,GACDD,QCCdG,EAAsC,CACxCC,SAAU,KACVC,WAAY,GACZC,YAAa,GACbC,QAAQ,EACRC,kBAAkB,EAClBvI,SAAS,EACTC,OAAO,GAGLuI,EAAa3I,YAAY,CAC3BC,KAAM,QACNC,aAbgC,GAchCI,SAAU,CACNC,QADM,SACEC,EAAOC,GAEV,IACOmI,EAAWnI,EAAOE,QAAlBiI,OACHpI,EAAMoI,KAASpI,EAAMoI,GAAN,eAAoBP,IACxC7H,EAAMoI,GAAQzI,SAAU,EACxBK,EAAMoI,GAAQxI,OAAQ,GAE1BM,QATM,SASEF,EAAOC,GAGV,IAAD,EAC6BA,EAAOE,QAA5BiI,EADR,EACQA,OAAQN,EADhB,EACgBA,SAChB9H,EAAMoI,GAAQxI,OAAQ,EACtBI,EAAMoI,GAAQzI,SAAU,EACxBK,EAAMoI,GAAQN,SAAWA,GAE7B1H,QAlBM,SAkBEJ,EAAOC,GAEV,IACOmI,EAAWnI,EAAOE,QAAlBiI,OACRpI,EAAMoI,GAAQxI,OAAQ,EACtBI,EAAMoI,GAAQzI,SAAU,GAE5B0I,UAzBM,SAyBIrI,EAAOC,GAGZ,IAAD,EAC2BA,EAAOE,QAA1BiI,EADR,EACQA,OAAQH,EADhB,EACgBA,OAChBjI,EAAMoI,GAAQH,OAASA,GAE3BK,eAhCM,SAgCStI,EAAOC,GAGjB,IAAD,EACgCA,EAAOE,QAA/BiI,EADR,EACQA,OAAQJ,EADhB,EACgBA,YAChBhI,EAAMoI,GAAQJ,YAAcA,GAEhCO,kBAvCM,SAuCYvI,EAAOC,KAMzBuI,IA7CM,SA6CFxI,EAAOC,GAGN,IAAD,EAC0BA,EAAOE,QAA1BiI,EADP,EACOA,OAAQvD,EADf,EACeA,QACXiD,EAAW9H,EAAMoI,GAAQN,SACxBA,IAAUA,EAAW,IAC1BA,EAASW,KAAK5D,IAElB6D,gBAtDM,SAsDU1I,EAAOC,GAGlB,IAAD,EAC4BA,EAAOE,QAA3BiI,EADR,EACQA,OAAQO,EADhB,EACgBA,QACVC,EAAO5I,EAAMoI,GACbF,OAA+BW,IAAZF,EACnBA,GACCC,EAAKV,iBACZU,EAAKV,iBAAmBA,EACnBA,IAAkBU,EAAKb,WAAa,KAE7Ce,WAlEM,SAkEK9I,EAAOC,GAGb,IAAD,EAC+BA,EAAOE,QAA9BiI,EADR,EACQA,OAAQW,EADhB,EACgBA,WACVH,EAAO5I,EAAMoI,GAEfQ,EAAKd,SADLiB,GACiBH,EAAKd,UAAY,IAAIkB,QAAO,SAAAC,GAAI,OAAKF,EAAWG,SAASD,EAAKE,OAE/D,GAEpBP,EAAKb,WAAa,GAClBa,EAAKV,kBAAmB,GAE5BkB,YAhFM,SAgFMpJ,EAAOC,GAGd,IAAD,EAC4BA,EAAOE,QAA5BiI,EADP,EACOA,OAAQiB,EADf,EACeA,UACTT,EAAO5I,EAAMoI,GACHQ,EAAKb,WAAWmB,SAASG,GAC5BT,EAAKb,WAAaa,EAAKb,WAAWiB,QAAO,SAAAG,GAAE,OAAIA,IAAOE,KAC9DT,EAAKb,WAAWU,KAAKY,IAE9BC,sBA1FM,SA0FgBtJ,EAAOC,GAExB,IAAD,EAGA,UADaD,EADIC,EAAOE,QAAjBiI,QAEFN,gBAAL,SAAeyB,SAAQ,SAAAN,GAAI,OAAIA,EAAKO,oBAAiBX,MAEzDY,sBAjGM,SAiGgBzJ,EAAOC,GAExB,IAAD,EAGA,UADaD,EADIC,EAAOE,QAAjBiI,QAEFN,gBAAL,SAAeyB,SAAQ,SAAAN,GAAI,OAAIA,EAAKS,oBAAiBb,SAKpDc,EAAiB,SAACR,GAAD,OAAoB,SAACnJ,GAC/C,OAAOA,EAAM4J,MAAMT,IAAOtB,I,EAkC1BM,EAAW1H,QAZFoJ,E,EAAT9J,QACS+J,E,EAAT5J,QACS6J,E,EAAT3J,QACgB4J,E,EAAhB1B,eACK2B,G,EAALzB,IACAD,G,EAAAA,kBACiB2B,G,EAAjBxB,gBACYyB,G,EAAZrB,WACasB,G,EAAbhB,YACAE,G,EAAAA,sBACAG,G,EAAAA,sBACWY,G,EAAXhC,UAKWiC,GAFMnC,EAAWpH,QCzGjBwJ,OA9Cf,YAAsE,IAAtCnC,EAAqC,EAArCA,OAAqC,EAC4B1F,YAAYiH,EAAevB,IAAhHxI,EADyD,EACzDA,MAAOoI,EADkD,EAClDA,YAAaE,EADqC,EACrCA,iBAAkBH,EADmB,EACnBA,WAAsByC,EADH,EACP1C,SAAuBnI,EADhB,EACgBA,QAC3E8K,EAPgB,SAACzC,GAAD,OAAyB,SAACiB,GAChD,IAAMyB,EAAQ1C,EAAY2C,cAC1B,OAAO1B,EAAKnH,KAAK6I,cAAczB,SAASwB,IAKjBE,CAAkB5C,GACnCF,EAAWE,EAAW,OAAGwC,QAAH,IAAGA,OAAH,EAAGA,EAAaxB,OAAOyB,GAAkBD,EAC/DK,EAAkBC,QAAQN,GAC1BO,EAAWC,cASjB,OAPAC,qBAAU,WACN,IAAKJ,EAAiB,CAClB,IAAM5K,EAAS4J,EAAgB,CAACzB,WAChC2C,EAAS9K,MAEd,CAAC4K,EAAiBE,EAAU3C,IAE3BzI,IAAYmI,EAAiB,kBAAC,EAAD,MAC7BlI,EAAc,kBAAC,EAAD,MAsBXkI,EAASoD,OACZ,kBAAC,EAAD,CACIjE,UAAWa,EAASoD,OACpB1D,QAvBqC,SAACH,GAC1C,IAAMxC,EAAmBiD,EAAST,GASlC,OAAO,eAzCe,SAACxC,GAAD,MAA6C,CACvE/C,KAAI,OAAE+C,QAAF,IAAEA,OAAF,EAAEA,EAAS/C,KACf2B,UAAWoB,EAAQpB,UACnBG,KAAMiB,EAAQjB,KACdK,UAAWY,EAAQZ,UACnBD,UAAWa,EAAQsG,YAAc,QAAU,OAC3ChJ,MAAO0C,EAAQsG,YAAc,UAAY,WAoC9BC,CAAsBvG,GAD7B,CAEI3C,QAASgG,EAAmB,WAAa,UACzChE,cAAe,CACX0C,QAASmB,EAAWmB,SAASrE,EAAQsE,IACrCkC,SAba,SAACC,EAAoB1E,GACtC,IAAM3G,EAASmK,GAAmB,CAC9BhC,SACAiB,UAAWxE,EAAQsE,KAEvB4B,EAAS9K,QAiBTwH,WAAY,SAAAJ,GAAK,OAAIS,EAAST,GAAO8B,MAEzC,M,qHCKOoC,OA7Df,YAO0B,IAAD,IANrBC,mBAMqB,MANP,SAMO,MALrBC,oBAKqB,MALN,GAKM,EAJrBC,EAIqB,EAJrBA,OACAC,EAGqB,EAHrBA,QACAN,EAEqB,EAFrBA,SACGO,EACkB,+EACKC,mBAAiBJ,GADtB,oBACdK,EADc,KACPC,EADO,KAgBfC,EACF,kBAACC,GAAA,EAAD,CAAgBnH,SAAS,SACrB,kBAACoH,GAAA,EAAD,CAASC,MAAM,QACX,kBAACC,GAAA,EAAD,CACIC,KAAK,QACLC,QAnBG,WACfP,EAAS,IACTL,GAAUA,MAmBE,kBAACa,GAAA,EAAD,SAMVC,EAAeV,GACjB,kBAACG,GAAA,EAAD,CAAgBnH,SAAS,OACrB,kBAACsH,GAAA,EAAD,CACIC,KAAK,MACLC,QA3BQ,WAChBP,EAAS,IACTJ,GAAWA,MA2BH,kBAACc,GAAA,EAAD,QAKZ,OACI,kBAACC,GAAA,EAAD,eACIlB,YAAaA,EACbmB,WAAS,EACTC,WAAS,GACLhB,EAJR,CAKIE,MAAOA,EACPT,SArCa,SAACC,GAA0C,IACpDQ,EAAUR,EAAMuB,OAAhBf,MACRC,EAASD,GACTT,GAAYA,EAASS,IAmCjBE,eAAgBA,EAChBQ,aAAcA,MC9CpBxL,GAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CACxD2L,YAAa,CACTzL,QAAS,QACT0L,WAAY,SACZC,SAAU,SACVC,aAAc,iBAoFPC,OAhFf,SAAyB/J,GACrB,IAAMpB,EAAUf,KAD8B,EAEd6K,mBAAmB,WAFL,oBAEvCsB,EAFuC,KAE7BC,EAF6B,KAIxCC,EAAa,WAAO,IAAD,EACf3B,EAAM,UAAGvI,EAAMmK,4BAAT,aAAG,EAA4B5B,OAC3C0B,EAAY,WACZ1B,GAAUA,KAkEd,OACI,kBAAC6B,GAAA,EAAD,KALyC,YAM5BJ,EAzDG,WAChB,IAAM5K,EAASY,EAAMqK,SACjB,kBAACtB,GAAA,EAAD,CAASC,MAAM,WACX,kBAACC,GAAA,EAAD,CACIC,KAAK,QACLoB,KAAK,QACL3K,UAAW4K,IACXC,GAAIxK,EAAMqK,UAEV,kBAAC7K,EAAA,EAAD,CACIC,IAAKO,EAAMyK,cAKvB,kBAACjL,EAAA,EAAD,CACIC,IAAKO,EAAMyK,YAIbC,EACF,kBAAC3B,GAAA,EAAD,CAASC,MAAM,UACX,kBAACC,GAAA,EAAD,CACIC,MAAMlJ,EAAM2K,WAAoB,MAChCxB,QAAS,kBAAMc,EAAY,YAE3B,kBAACW,GAAA,EAAD,QAKZ,OACI,oCACK5K,EAAM6K,YACP,kBAACC,GAAA,EAAD,KACK1L,GAEL,kBAACsE,EAAA,EAAD,CACIxC,QACI,0BAAMrC,UAAWD,EAAQ+K,aACpB3J,EAAMkB,SAGf6B,UAAW/C,EAAM+C,YAEpB2H,EACA1K,EAAM2K,WAMbI,GA3DF,kBAAC,GAAD,iBACQ/K,EAAMmK,qBADd,CAEIa,QAAS,SAAA7C,GAAK,OAxBF,KAwBMA,EAAM8C,SAA+Bf,KACvD3B,OAAQ2B,O,0CCtCdrM,GAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CACxDC,KAAM,CACFC,QAAS,OACTC,cAAe,SACfK,OAAQ,QAEZ0M,QAAS,CACLrB,SAAU,OACVsB,KAAM,QAEVC,QAAS,CACLvJ,gBAAiB9D,EAAMkD,QAAQG,WAAWC,MAC1CqB,kBAAmB3E,EAAMkD,QAAQoK,QACjCC,kBAAmB,QACnBC,kBAAmB,GAEvBC,OAAQ,CACJ3J,gBAAiB9D,EAAMkD,QAAQG,WAAWC,MAC1CoK,eAAgB1N,EAAMkD,QAAQoK,QAC9BK,eAAgB,QAChBC,eAAgB,QAgDTC,OA5Cf,SAAc5L,GACV,IAAMpB,EAAUf,KACVgO,EAAaC,IAAMC,YACnBC,EAAa,CAAChM,EAAMnB,UAAWD,EAAQX,MAAMgO,KAAK,KAExDnE,qBAAU,WACN,GAAK9H,EAAMkM,iBAAX,CADY,IAGJC,EAAYN,EAAZM,QACJA,GAASA,EAAQC,SAAS,CAC1B/J,IAAK8J,EAAQE,mBAIrB,IAAMnB,EACF,yBACIrM,UAAWD,EAAQsM,QACnBoB,IAAKT,GAEJ7L,EAAMuM,UAITnB,EAAUpL,EAAMoL,SAClB,yBAAKvM,UAAWD,EAAQwM,SACnBpL,EAAMoL,SAITI,EAASxL,EAAMwL,QACjB,yBAAK3M,UAAWD,EAAQ4M,QACnBxL,EAAMwL,QAIf,OACI,yBAAK3M,UAAWmN,GACXZ,EACAF,EACAM,I,SCrEPgB,GAAkBC,cAElBlQ,GAAeiQ,GAAgBE,gBAIlC,CACC7H,YAAa,GACbrI,SAAS,EACTC,OAAO,IAGLkQ,GAAgBtQ,YAAY,CAC9BC,KAAM,WACNC,gBACAI,SAAU,CACNC,QADM,SACEC,GACJA,EAAML,SAAU,EAChBK,EAAMJ,OAAQ,GAElBM,QALM,SAKEF,EAAOC,GACXD,EAAMJ,OAAQ,EACdI,EAAML,SAAU,EAChBgQ,GAAgBI,QAAQ/P,EAAOC,EAAOE,UAE1CC,QAVM,SAUEJ,GACJA,EAAMJ,OAAQ,EACdI,EAAML,SAAU,GAEpBqQ,OAAQL,GAAgBK,OACxBC,UAAWN,GAAgBM,UAC3B3H,eAhBM,SAgBStI,EAAOC,GAClBD,EAAMgI,YAAc/H,EAAOE,SAE/B+P,eAnBM,SAmBSlQ,EAAOC,GAAuC,IAAD,EAClDkQ,EAAYlQ,EAAOE,QACnBiQ,EAAW,UAAGpQ,EAAMqQ,SAASF,UAAlB,aAAG,EAA2BC,YAC/CT,GAAgBW,UAAUtQ,EAAO,CAC7BmJ,GAAIgH,EACJ7P,QAAS,CACL8P,aAAcA,MAI1BG,oBA7BM,SA6BcvQ,EAAOC,GAAuC,IAAD,EACvDkQ,EAAYlQ,EAAOE,QACnBqQ,EAAoB,UAAGxQ,EAAMqQ,SAASF,UAAlB,aAAG,EAA2BK,qBACxDb,GAAgBW,UAAUtQ,EAAO,CAC7BmJ,GAAIgH,EACJ7P,QAAS,CACLkQ,sBAAuBA,SAO9BC,GAAiB,SAACzQ,GAAD,OAAsBA,EAAM0Q,U,GAKtDf,GAAgBgB,aAAwBF,IAD5BG,I,GADZC,U,GACAC,YAGSC,GAAyB,SAAC5H,GAAD,OAAuB,SAACnJ,GAAD,OAAsB4Q,GAAkB5Q,EAAOmJ,KAE/F6H,GAAsBC,aAC/BR,IACA,YAAgC,IAA7BzI,EAA4B,EAA5BA,YAAaqI,EAAe,EAAfA,SACN3F,EAAQ1C,EAAY2C,cACpBuG,EAAgB,GACtB,IAAK,IAAI/H,KAAMkH,EAAU,CACrB,IAAMc,EAASd,EAASlH,GACxB,GAAKgI,GAEDA,EAAOpO,UAAU4H,cAAczB,SAASwB,IACxCyG,EAAOC,SAASzG,cAAczB,SAASwB,KAE3CwG,EAAczI,KAAK0I,GAEvB,OAAOD,K,GAaXpB,GAAcrP,QARL4Q,G,GAATtR,QACSuR,G,GAATpR,QACSqR,G,GAATnR,QACQoR,G,GAARxB,OACWyB,G,GAAXxB,UACgByB,G,GAAhBpJ,eACgBqJ,G,GAAhBzB,eACqB0B,G,GAArBrB,oBAKWsB,GAFS/B,GAAc/O,Q,sBCjDvB+Q,OAvCf,SAAuB3O,GAA4B,IAAD,EACd0I,mBAAmC,MADrB,oBACvCkG,EADuC,KAC7BC,EAD6B,KAExCC,EAAOnH,QAAQiH,GACfG,EAAc,SAAC5G,GAAD,OAAgD0G,EAAY1G,EAAM6G,gBAChFC,EAAc,kBAAMJ,EAAY,OAEhCK,EAAalP,EAAMmP,aAAenP,EAAMmP,aAAaJ,GACvD,kBAAChG,GAAA,EAAD,CAASC,MAAM,WACX,kBAACC,GAAA,EAAD,CACIC,KAAK,MACLC,QAAS4F,GAET,kBAACK,GAAA,EAAD,QAKNC,EACF,kBAACC,GAAA,EAAD,CACIR,KAAMA,EACNS,QAASN,EACTL,SAAUA,EACVY,aAAc,CACVC,SAAU,SACVC,WAAY,SAGf1P,EAAM2P,cAAcV,IAI7B,OACI,oCACKC,EACAG,ICpBEO,OAff,YAAmD,IAA7BzG,EAA4B,EAA5BA,QACZ0G,EAAUC,cAEhB,OACI,kBAAC/G,GAAA,EAAD,CAASC,MAAM,QACX,kBAACC,GAAA,EAAD,CACIC,KAAK,QACLC,QAAS,kBAAMA,EAAUA,EAAQ0G,GAAWA,EAAQE,WAEpD,kBAAC3G,GAAA,EAAD,SCPVvL,GAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CACxDC,KAAM,CACFmD,WAAYrD,EAAMkD,QAAQG,WAAWC,OAEzC2H,MAAO,CACH/I,YAAa,OACb/B,QAAS,QACT0L,WAAY,SACZC,SAAU,SACVC,aAAc,iBA2BPkG,OAvBf,SAAuBhQ,GACnB,IAAMpB,EAAUf,KACVE,EAAQkS,eACRC,EAAiBC,aAAcpS,EAAMqS,YAAYC,KAAK,OAEtDrH,EACF,kBAAClK,EAAA,EAAD,CAAYD,UAAWD,EAAQoK,OAC1BhJ,EAAMgJ,OAIT6B,EAAc7K,EAAM6K,YAAc7K,EAAM6K,YAAcqF,EACtD,kBAAC,GAAD,MAAgB,KAEtB,OACI,kBAAC9F,GAAA,EAAD,CAASvL,UAAWD,EAAQX,MACvB4M,EACA7B,EACAhJ,EAAM2K,YCvBJ2F,OAXf,SAAwBtQ,GACpB,OACI,kBAACsD,EAAA,EAAD,KACI,kBAACI,EAAA,EAAD,CACIxC,QAASlB,EAAMkB,QACf6B,UAAW/C,EAAM+C,c,sBC0BlBwN,OA3Bf,YAMyB,IALrBrP,EAKoB,EALpBA,QACA6B,EAIoB,EAJpBA,UACAmF,EAGoB,EAHpBA,SACAzE,EAEoB,EAFpBA,QACG+M,EACiB,6DACpB,OACI,kBAAClN,EAAA,EAAD,CACImN,QAAM,EACNtH,QAAS,kBAAMjB,GAAYA,GAAUzE,KAErC,kBAACC,EAAA,EAAD,CACIxC,QAASA,EACT6B,UAAWA,IAEf,kBAAC2N,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,eACIlN,QAASA,EACTyE,SAAU,SAACC,EAAO1E,GAAR,OAAoByE,GAAYA,EAASzE,KAC/C+M,OCHTI,OAjBf,YAA6E,IAA3C5D,EAA0C,EAA1CA,UACxB6D,EAAgBjD,GAAuBZ,GACvC8D,EAAUvR,YAAYsR,GACtBjJ,EAAWC,cACXoF,GAAqB,OAAP6D,QAAO,IAAPA,OAAA,EAAAA,EAAS7D,eAAe,EAC5C,OACI,kBAAC,GAAD,CACI/L,QAAQ,aACRuC,QAASwJ,EACT/E,SAAU,SAAAzE,GACN,IAAM3G,EAAS0R,GAAwBxB,GACvCpF,EAAS9K,O,sBCMViU,OAjBf,YAAqF,IAA/C/D,EAA8C,EAA9CA,UAC5B6D,EAAgBjD,GAAuBZ,GACvC8D,EAAUvR,YAAYsR,GACtBjJ,EAAWC,cACXwF,GAA8B,OAAPyD,QAAO,IAAPA,OAAA,EAAAA,EAASzD,wBAAwB,EAC9D,OACI,kBAAC,GAAD,CACInM,QAAQ,gBACRuC,QAAS4J,EACTnF,SAAU,SAAAzE,GACN,IAAM3G,EAAS2R,GAA4BzB,GAC3CpF,EAAS9K,O,WCkDVkU,ICtEAA,GDWf,WAA2B,IAAD,EACOC,cAAtBjL,GAAIgH,OADW,MACC,GADD,EAEhB6D,EAAgBjD,GAAuBZ,GACvC8D,EAAUvR,YAAYsR,GAE5B,IAAK7D,EAAW,OAAO,kBAAC,EAAD,CAAcrO,KAAK,YAE1C,IAAMyM,EACF,kBAAC,GAAD,CACIpC,MAAK,iBAAK8H,QAAL,IAAKA,OAAL,EAAKA,EAASlR,UAAd,mBAA2BkR,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAS7C,YAIjD,OACI,kBAAC,GAAD,CACI7C,QAASA,GAET,kBAACxH,EAAA,EAAD,KACI,kBAAC,GAAD,CACIoJ,UAAWA,IAEf,kBAAC,GAAD,CACIA,UAAWA,KAGnB,kBAACkE,GAAA,EAAD,MACA,kBAACtN,EAAA,EAAD,KACI,kBAACuN,GAAA,EAAD,gBAGA,kBAAC,GAAD,CACIjQ,QAAQ,eACR6B,UACI,kBAACwH,GAAA,EAAD,CAAM6G,KAAI,sBAAUN,QAAV,IAAUA,OAAV,EAAUA,EAASO,cAA7B,OACKP,QADL,IACKA,OADL,EACKA,EAASO,eAItB,kBAAC,GAAD,CACInQ,QAAQ,QACR6B,UACI,kBAACwH,GAAA,EAAD,CAAM6G,KAAI,yBAAaN,QAAb,IAAaA,OAAb,EAAaA,EAASQ,QAAhC,OACKR,QADL,IACKA,OADL,EACKA,EAASQ,SAItB,kBAAC,GAAD,CACIpQ,QAAQ,gBACR6B,UAAS,OAAE+N,QAAF,IAAEA,OAAF,EAAEA,EAASS,YAAYC,uBAEpC,kBAAC,GAAD,CACItQ,QAAQ,MACR6B,UAAS,OAAE+N,QAAF,IAAEA,OAAF,EAAEA,EAASW,S,wHEtClC5T,GAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CACxDkD,QAAS,CACLhD,QAAS,QACT2L,SAAU,SACVC,aAAc,iBAIhB4H,GAA2C,CAC7C,MAAS,kBAACC,GAAA,EAAD,MACT,MAAS,kBAACC,GAAA,EAAD,MACT,MAAS,kBAACC,GAAA,EAAD,MACT,KAAQ,kBAACC,GAAA,EAAD,MACR,KAAQ,kBAACC,GAAA,EAAD,MACR,QAAW,kBAACC,GAAA,EAAD,OAoCAC,OAjCf,SAA4BjS,GACxB,IAAMpB,EAAUf,KAEhB,OACI,kBAACyF,EAAA,EAAD,CAAUC,OAAK,GACX,kBAACuH,GAAA,EAAD,KACI,kBAACtL,EAAA,EAAD,CACIT,QAAQ,UACRwN,SAAUmF,GAAU1R,EAAMkS,OAAS,kBAACC,GAAA,EAAD,SAG3C,kBAACzO,EAAA,EAAD,CACIxC,QACI,0BAAMrC,UAAWD,EAAQsC,SACpBlB,EAAM1D,MAGfyG,UAAWqP,KAAMpS,EAAMsK,QAE3B,kBAACoG,GAAA,EAAD,KACI,kBAACzH,GAAA,EAAD,CACIC,KAAK,MACLvJ,UAAW4K,KACX6G,KAAI,mBACJiB,SAAUrS,EAAM1D,MAEhB,kBAACgW,GAAA,EAAD,UCtCLC,OAxBf,YAIyB,IAHrBzO,EAGoB,EAHpBA,UACAO,EAEoB,EAFpBA,QACAC,EACoB,EADpBA,WAaA,OACI,kBAAC,EAAD,CACIR,UAAWA,EACXK,WAdW,SAACD,GAChB,IAAMK,EAAYF,EAAQH,GACpBM,EAAUF,EAAaA,EAAWJ,GAASA,EACjD,OACI,kBAAC,GAAD,eACIO,IAAKD,GACDD,QCTd1G,GAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CACxDC,KAAM,CACFC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,QAASP,EAAMQ,QAAQ,GACvBC,OAAQ,QAEZY,OAAQ,CACJC,aAActB,EAAMQ,QAAQ,GAC5BE,MAAO,GACPD,OAAQ,GACRmC,SAAU,SA2BH6R,OAvBf,YAIgB,IAAD,IAHXtR,eAGW,MAHD,mBAGC,MAFX6B,iBAEW,MAFC,+BAED,EACLnE,GADK,EADX6T,MAEgB5U,MAChB,OACI,yBACIgB,UAAWD,EAAQX,MAEnB,kBAACuB,EAAA,EAAD,CAAQX,UAAWD,EAAQQ,QACvB,kBAACwL,GAAA,EAAD,CAAQjK,SAAS,aAErB,kBAAC7B,EAAA,EAAD,CAAYC,QAAQ,MACfmC,GAEL,kBAACpC,EAAA,EAAD,CAAYC,QAAQ,SACfgE,KCVF2P,OAff,YAA4E,IlB6HlC1M,EkB7HPf,EAAwC,EAAxCA,OACzB0N,GlB4HgC3M,EkB5Hcf,ElB4HK,SAACpI,GAAoC,IAAD,EACvF4I,EAAO5I,EAAM4J,MAAMT,GACzB,IAAKP,EAAM,MAAO,GAElB,IAAMmN,EAAuB,UAAGnN,EAAKd,gBAAR,aAAG,EAAekB,QAAO,SAAAC,GAAI,YAA4BJ,IAAxBI,EAAKO,kBAEnE,OADiB,OAAGuM,QAAH,IAAGA,OAAH,EAAGA,EAAyB5O,KAAI,SAAA8B,GAAI,OAAIA,EAAKO,oBkBhIxDwM,EAActT,YAAYoT,GAEhC,OAAKE,EAAY9K,OAGb,kBAAC,GAAD,CACIjE,UAAW+O,EAAY9K,OACvB1D,QAAS,SAAAH,GAAK,MArB6D,CACnF5H,MAD8BwW,EAqBqBD,EAAY3O,IApB9C5H,KACjBgO,KAAMwI,EAAWxI,KACjByI,aAAcD,EAAWC,aACzBb,KAAMY,EAAWZ,KACjBzH,UAAWqI,EAAWE,UALO,IAACF,GAsBtBxO,WAAY,SAAAJ,GAAK,OAAI2O,EAAY3O,GAAO8B,MANhB,kBAAC,GAAD,O,WCP9BnI,GAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CACxDiV,WAAY,CACR/U,QAAS,QACT2L,SAAU,SACVC,aAAc,WACdF,WAAY,eAgDLsJ,OA5Cf,SAAgClT,GAC5B,IAAMpB,EAAUf,KAEhB,OACI,kBAACyF,EAAA,EAAD,CACIC,OAAK,EACLkN,QAAM,EACN9Q,UAAU,IACV+J,OAAO,SACP0H,KAAMpR,EAAMwK,IAEZ,kBAACM,GAAA,EAAD,KACI,kBAACtL,EAAA,EAAD,CACIT,QAAQ,UAERwN,SAAU,kBAACsF,GAAA,EAAD,SAGlB,kBAACnO,EAAA,EAAD,CACIxC,QACI,0BAAMrC,UAAWD,EAAQqU,YACpBjT,EAAMkB,SAGf6B,UACI,0BAAMlE,UAAWD,EAAQqU,YACpBjT,EAAM+C,aAInB,kBAAC2N,GAAA,EAAD,KACI,kBAACzH,GAAA,EAAD,CACIC,KAAK,MACLvJ,UAAU,IACV+J,OAAO,SACP0H,KAAMpR,EAAMwK,IAEZ,kBAAC2I,GAAA,EAAD,UC9BLC,OAxBf,YAI6B,IAHzBtP,EAGwB,EAHxBA,UACAO,EAEwB,EAFxBA,QACAC,EACwB,EADxBA,WAaA,OACI,kBAAC,EAAD,CACIR,UAAWA,EACXK,WAdW,SAACD,GAChB,IAAMK,EAAYF,EAAQH,GACpBM,EAAUF,EAAaA,EAAWJ,GAASA,EACjD,OACI,kBAAC,GAAD,eACIO,IAAKD,GACDD,QCcL8O,OAff,YAAgE,IrBuIlBrN,EqBvIjBf,EAAkC,EAAlCA,OACnBqO,GrBsIoCtN,EqBtIkBf,ErBsIC,SAACpI,GAAwC,IAAD,EAC/F4I,EAAO5I,EAAM4J,MAAMT,GACzB,IAAKP,EAAM,MAAO,GAElB,IAAMmN,EAAuB,UAAGnN,EAAKd,gBAAR,aAAG,EAAekB,QAAO,SAAAC,GAAI,YAA4BJ,IAAxBI,EAAKS,kBAEnE,OADiB,OAAGqM,QAAH,IAAGA,OAAH,EAAGA,EAAyB5O,KAAI,SAAA8B,GAAI,OAAIA,EAAKS,oBqB1IxDgN,EAAkBhU,YAAY+T,GAEpC,OAAKC,EAAgBxL,OAGjB,kBAAC,GAAD,CACIjE,UAAWyP,EAAgBxL,OAC3B1D,QAAS,SAAAH,GAAK,MApByD,CAC/EhD,SADwBsS,EAoBqBD,EAAgBrP,IAnB/C8E,MACdjG,UAAWyQ,EAAKC,YAChBhJ,UAAW+I,EAAKR,SAChBxI,GAAIgJ,EAAKE,KAJc,IAACF,GAqBhBlP,WAAY,SAAAJ,GAAK,OAAIqP,EAAgBrP,GAAO8B,MANhB,kBAAC,GAAD,OCyBzB2N,OAjCf,YASuB,IARnBC,EAQkB,EARlBA,KACA1S,EAOkB,EAPlBA,QACA6B,EAMkB,EANlBA,UACAS,EAKkB,EALlBA,SACAqQ,EAIkB,EAJlBA,SACAtQ,EAGkB,EAHlBA,MACA4F,EAEkB,EAFlBA,QAGMrG,EAAe8Q,GACjB,kBAAC1Q,EAAA,EAAD,KACK0Q,GAIT,OACI,kBAACtQ,EAAA,EAAD,CACImN,QAAM,EACNjN,SAAUA,EACVqQ,SAAUA,EACVtQ,MAAOA,EACP4F,QAASA,GAERrG,EACD,kBAACY,EAAA,EAAD,CACIxC,QAASA,EACT6B,UAAWA,MCmDZ+Q,ICxFAA,GDYf,WAAwB,IACT7O,EAAUgM,cAAdjL,GADY,EAEe0C,mBALd,GAGD,oBAEZqL,EAFY,KAEDC,EAFC,KAGbpM,EAAWC,cAEjB,IAAK5C,EAAQ,OAAO,kBAAC,EAAD,CAActG,KAAK,yBAEvC,IAAMsV,EACF,kBAAC,GAAD,CACItE,cAAe,SAAAJ,GAAO,OAClB,kBAAC3L,EAAA,EAAD,KACI,kBAAC,GAAD,CACI1C,QAAQ,mBACRiI,QAAS,WACL,IAAMrM,EAASqJ,GAAsB,CAAClB,WACtC2C,EAAS9K,GACTyS,OAGR,kBAAC,GAAD,CACIrO,QAAQ,mBACRiI,QAAS,WACL,IAAMrM,EAASwJ,GAAsB,CAACrB,WACtC2C,EAAS9K,GACTyS,WAQlBnE,EACF,kBAAC,GAAD,CACIpC,MAAM,cACN2B,UAAWsJ,IAIbC,EACF,kBAACC,GAAA,EAAD,CACIxL,MAAOoL,EACPK,eAAe,UACf9S,UAAU,UACVvC,QAAQ,YACRmJ,SAAU,SAACC,EAAOQ,GAAR,OAAkBqL,EAAarL,KAEzC,kBAAC0L,GAAA,EAAD,CACIC,MAAM,UAEV,kBAACD,GAAA,EAAD,CACIC,MAAM,WAKZC,EACF,6BACKnJ,EACA8I,GAIHhJ,EAjEc,IAiEJ6I,EACV,kBAAC,GAAD,CAAoB9O,OAAQA,IAC5B,kBAAC,GAAD,CAAgBA,OAAQA,IAE9B,OACI,kBAAC,GAAD,CACImG,QAASmJ,GAERrJ,I,4CE7EPsJ,GAA4B,CAC9B,CACIxL,MAAO,uBACPyL,MAAO,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,iBAE9oB,CACIzL,MAAO,SACPyL,MAAO,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,iCAAS,iCAAS,eAAM,eAAM,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,uCAAU,uCAAU,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,eAAM,eAAM,eAAM,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,eAAM,eAAM,eAAM,eAAM,iCAAS,iCAAS,eAAM,iCAAS,iCAAS,iCAAS,iCAAS,eAAM,eAAM,eAAM,eAAM,mDAAY,mDAAY,eAAM,qEAAe,qEAAe,eAAM,mDAAY,qEAAe,qEAAe,qEAAe,mDAAY,mDAAY,qEAAe,qEAAe,qEAAe,mDAAY,mDAAY,qEAAe,qEAAe,qEAAe,iCAAS,iCAAS,mDAAY,mDAAY,mDAAY,iCAAS,iCAAS,mDAAY,mDAAY,mDAAY,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,SAAK,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,SAAK,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,iBAE3tD,CACIzL,MAAO,OACPyL,MAAO,CAAC,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,qBAAO,2BAAQ,2BAAQ,2BAAQ,qBAAO,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,qBAAO,qBAAO,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,qBAAO,2BAAQ,2BAAQ,2BAAQ,6BAEtnC,CACIzL,MAAO,cACPyL,MAAO,CAAC,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,qBAAO,2BAAQ,2BAAQ,2BAAQ,qBAAO,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,qBAAO,qBAAO,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,qBAAO,2BAAQ,2BAAQ,2BAAQ,6BAEtnC,CACIzL,MAAO,iBACPyL,MAAO,CAAC,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,qBAAO,2BAAQ,2BAAQ,2BAAQ,qBAAO,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,qBAAO,qBAAO,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,qBAAO,2BAAQ,2BAAQ,2BAAQ,6BAEtnC,CACIzL,MAAO,aACPyL,MAAO,CAAC,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,qBAAO,2BAAQ,2BAAQ,2BAAQ,qBAAO,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,qBAAO,qBAAO,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,qBAAO,2BAAQ,2BAAQ,2BAAQ,6BAEtnC,CACIzL,MAAO,QACPyL,MAAO,CAAC,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,qBAAO,2BAAQ,2BAAQ,2BAAQ,qBAAO,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,qBAAO,qBAAO,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,qBAAO,2BAAQ,2BAAQ,2BAAQ,6BAEtnC,CACIzL,MAAO,qBACPyL,MAAO,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,SAAK,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,SAAK,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,iBAEpiC,CACIzL,MAAO,iBACPyL,MAAO,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eA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","file":"static/js/main.739e511d.chunk.js","sourcesContent":["import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {AuthUser, UserProfile} from \"../models/AuthUser\";\nimport {RootState} from \"./rootReducer\";\n\nexport interface AuthState {\n    loading: boolean;\n    error: boolean;\n    user: AuthUser | null;\n}\n\nconst initialState: AuthState = {\n    loading: false,\n    error: false,\n    user: null\n};\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        request(state, action: PayloadAction<{\n            login: string;\n            password: string;\n        }>) {\n            state.loading = true;\n            state.error = false;\n        },\n        success(state, action: PayloadAction<AuthUser>) {\n            state.error = false;\n            state.loading = false;\n            state.user = action.payload;\n        },\n        failure(state) {\n            state.error = true;\n            state.loading = false;\n        },\n        update(state, action: PayloadAction<UserProfile>) {\n            const changes = action.payload;\n            state.user = state.user ? {\n                ...state.user,\n                ...changes\n            } : null;\n        }\n    }\n});\n\nexport const selectAuth = (state: RootState) => state.auth;\n\nexport const {\n    request: authRequest,\n    success: authSuccess,\n    failure: authFailure,\n    update: updateProfile\n} = authSlice.actions;\n\nconst authReducer = authSlice.reducer;\n\nexport default authReducer;\n","import React from 'react';\nimport {Typography} from \"@material-ui/core\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\n\nexport interface ErrorMessageProps {\n    text?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: theme.spacing(2),\n        height: '100%',\n        width: '100%'\n    }\n}));\n\nfunction ErrorMessage({\n    text = 'That’s an error'\n}: ErrorMessageProps) {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Typography\n                variant=\"h6\"\n                color=\"error\"\n            >\n                {text}\n            </Typography>\n        </div>\n    );\n}\n\nexport default ErrorMessage;\n","import React from 'react';\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport {CircularProgress} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n        height: '100%',\n    }\n}));\n\nfunction Loading() {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <CircularProgress/>\n        </div>\n    );\n}\n\nexport default Loading;\n","import React from 'react';\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport {Typography} from \"@material-ui/core\";\nimport {useSelector} from \"react-redux\";\nimport {selectAuth} from \"../../store/authSlice\";\nimport ErrorMessage from \"../../layout/ErrorMessage\";\nimport Loading from \"../../layout/Loading\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100%'\n    },\n    header: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    avatar: {\n        width: 72,\n        height: 72,\n        marginBottom: theme.spacing(2)\n    }\n}));\n\nfunction Welcome() {\n    const classes = useStyles();\n    const { user, error, loading } = useSelector(selectAuth);\n\n    if (loading || !user) return <Loading/>;\n    if (error) return <ErrorMessage/>;\n\n    return (\n        <div className={classes.root}>\n            <header className={classes.header}>\n                <Avatar\n                    className={classes.avatar}\n                    src={user?.avatarUrl}\n                />\n                <Typography\n                    variant=\"h6\"\n                    component=\"h2\"\n                >\n                    Welcome to Fake Messenger, {user?.firstName}\n                </Typography>\n                <Typography>\n\n                </Typography>\n            </header>\n        </div>\n    );\n}\n\nexport default Welcome;\n","import Welcome from \"./Welcome\";\n\nexport default Welcome;\n","import React from \"react\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport {Typography} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100%'\n    },\n    header: {\n        textAlign: 'center'\n    }\n}));\n\nfunction NotFound() {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <header className={classes.header}>\n                <Typography\n                    variant=\"h6\"\n                    component=\"h2\"\n                    color=\"error\"\n                >\n                    That’s an error 404\n                </Typography>\n                <Typography>\n                    The requested URL was not found on this server. That’s all we know.\n                </Typography>\n            </header>\n        </div>\n    )\n}\n\nexport default NotFound;\n","import NotFound from \"./NotFound\";\n\nexport const NOT_FOUND_ROUTE_PATH = '/not-found';\n\nexport default NotFound;\n","import React from 'react';\nimport {Check} from \"@material-ui/icons\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {createStyles, Theme} from \"@material-ui/core\";\n\nexport interface MessageReadStatusProps {\n    delivered?: boolean;\n    read?: boolean;\n    gutterRight?: boolean;\n}\n\nconst useStyles = (props: MessageReadStatusProps) => makeStyles((theme: Theme) => createStyles({\n    root: {\n        display: 'inline-flex',\n        alignItems: 'center',\n        marginRight: props.gutterRight\n            ? theme.spacing(.25)\n            : 0\n    },\n    deliveredIcon: {\n        zIndex: 1,\n        opacity: props.delivered ? 1 : .25\n    },\n    readIcon: {\n        marginLeft: -theme.spacing(1),\n        opacity: props.read ? 1 : .25\n    },\n}));\n\nfunction MessageReadStatus(props: MessageReadStatusProps) {\n    const classes = useStyles(props)();\n    return (\n        <span className={classes.root}>\n            <Check\n                className={classes.deliveredIcon}\n                color=\"inherit\"\n                fontSize=\"inherit\"\n            />\n            <Check\n                className={classes.readIcon}\n                color=\"inherit\"\n                fontSize=\"inherit\"\n            />\n        </span>\n    );\n}\n\nexport default MessageReadStatus;\n","import React from 'react';\nimport {CheckboxProps, createStyles, ListItem, ListItemTextProps, Theme} from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport MessageReadStatus, {MessageReadStatusProps} from \"./MessageReadStatus\";\n\nexport interface MessageListItemProps {\n    variant?: 'default' | 'checkbox';\n    direction?: 'right' | 'left';\n    color?: 'primary' | 'default';\n    text: ListItemTextProps['secondary'];\n    delivered?: MessageReadStatusProps['delivered'];\n    read?: MessageReadStatusProps['read'];\n    createdAt: Date;\n    CheckboxProps?: CheckboxProps;\n}\n\nconst useStyles = (props: MessageListItemProps) => makeStyles((theme: Theme) => {\n    const bgColor = props.color === 'primary'\n        ? theme.palette.primary.main\n        : theme.palette.background.paper;\n    const textColor = props.color === 'primary'\n        ? theme.palette.getContrastText(bgColor)\n        : 'inherit';\n    return createStyles({\n        directionRight: {\n            justifyContent: 'flex-end'\n        },\n        directionLeft: {\n            justifyContent: 'flex-start'\n        },\n        message: {\n            position: 'relative',\n            maxWidth: '90%',\n            marginLeft: props.direction === 'left'\n                ? theme.spacing(2)\n                : 'inherit',\n            marginRight: props.direction === 'right'\n                ? theme.spacing(2)\n                : 'inherit',\n            backgroundColor: bgColor,\n            color: textColor,\n            padding: theme.spacing(1),\n            borderRadius: theme.shape.borderRadius\n        },\n        status: {\n            display: 'inline-flex',\n            alignItems: 'center',\n            color: textColor\n        },\n        listItemText: {\n            margin: 0\n        },\n        tailRight: {\n            position: 'absolute',\n            right: -theme.spacing(2) + theme.shape.borderRadius,\n            top: 0,\n            display: 'block',\n            borderWidth: theme.spacing(1),\n            borderColor: bgColor,\n            borderStyle: 'solid',\n            borderRightColor: 'transparent',\n            borderBottomColor: 'transparent'\n        },\n        tailLeft: {\n            position: 'absolute',\n            left: -theme.spacing(2) + theme.shape.borderRadius,\n            top: 0,\n            display: 'block',\n            borderWidth: theme.spacing(1),\n            borderColor: bgColor,\n            borderStyle: 'solid',\n            borderLeftColor: 'transparent',\n            borderBottomColor: 'transparent'\n        },\n        listItemIcon: {\n            marginRight: 'auto'\n        }\n    })\n});\n\nfunction MessageListItem(props: MessageListItemProps) {\n    const {\n        variant = 'default',\n        direction = 'right',\n        text,\n        delivered,\n        read,\n        createdAt,\n        CheckboxProps\n    } = props;\n    const classes = useStyles(props)();\n\n    const primary = (\n        <Typography\n            variant=\"body2\"\n        >\n            {text}\n        </Typography>\n    );\n\n    const secondary = (\n        <Typography\n            variant=\"caption\"\n            color=\"inherit\"\n        >\n            {createdAt.toLocaleTimeString().substring(0, 5)}\n        </Typography>\n\n    );\n\n    const listItemIcon = variant === 'checkbox' && (\n        <ListItemIcon\n            className={classes.listItemIcon}\n        >\n            <Checkbox\n                {...CheckboxProps}\n            />\n        </ListItemIcon>\n    );\n\n    const messageStatus = (\n        <MessageReadStatus\n            delivered={delivered}\n            read={read}\n            gutterRight\n        />\n    );\n\n    const messageTail = direction === 'right'\n        ? <div className={classes.tailRight} />\n        : <div className={classes.tailLeft} />;\n\n    const className = direction === 'right'\n        ? classes.directionRight\n        : classes.directionLeft;\n    return (\n        <ListItem\n            className={className}\n            dense\n            selected={CheckboxProps?.checked}\n        >\n            {listItemIcon}\n            <div className={classes.message}>\n                <ListItemText\n                    className={classes.listItemText}\n                    primary={primary}\n                    secondary={\n                        <span className={classes.status}>\n                            {messageStatus}\n                            {secondary}\n                        </span>\n                    }\n                />\n                {messageTail}\n            </div>\n        </ListItem>\n    );\n}\n\nexport default MessageListItem;\n","import React, {ReactNode} from \"react\";\nimport List from \"@material-ui/core/List\";\n\nexport interface ListViewProps {\n    itemCount: number;\n    renderItem: (index: number) => ReactNode;\n}\n\nfunction ListView(props: ListViewProps) {\n    const renderItem = (_: null, index: number) => props.renderItem(index);\n    return (\n        <List>\n            {Array(props.itemCount).fill(null).map(renderItem)}\n        </List>\n    )\n}\n\nexport default ListView;","import React, {Key} from 'react';\nimport MessageListItem, {MessageListItemProps} from \"./MessageListItem\";\nimport ListView from \"../ListView\";\n\nexport interface MessageListProps {\n    itemCount: number;\n    getItem: (index: number) => MessageListItemProps;\n    getItemKey?: (index: number) => Key;\n}\n\nfunction MessageList({\n    itemCount,\n    getItem,\n    getItemKey\n}: MessageListProps) {\n    const renderItem = (index: number) => {\n        const itemProps = getItem(index);\n        const itemKey = getItemKey ? getItemKey(index) : index;\n        return (\n            <MessageListItem\n                key={itemKey}\n                {...itemProps}\n            />\n        )\n    };\n\n    return (\n        <ListView\n            itemCount={itemCount}\n            renderItem={renderItem}\n        />\n    );\n}\n\nexport default MessageList;\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {Message} from \"../models/Message\";\nimport {Chat} from \"../models/Chat\";\nimport {RootState} from \"./rootReducer\";\nimport {Attachment} from \"../models/Attachment\";\nimport {AttachmentLink} from \"../models/AttachmentLink\";\n\nexport interface ChatMessagesState {\n    messages: Message[] | null;\n    checkedIds: Message['id'][];\n    searchQuery: string;\n    checkModeEnabled: boolean;\n    prints: boolean;\n    loading: boolean;\n    error: boolean;\n}\n\nexport interface MessagesState {\n    [chatId: string]: ChatMessagesState\n}\n\nconst initialState: MessagesState = {};\nconst itemInitialState: ChatMessagesState = {\n    messages: null,\n    checkedIds: [],\n    searchQuery: '',\n    prints: false,\n    checkModeEnabled: false,\n    loading: false,\n    error: false\n};\n\nconst chatsSlice = createSlice({\n    name: 'chats',\n    initialState,\n    reducers: {\n        request(state, action: PayloadAction<{\n            chatId: Chat['id'];\n        }>) {\n            const { chatId } = action.payload;\n            if (!state[chatId]) state[chatId] = {...itemInitialState};\n            state[chatId].loading = true;\n            state[chatId].error = false;\n        },\n        success(state, action: PayloadAction<{\n            chatId: Chat['id'];\n            messages: Message[];\n        }>) {\n            const { chatId, messages } = action.payload;\n            state[chatId].error = false;\n            state[chatId].loading = false;\n            state[chatId].messages = messages;\n        },\n        failure(state, action: PayloadAction<{\n            chatId: Chat['id'];\n        }>) {\n            const { chatId } = action.payload;\n            state[chatId].error = true;\n            state[chatId].loading = false;\n        },\n        setPrints(state, action: PayloadAction<{\n            chatId: Chat['id'];\n            prints: boolean;\n        }>) {\n            const { chatId, prints } = action.payload;\n            state[chatId].prints = prints;\n        },\n        setSearchQuery(state, action: PayloadAction<{\n            chatId: Chat['id'];\n            searchQuery: string;\n        }>) {\n            const { chatId, searchQuery } = action.payload;\n            state[chatId].searchQuery = searchQuery;\n        },\n        addMessageRequest(state, action: PayloadAction<{\n            chatId: Chat['id'];\n            messageText: Message['text'];\n        }>) {\n            // do nothing\n        },\n        add(state, action: PayloadAction<{\n            chatId: Chat['id'];\n            message: Message;\n        }>) {\n            const {chatId, message} = action.payload;\n            let messages = state[chatId].messages;\n            if (!messages) messages = [];\n            messages.push(message);\n        },\n        switchCheckMode(state, action: PayloadAction<{\n            chatId: Chat['id'];\n            enabled?: boolean;\n        }>) {\n            const { chatId, enabled } = action.payload;\n            const chat = state[chatId];\n            const checkModeEnabled = enabled !== undefined\n                ? enabled\n                : !chat.checkModeEnabled;\n            chat.checkModeEnabled = checkModeEnabled;\n            if (!checkModeEnabled) chat.checkedIds = [];\n        },\n        removeMany(state, action: PayloadAction<{\n            chatId: Chat['id'];\n            messageIds?: Message['id'][];\n        }>) {\n            const { chatId, messageIds } = action.payload;\n            const chat = state[chatId];\n            if (messageIds) {\n                chat.messages = (chat.messages || []).filter(item => !messageIds.includes(item.id));\n            } else {\n                chat.messages = [];\n            }\n            chat.checkedIds = [];\n            chat.checkModeEnabled = false;\n        },\n        toggleCheck(state, action: PayloadAction<{\n            chatId: Chat['id'];\n            messageId: Message['id'];\n        }>) {\n            const {chatId, messageId} = action.payload;\n            const chat = state[chatId];\n            const checked = chat.checkedIds.includes(messageId);\n            if (checked) chat.checkedIds = chat.checkedIds.filter(id => id !== messageId);\n            else chat.checkedIds.push(messageId);\n        },\n        removeAttachmentFiles(state, action: PayloadAction<{\n            chatId: Chat['id'];\n        }>) {\n            const {chatId} = action.payload;\n            const chat = state[chatId];\n            chat.messages?.forEach(item => item.attachmentFile = undefined);\n        },\n        removeAttachmentLinks(state, action: PayloadAction<{\n            chatId: Chat['id'];\n        }>) {\n            const {chatId} = action.payload;\n            const chat = state[chatId];\n            chat.messages?.forEach(item => item.attachmentLink = undefined);\n        }\n    }\n});\n\nexport const selectChatById = (id: Chat['id']) => (state: RootState): ChatMessagesState => {\n    return state.chats[id] || itemInitialState;\n};\n\nexport const selectChatByIdAttachments = (id: Chat['id']) => (state: RootState): Attachment[] => {\n    const chat = state.chats[id];\n    if (!chat) return [];\n\n    const messagesWithAttachments = chat.messages?.filter(item => item.attachmentFile !== undefined);\n    const attachments = messagesWithAttachments?.map(item => item.attachmentFile);\n    return attachments as Attachment[];\n};\n\nexport const selectChatByIdAttachmentLinks = (id: Chat['id']) => (state: RootState): AttachmentLink[] => {\n    const chat = state.chats[id];\n    if (!chat) return [];\n\n    const messagesWithAttachments = chat.messages?.filter(item => item.attachmentLink !== undefined);\n    const attachments = messagesWithAttachments?.map(item => item.attachmentLink);\n    return attachments as AttachmentLink[];\n};\n\nexport const {\n    request: messagesRequest,\n    success: messagesSuccess,\n    failure: messagesFailure,\n    setSearchQuery: messagesSearchQuery,\n    add: addOneMessage,\n    addMessageRequest,\n    switchCheckMode: switchMessagesCheckMode,\n    removeMany: removeManyMessages,\n    toggleCheck: toggleCheckMessage,\n    removeAttachmentFiles,\n    removeAttachmentLinks,\n    setPrints: setMessagePrints\n} = chatsSlice.actions;\n\nconst chatsReducer = chatsSlice.reducer;\n\nexport default chatsReducer;\n","import React, {ChangeEvent, useEffect} from 'react';\nimport MessageList, {MessageListProps} from \"./MessageList\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Message} from \"../../models/Message\";\nimport {toggleCheckMessage, selectChatById, messagesRequest} from \"../../store/chatsSlice\";\nimport {MessageListItemProps} from \"./MessageListItem\";\nimport ErrorMessage from \"../../layout/ErrorMessage\";\nimport Loading from \"../../layout/Loading\";\nimport {Chat} from \"../../models/Chat\";\n\nexport interface MessageListContainerProps {\n    chatId: Chat['id'];\n}\n\nconst mapMessageToItemProps = (message: Message): MessageListItemProps => ({\n    text: message?.text,\n    delivered: message.delivered,\n    read: message.read,\n    createdAt: message.createdAt,\n    direction: message.createdByMe ? 'right' : 'left',\n    color: message.createdByMe ? 'primary' : 'default'\n});\n\nconst getMessagesFilter = (searchQuery: string) => (item: Message) => {\n    const query = searchQuery.toLowerCase();\n    return item.text.toLowerCase().includes(query);\n};\n\nfunction MessageListContainer({ chatId }: MessageListContainerProps) {\n    const { error, searchQuery, checkModeEnabled, checkedIds, messages: allMessages, loading } = useSelector(selectChatById(chatId));\n    const messagesFilter = getMessagesFilter(searchQuery);\n    const messages = searchQuery ? allMessages?.filter(messagesFilter) : allMessages;\n    const messagesFetched = Boolean(allMessages);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (!messagesFetched) {\n            const action = messagesRequest({chatId});\n            dispatch(action);\n        }\n    }, [messagesFetched, dispatch, chatId]);\n\n    if (loading || !messages) return <Loading/>;\n    if (error) return <ErrorMessage/>;\n\n    const getItem: MessageListProps['getItem'] = (index) => {\n        const message: Message = messages[index];\n        const handleChange = (event: ChangeEvent, checked: boolean) => {\n            const action = toggleCheckMessage({\n                chatId,\n                messageId: message.id\n            });\n            dispatch(action);\n        };\n\n        return {\n            ...mapMessageToItemProps(message),\n            variant: checkModeEnabled ? 'checkbox' : 'default',\n            CheckboxProps: {\n                checked: checkedIds.includes(message.id),\n                onChange: handleChange\n            }\n        };\n    };\n\n    return messages.length ? (\n        <MessageList\n            itemCount={messages.length}\n            getItem={getItem}\n            getItemKey={index => messages[index].id}\n        />\n    ) : null;\n}\n\nexport default MessageListContainer;\n","import React, {ChangeEvent, useState} from 'react';\nimport {InputBaseProps} from \"@material-ui/core\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {ArrowBack, Clear} from \"@material-ui/icons\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nexport interface SearchInputBaseProps extends Omit<InputBaseProps, 'onChange' | 'value'> {\n    initialValue?: string;\n    onChange?: (value: string) => void;\n    onBack?: VoidFunction;\n    onClear?: VoidFunction;\n}\n\nfunction SearchInputBase({\n    placeholder = 'Search',\n    initialValue = '',\n    onBack,\n    onClear,\n    onChange,\n    ...inputProps\n}: SearchInputBaseProps) {\n    const [value, setValue] = useState<string>(initialValue);\n    const handleBack = () => {\n        setValue('');\n        onBack && onBack();\n    };\n    const handleClear = () => {\n        setValue('');\n        onClear && onClear();\n    };\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n        const { value } = event.target;\n        setValue(value);\n        onChange && onChange(value);\n    };\n\n    const startAdornment = (\n        <InputAdornment position=\"start\">\n            <Tooltip title=\"Back\">\n                <IconButton\n                    edge=\"start\"\n                    onClick={handleBack}\n                >\n                    <ArrowBack/>\n                </IconButton>\n            </Tooltip>\n        </InputAdornment>\n    );\n\n    const endAdornment = value && (\n        <InputAdornment position=\"end\">\n            <IconButton\n                edge=\"end\"\n                onClick={handleClear}\n            >\n                <Clear/>\n            </IconButton>\n        </InputAdornment>\n    );\n\n    return (\n        <InputBase\n            placeholder={placeholder}\n            fullWidth\n            autoFocus\n            {...inputProps}\n            value={value}\n            onChange={handleChange}\n            startAdornment={startAdornment}\n            endAdornment={endAdornment}\n        />\n    );\n}\n\nexport default SearchInputBase;\n","import React, {ReactNode, useState} from 'react';\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar, {AvatarProps} from \"@material-ui/core/Avatar\";\nimport ListItemText, {ListItemTextProps} from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Search} from \"@material-ui/icons\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport SearchInputBase, {SearchInputBaseProps} from \"./SearchInputBase\";\nimport {createStyles, Theme, Tooltip} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nexport interface UserToolbarProps {\n    primary: ListItemTextProps['primary'];\n    secondary: ListItemTextProps['secondary'];\n    avatarSrc?: AvatarProps['src'];\n    avatarTo?: string;\n    endAction?: ReactNode;\n    startAction?: ReactNode;\n    SearchInputBaseProps?: SearchInputBaseProps\n}\n\ntype ViewName = 'search' | 'default';\nconst ESCAPE_KEY_CODE = 27;\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    primaryText: {\n        display: 'block',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n    }\n}));\n\nfunction ListItemToolbar(props: UserToolbarProps) {\n    const classes = useStyles();\n    const [viewName, setViewName] = useState<ViewName>('default');\n\n    const handleBack = () => {\n        const onBack = props.SearchInputBaseProps?.onBack;\n        setViewName('default');\n        onBack && onBack();\n    };\n\n    const searchView = () => (\n        <SearchInputBase\n            {...props.SearchInputBaseProps}\n            onKeyUp={event => event.keyCode === ESCAPE_KEY_CODE && handleBack()}\n            onBack={handleBack}\n        />\n    );\n\n    const defaultView = () => {\n        const avatar = props.avatarTo ? (\n            <Tooltip title=\"Profile\">\n                <IconButton\n                    edge=\"start\"\n                    size=\"small\"\n                    component={Link}\n                    to={props.avatarTo}\n                >\n                    <Avatar\n                        src={props.avatarSrc}\n                    />\n                </IconButton>\n            </Tooltip>\n        ) : (\n            <Avatar\n                src={props.avatarSrc}\n            />\n        );\n\n        const searchButton = (\n            <Tooltip title=\"Search\">\n                <IconButton\n                    edge={props.endAction ? false : 'end'}\n                    onClick={() => setViewName('search')}\n                >\n                    <Search/>\n                </IconButton>\n            </Tooltip>\n        );\n\n        return (\n            <>\n                {props.startAction}\n                <ListItemAvatar>\n                    {avatar}\n                </ListItemAvatar>\n                <ListItemText\n                    primary={\n                        <span className={classes.primaryText}>\n                            {props.primary}\n                        </span>\n                    }\n                    secondary={props.secondary}\n                />\n                {searchButton}\n                {props.endAction}\n            </>\n        );\n    };\n\n    const getView = (name: ViewName) => name === 'default'\n        ? defaultView()\n        : searchView();\n\n    return (\n        <Toolbar>\n            {getView(viewName)}\n        </Toolbar>\n    );\n}\n\nexport default ListItemToolbar;\n","import React, {PropsWithChildren, ReactNode, useEffect} from 'react';\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\n\nexport type ViewProps = PropsWithChildren<{\n    className?: HTMLDivElement['className'];\n    toolbar?: ReactNode;\n    footer?: ReactNode;\n    needScrollBottom?: boolean;\n}>;\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%'\n    },\n    content: {\n        overflow: 'auto',\n        flex: 'auto'\n    },\n    toolbar: {\n        backgroundColor: theme.palette.background.paper,\n        borderBottomColor: theme.palette.divider,\n        borderBottomStyle: 'solid',\n        borderBottomWidth: 1\n    },\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        borderTopColor: theme.palette.divider,\n        borderTopStyle: 'solid',\n        borderTopWidth: 1\n    },\n}));\n\nfunction View(props: ViewProps) {\n    const classes = useStyles();\n    const contentRef = React.createRef<HTMLDivElement>();\n    const classNames = [props.className, classes.root].join(' ');\n\n    useEffect(() => {\n        if (!props.needScrollBottom) return;\n\n        const { current } = contentRef;\n        if (current) current.scrollTo({\n            top: current.scrollHeight\n        });\n    });\n\n    const content = (\n        <div\n            className={classes.content}\n            ref={contentRef}\n        >\n            {props.children}\n        </div>\n    );\n\n    const toolbar = props.toolbar && (\n        <div className={classes.toolbar}>\n            {props.toolbar}\n        </div>\n    );\n\n    const footer = props.footer && (\n        <div className={classes.footer}>\n            {props.footer}\n        </div>\n    );\n\n    return (\n        <div className={classNames}>\n            {toolbar}\n            {content}\n            {footer}\n        </div>\n    );\n}\n\nexport default View;\n","import {createEntityAdapter, createSelector, createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {Contact} from \"../models/Contact\";\nimport {RootState} from \"./rootReducer\";\n\nconst contactsAdapter = createEntityAdapter<Contact>();\n\nconst initialState = contactsAdapter.getInitialState<{\n    searchQuery: string;\n    loading: boolean;\n    error: boolean;\n}>({\n    searchQuery: '',\n    loading: false,\n    error: false\n});\n\nconst contactsSlice = createSlice({\n    name: 'contacts',\n    initialState,\n    reducers: {\n        request(state) {\n            state.loading = true;\n            state.error = false;\n        },\n        success(state, action: PayloadAction<Contact[]>) {\n            state.error = false;\n            state.loading = false;\n            contactsAdapter.addMany(state, action.payload);\n        },\n        failure(state) {\n            state.error = true;\n            state.loading = false;\n        },\n        addOne: contactsAdapter.addOne,\n        removeOne: contactsAdapter.removeOne,\n        setSearchQuery(state, action: PayloadAction<string>) {\n            state.searchQuery = action.payload;\n        },\n        switchFavorite(state, action: PayloadAction<Contact['id']>) {\n            const contactId = action.payload;\n            const inBlackList = state.entities[contactId]?.inBlackList;\n            contactsAdapter.updateOne(state, {\n                id: contactId,\n                changes: {\n                    inBlackList: !inBlackList\n                }\n            });\n        },\n        switchNotifications(state, action: PayloadAction<Contact['id']>) {\n            const contactId = action.payload;\n            const notificationsEnabled = state.entities[contactId]?.notificationsEnabled;\n            contactsAdapter.updateOne(state, {\n                id: contactId,\n                changes: {\n                    notificationsEnabled: !notificationsEnabled\n                }\n            });\n        }\n    }\n});\n\nexport const selectContacts = (state: RootState) => state.contacts;\n\nexport const {\n    selectAll: selectAllContacts,\n    selectById: selectContactById\n} = contactsAdapter.getSelectors<RootState>(selectContacts);\n\nexport const getContactByIdSelector = (id: Contact['id']) => (state: RootState) => selectContactById(state, id);\n\nexport const selectFoundContacts = createSelector(\n    selectContacts,\n    ({ searchQuery, entities }) => {\n        const query = searchQuery.toLowerCase();\n        const searchResults = [];\n        for (let id in entities) {\n            const entity = entities[id];\n            if (!entity) continue;\n            const match =\n                entity.firstName.toLowerCase().includes(query) ||\n                entity.lastName.toLowerCase().includes(query);\n            if (!match) continue;\n            searchResults.push(entity);\n        }\n        return searchResults;\n    }\n);\n\nexport const {\n    request: contactsRequest,\n    success: contactsSuccess,\n    failure: contactsFailure,\n    addOne: addOneContact,\n    removeOne: removeContactById,\n    setSearchQuery: contactsSearchQuery,\n    switchFavorite: contactsSwitchBlackList,\n    switchNotifications: contactsSwitchNotifications,\n} = contactsSlice.actions;\n\nconst contactsReducer = contactsSlice.reducer;\n\nexport default contactsReducer;\n","import React, {ReactNode, useState} from 'react';\nimport {IconButtonProps, Tooltip} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {MoreVert} from \"@material-ui/icons\";\nimport Popover from \"@material-ui/core/Popover\";\n\nexport interface PopoverButtonProps {\n    renderButton?: (onClick: IconButtonProps['onClick']) => ReactNode;\n    renderPopover: (onClose: VoidFunction) => ReactNode;\n}\n\nfunction PopoverAction(props: PopoverButtonProps) {\n    const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n    const open = Boolean(anchorEl);\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => setAnchorEl(event.currentTarget);\n    const handleClose = () => setAnchorEl(null);\n\n    const iconButton = props.renderButton ? props.renderButton(handleClick) : (\n        <Tooltip title=\"Details\">\n            <IconButton\n                edge=\"end\"\n                onClick={handleClick}\n            >\n                <MoreVert/>\n            </IconButton>\n        </Tooltip>\n    );\n\n    const popover = (\n        <Popover\n            open={open}\n            onClose={handleClose}\n            anchorEl={anchorEl}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left'\n            }}\n        >\n            {props.renderPopover(handleClose)}\n        </Popover>\n    );\n\n    return (\n        <>\n            {iconButton}\n            {popover}\n        </>\n    );\n}\n\nexport default PopoverAction;\n","import React from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {ArrowBack} from \"@material-ui/icons\";\n\nexport interface BackButtonProps {\n    onClick?: (history: ReturnType<typeof useHistory>) => void;\n}\n\nfunction BackButton({ onClick }: BackButtonProps) {\n    const history = useHistory();\n\n    return (\n        <Tooltip title=\"Back\">\n            <IconButton\n                edge=\"start\"\n                onClick={() => onClick ? onClick(history) : history.goBack()}\n            >\n                <ArrowBack/>\n            </IconButton>\n        </Tooltip>\n    );\n}\n\nexport default BackButton;","import React, {ReactNode} from 'react';\nimport Typography, {TypographyProps} from \"@material-ui/core/Typography\";\nimport {createStyles, Theme, Toolbar, useMediaQuery, useTheme} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport BackButton from \"./BackButton\";\n\nexport interface ViewToolbarProps {\n    title?: TypographyProps['children'];\n    startAction?: ReactNode;\n    endAction?: ReactNode;\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        background: theme.palette.background.paper\n    },\n    title: {\n        marginRight: 'auto',\n        display: 'block',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n    }\n}));\n\nfunction LayoutToolbar(props: ViewToolbarProps) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const isBreakpointSm = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const title = (\n        <Typography className={classes.title}>\n            {props.title}\n        </Typography>\n    );\n\n    const startAction = props.startAction ? props.startAction : isBreakpointSm\n        ? <BackButton/> : null;\n\n    return (\n        <Toolbar className={classes.root}>\n            {startAction}\n            {title}\n            {props.endAction}\n        </Toolbar>\n    );\n}\n\nexport default LayoutToolbar;\n","import React from 'react';\nimport ListItemText, {ListItemTextProps} from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\n\nexport interface DetailListItemProps {\n    primary?: ListItemTextProps['primary'];\n    secondary?: ListItemTextProps['secondary'];\n}\n\nfunction DetailListItem(props: DetailListItemProps) {\n    return (\n        <ListItem>\n            <ListItemText\n                primary={props.primary}\n                secondary={props.secondary}\n            />\n        </ListItem>\n    );\n}\n\nexport default DetailListItem;\n","import React from 'react';\nimport {ListItem, ListItemTextProps, SwitchProps} from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Switch from \"@material-ui/core/Switch\";\n\nexport type ListItemSwitchProps = Omit<SwitchProps, 'onChange'> & {\n    primary?: ListItemTextProps['primary'];\n    secondary?: ListItemTextProps['secondary'];\n    checked: boolean;\n    onChange?: (checked: boolean) => void;\n}\n\nfunction ListItemSwitch({\n    primary,\n    secondary,\n    onChange,\n    checked,\n    ...switchProps\n}: ListItemSwitchProps) {\n    return (\n        <ListItem\n            button\n            onClick={() => onChange && onChange(!checked)}\n        >\n            <ListItemText\n                primary={primary}\n                secondary={secondary}\n            />\n            <ListItemSecondaryAction>\n                <Switch\n                    checked={checked}\n                    onChange={(event, checked) => onChange && onChange(checked)}\n                    {...switchProps}\n                />\n            </ListItemSecondaryAction>\n        </ListItem>\n    );\n}\n\nexport default ListItemSwitch;\n","import React from 'react';\nimport ListItemSwitch from \"../../components/ListItemSwitch\";\nimport {Contact} from \"../../models/Contact\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    contactsSwitchBlackList,\n    getContactByIdSelector\n} from \"../../store/contactsSlice\";\n\nexport interface BlackListContactSwitchProps {\n    contactId: Contact['id'];\n}\n\nfunction BlackListContactSwitch({ contactId }: BlackListContactSwitchProps) {\n    const selectContact = getContactByIdSelector(contactId);\n    const contact = useSelector(selectContact);\n    const dispatch = useDispatch();\n    const inBlackList = contact?.inBlackList || false;\n    return (\n        <ListItemSwitch\n            primary=\"Black List\"\n            checked={inBlackList}\n            onChange={checked => {\n                const action = contactsSwitchBlackList(contactId);\n                dispatch(action);\n            }}\n        />\n    );\n}\n\nexport default BlackListContactSwitch;\n","import React from 'react';\nimport ListItemSwitch from \"../../components/ListItemSwitch\";\nimport {Contact} from \"../../models/Contact\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    contactsSwitchNotifications,\n    getContactByIdSelector\n} from \"../../store/contactsSlice\";\n\nexport interface NotificationsContactSwitchProps {\n    contactId: Contact['id'];\n}\n\nfunction NotificationsContactSwitch({ contactId }: NotificationsContactSwitchProps) {\n    const selectContact = getContactByIdSelector(contactId);\n    const contact = useSelector(selectContact);\n    const dispatch = useDispatch();\n    const notificationsEnabled = contact?.notificationsEnabled || false;\n    return (\n        <ListItemSwitch\n            primary=\"Notifications\"\n            checked={notificationsEnabled}\n            onChange={checked => {\n                const action = contactsSwitchNotifications(contactId);\n                dispatch(action);\n            }}\n        />\n    );\n}\n\nexport default NotificationsContactSwitch;\n","import React from 'react';\nimport View from \"../../layout/View\";\nimport LayoutToolbar from \"../../layout/LayoutToolbar\";\nimport { useParams } from 'react-router-dom';\nimport {useSelector} from \"react-redux\";\nimport {getContactByIdSelector} from \"../../store/contactsSlice\";\nimport {List} from \"@material-ui/core\";\nimport ErrorMessage from \"../../layout/ErrorMessage\";\nimport DetailListItem from \"../../components/DetailListItem\";\nimport BlackListContactSwitch from \"./BlackListContactSwitch\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport NotificationsContactSwitch from \"./NotificationsContactSwitch\";\nimport Link from \"@material-ui/core/Link\";\n\nfunction ContactProfile() {\n    const {id: contactId = ''} = useParams();\n    const selectContact = getContactByIdSelector(contactId);\n    const contact = useSelector(selectContact);\n\n    if (!contactId) return <ErrorMessage text=\"No data\" />;\n\n    const toolbar = (\n        <LayoutToolbar\n            title={`${contact?.firstName} ${contact?.lastName}`}\n        />\n    );\n\n    return (\n        <View\n            toolbar={toolbar}\n        >\n            <List>\n                <BlackListContactSwitch\n                    contactId={contactId}\n                />\n                <NotificationsContactSwitch\n                    contactId={contactId}\n                />\n            </List>\n            <Divider/>\n            <List>\n                <ListSubheader>\n                    Details\n                </ListSubheader>\n                <DetailListItem\n                    primary=\"Phone number\"\n                    secondary={\n                        <Link href={`tel: ${contact?.phoneNumber}`}>\n                            {contact?.phoneNumber}\n                        </Link>\n                    }\n                />\n                <DetailListItem\n                    primary=\"Email\"\n                    secondary={\n                        <Link href={`mailto: ${contact?.email}`}>\n                            {contact?.email}\n                        </Link>\n                    }\n                />\n                <DetailListItem\n                    primary=\"Date of Birth\"\n                    secondary={contact?.dateOfBirth.toLocaleDateString()}\n                />\n                <DetailListItem\n                    primary=\"Bio\"\n                    secondary={contact?.bio}\n                />\n            </List>\n        </View>\n    );\n}\n\nexport default ContactProfile;\n","import ContactProfile from \"./ContactProfile\";\n\nexport const CONTACT_PROFILE_ROUTE_PATH = '/chat/:id/profile';\n\nexport default ContactProfile;\n","import React, {ReactElement} from \"react\";\nimport bytes from \"bytes\";\nimport {AvatarProps, createStyles, Theme} from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport {\n    Audiotrack,\n    PlayCircleOutline,\n    Image,\n    TextFields,\n    Message,\n    FontDownload,\n    Attachment, GetApp\n} from \"@material-ui/icons\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Link from \"@material-ui/core/Link\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nexport interface AttachmentListItemProps {\n    name: File['name'];\n    size: File['size'];\n    type: File['type'];\n    lastModified: File['lastModified'];\n    avatarSrc?: AvatarProps['src'];\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    primary: {\n        display: 'block',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    }\n}));\n\nconst typeIcons: {[key: string]: ReactElement} = {\n    'video': <PlayCircleOutline/>,\n    'audio': <Audiotrack/>,\n    'image': <Image/>,\n    'font': <FontDownload/>,\n    'text': <TextFields/>,\n    'message': <Message />\n};\n\nfunction AttachmentListItem(props: AttachmentListItemProps) {\n    const classes = useStyles();\n\n    return (\n        <ListItem dense>\n            <ListItemAvatar>\n                <Avatar\n                    variant=\"rounded\"\n                    children={typeIcons[props.type] || <Attachment/>}\n                />\n            </ListItemAvatar>\n            <ListItemText\n                primary={\n                    <span className={classes.primary}>\n                        {props.name}\n                    </span>\n                }\n                secondary={bytes(props.size)}\n            />\n            <ListItemSecondaryAction>\n                <IconButton\n                    edge=\"end\"\n                    component={Link}\n                    href={`data:text/plain;`}\n                    download={props.name}\n                >\n                    <GetApp/>\n                </IconButton>\n            </ListItemSecondaryAction>\n        </ListItem>\n    );\n}\n\nexport default AttachmentListItem;\n","import React, {Key} from 'react';\nimport AttachmentListItem, {AttachmentListItemProps} from \"./AttachmentListItem\";\nimport ListView from \"../ListView\";\n\nexport interface AttachmentListProps {\n    itemCount: number;\n    getItem: (index: number) => AttachmentListItemProps;\n    getItemKey?: (index: number) => Key;\n}\n\nfunction AttachmentList({\n    itemCount,\n    getItem,\n    getItemKey\n}: AttachmentListProps) {\n    const renderItem = (index: number) => {\n        const itemProps = getItem(index);\n        const itemKey = getItemKey ? getItemKey(index) : index;\n        return (\n            <AttachmentListItem\n                key={itemKey}\n                {...itemProps}\n            />\n        )\n    };\n\n    return (\n        <ListView\n            itemCount={itemCount}\n            renderItem={renderItem}\n        />\n    );\n}\n\nexport default AttachmentList;\n","import React, {ReactNode} from \"react\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport {Typography} from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {Search} from \"@material-ui/icons\";\n\nexport interface EmptyProps {\n    primary?: string;\n    secondary?: string;\n    image?: ReactNode;\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: theme.spacing(2),\n        height: '100%'\n    },\n    avatar: {\n        marginBottom: theme.spacing(2),\n        width: 72,\n        height: 72,\n        fontSize: 40\n    }\n}));\n\nfunction Empty({\n    primary = 'There is nothing',\n    secondary = 'Maybe something will be here',\n    image\n}: EmptyProps) {\n    const classes = useStyles();\n    return (\n        <div\n            className={classes.root}\n        >\n            <Avatar className={classes.avatar}>\n                <Search fontSize=\"inherit\" />\n            </Avatar>\n            <Typography variant=\"h6\">\n                {primary}\n            </Typography>\n            <Typography variant=\"body1\">\n                {secondary}\n            </Typography>\n        </div>\n    )\n}\n\nexport default Empty;","import React from 'react';\nimport AttachmentList from \"./AttachmentList\";\nimport {Attachment} from \"../../models/Attachment\";\nimport {AttachmentListItemProps} from \"./AttachmentListItem\";\nimport {useSelector} from \"react-redux\";\nimport {Chat} from \"../../models/Chat\";\nimport {selectChatByIdAttachments} from \"../../store/chatsSlice\";\nimport Empty from \"../../layout/Empty\";\n\nconst mapAttachmentToItemProps = (attachment: Attachment): AttachmentListItemProps => ({\n    name: attachment.name,\n    size: attachment.size,\n    lastModified: attachment.lastModified,\n    type: attachment.type,\n    avatarSrc: attachment.imageUrl\n});\n\nexport interface AttachmentListContainerProps {\n    chatId: Chat['id'];\n}\n\nfunction AttachmentListContainer({ chatId }: AttachmentListContainerProps) {\n    const selectAttachments = selectChatByIdAttachments(chatId);\n    const attachments = useSelector(selectAttachments);\n\n    if (!attachments.length) return <Empty/>;\n\n    return (\n        <AttachmentList\n            itemCount={attachments.length}\n            getItem={index => mapAttachmentToItemProps(attachments[index])}\n            getItemKey={index => attachments[index].id}\n        />\n    );\n}\n\nexport default AttachmentListContainer;\n","import React from \"react\";\nimport {AvatarProps, createStyles, Theme} from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {OpenInNew, Image} from \"@material-ui/icons\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nexport interface AttachmentLinkListItemProps {\n    primary: string;\n    secondary: string;\n    to: string;\n    avatarSrc?: AvatarProps['src'];\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    singleLine: {\n        display: 'block',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap'\n    }\n}));\n\nfunction AttachmentLinkListItem(props: AttachmentLinkListItemProps) {\n    const classes = useStyles();\n\n    return (\n        <ListItem\n            dense\n            button\n            component=\"a\"\n            target=\"_blank\"\n            href={props.to}\n        >\n            <ListItemAvatar>\n                <Avatar\n                    variant=\"rounded\"\n                    //src={props.avatarSrc}\n                    children={<Image/>}\n                />\n            </ListItemAvatar>\n            <ListItemText\n                primary={\n                    <span className={classes.singleLine}>\n                        {props.primary}\n                    </span>\n                }\n                secondary={\n                    <span className={classes.singleLine}>\n                        {props.secondary}\n                    </span>\n                }\n            />\n            <ListItemSecondaryAction>\n                <IconButton\n                    edge=\"end\"\n                    component=\"a\"\n                    target=\"_blank\"\n                    href={props.to}\n                >\n                    <OpenInNew/>\n                </IconButton>\n            </ListItemSecondaryAction>\n        </ListItem>\n    );\n}\n\nexport default AttachmentLinkListItem;\n","import React, {Key} from 'react';\nimport AttachmentLinkListItem, {AttachmentLinkListItemProps} from \"./AttachmentLinkListItem\";\nimport ListView from \"../ListView\";\n\nexport interface AttachmentLinkListProps {\n    itemCount: number;\n    getItem: (index: number) => AttachmentLinkListItemProps;\n    getItemKey?: (index: number) => Key;\n}\n\nfunction AttachmentLinkList({\n    itemCount,\n    getItem,\n    getItemKey\n}: AttachmentLinkListProps) {\n    const renderItem = (index: number) => {\n        const itemProps = getItem(index);\n        const itemKey = getItemKey ? getItemKey(index) : index;\n        return (\n            <AttachmentLinkListItem\n                key={itemKey}\n                {...itemProps}\n            />\n        )\n    };\n\n    return (\n        <ListView\n            itemCount={itemCount}\n            renderItem={renderItem}\n        />\n    );\n}\n\nexport default AttachmentLinkList;\n","import React from 'react';\nimport AttachmentLinkList from \"./AttachmentLinkList\";\nimport {AttachmentLink} from \"../../models/AttachmentLink\";\nimport {AttachmentLinkListItemProps} from \"./AttachmentLinkListItem\";\nimport {useSelector} from \"react-redux\";\nimport {Chat} from \"../../models/Chat\";\nimport {selectChatByIdAttachmentLinks} from \"../../store/chatsSlice\";\nimport Empty from \"../../layout/Empty\";\n\nconst mapLinkToItemProps = (link: AttachmentLink): AttachmentLinkListItemProps => ({\n    primary: link.title,\n    secondary: link.description,\n    avatarSrc: link.imageUrl,\n    to: link.url,\n});\n\nexport interface LinkListContainerProps {\n    chatId: Chat['id'];\n}\n\nfunction LinkListContainer({ chatId }: LinkListContainerProps) {\n    const selectAttachmentLinks = selectChatByIdAttachmentLinks(chatId);\n    const attachmentLinks = useSelector(selectAttachmentLinks);\n\n    if (!attachmentLinks.length) return <Empty/>;\n\n    return (\n        <AttachmentLinkList\n            itemCount={attachmentLinks.length}\n            getItem={index => mapLinkToItemProps(attachmentLinks[index])}\n            getItemKey={index => attachmentLinks[index].id}\n        />\n    );\n}\n\nexport default LinkListContainer;\n","import React from \"react\";\nimport {ListItem, ListItemIconProps, ListItemProps, ListItemTextProps} from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\n\nexport type MenuListItemProps = {\n    primary?: ListItemTextProps['primary'];\n    secondary?: ListItemTextProps['secondary'];\n    icon?: ListItemIconProps['children'];\n    button?: ListItemProps['button'];\n    selected?: ListItemProps['selected'];\n    disabled?: ListItemProps['disabled'];\n    dense?: ListItemProps['dense'];\n    onClick?: VoidFunction;\n}\n\nfunction MenuListItem({\n    icon,\n    primary,\n    secondary,\n    selected,\n    disabled,\n    dense,\n    onClick\n\n}: MenuListItemProps) {\n    const listItemIcon = icon && (\n        <ListItemIcon>\n            {icon}\n        </ListItemIcon>\n    );\n\n    return (\n        <ListItem\n            button\n            selected={selected}\n            disabled={disabled}\n            dense={dense}\n            onClick={onClick}\n        >\n            {listItemIcon}\n            <ListItemText\n                primary={primary}\n                secondary={secondary}\n            />\n        </ListItem>\n    )\n}\n\nexport default MenuListItem;","import React, {useState} from 'react';\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport View from \"../../layout/View\";\nimport {useParams} from \"react-router-dom\";\nimport ErrorMessage from \"../../layout/ErrorMessage\";\nimport AttachmentList from \"../../components/AttachmentList\";\nimport AttachmentLinkList from \"../../components/AttachmentLinkList\";\nimport PopoverAction from \"../../components/PopoverAction\";\nimport List from \"@material-ui/core/List\";\nimport MenuListItem from \"../../components/MenuListItem\";\nimport {useDispatch} from \"react-redux\";\nimport {removeAttachmentFiles, removeAttachmentLinks} from \"../../store/chatsSlice\";\nimport LayoutToolbar from \"../../layout/LayoutToolbar\";\n\nconst FILES_TAB_VALUE = 0;\nconst LINKS_TAB_VALUE = 1;\n\nfunction Attachments() {\n    const {id: chatId} = useParams();\n    const [tabsValue, setTabsValue] = useState(FILES_TAB_VALUE);\n    const dispatch = useDispatch();\n\n    if (!chatId) return <ErrorMessage text=\"Failed fetch chat id\" />;\n\n    const popoverMenuButton = (\n        <PopoverAction\n            renderPopover={onClose => (\n                <List>\n                    <MenuListItem\n                        primary=\"Delete all files\"\n                        onClick={() => {\n                            const action = removeAttachmentFiles({chatId});\n                            dispatch(action);\n                            onClose();\n                        }}\n                    />\n                    <MenuListItem\n                        primary=\"Delete all links\"\n                        onClick={() => {\n                            const action = removeAttachmentLinks({chatId});\n                            dispatch(action);\n                            onClose();\n                        }}\n                    />\n                </List>\n            )}\n        />\n    );\n\n    const toolbar = (\n        <LayoutToolbar\n            title=\"Attachments\"\n            endAction={popoverMenuButton}\n        />\n    );\n\n    const tabs = (\n        <Tabs\n            value={tabsValue}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            variant=\"fullWidth\"\n            onChange={(event, value) => setTabsValue(value)}\n        >\n            <Tab\n                label=\"Files\"\n            />\n            <Tab\n                label=\"Links\"\n            />\n        </Tabs>\n    );\n\n    const toolbarWithTabs = (\n        <div>\n            {toolbar}\n            {tabs}\n        </div>\n    );\n\n    const content = tabsValue === LINKS_TAB_VALUE\n        ? <AttachmentLinkList chatId={chatId}/>\n        : <AttachmentList chatId={chatId}/>;\n\n    return (\n        <View\n            toolbar={toolbarWithTabs}\n        >\n            {content}\n        </View>\n    )\n}\n\nexport default Attachments;\n","import Attachments from \"./Attachments\";\n\nexport const CHAT_ATTACHMENTS_ROUTE_PATH = '/chat/:id/attachments';\nexport const CHAT_ATTACHMENTS_FILES_ROUTE_PATH = '/chat/:id/attachments/files';\nexport const CHAT_ATTACHMENTS_LINKS_ROUTE_PATH = '/chat/:id/attachments/links';\n\nexport default Attachments;\n","import React from 'react';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\n\ninterface EmojiGroup {\n    title: string,\n    items: string[];\n}\n\n// Source: https://getemoji.com/\nconst emojiGroups: EmojiGroup[] = [\n    {\n        title: 'Smileys and Emotions',\n        items: ['😀', '😁', '😂', '🤣', '😃', '😄', '😅', '😆', '😉', '😊', '😋', '😎', '😍', '😘', '🥰', '😗', '😙', '😚', '☺️', '🙂', '🤗', '🤩', '🤔', '🤨', '😐', '😑', '😶', '🙄', '😏', '😣', '😥', '😮', '🤐', '😯', '😪', '😫', '😴', '😌', '😛', '😜', '😝', '🤤', '😒', '😓', '😔', '😕', '🙃', '🤑', '😲', '☹️', '🙁', '😖', '😞', '😟', '😤', '😢', '😭', '😦', '😧', '😨', '😩', '🤯', '😬', '😰', '😱', '🥵', '🥶', '😳', '🤪', '😵', '😡', '😠', '🤬', '😷', '🤒', '🤕', '🤢', '🤮', '🤧', '😇', '🤠', '🤡', '🥳', '🥴', '🥺', '🤥', '🤫', '🤭', '🧐', '🤓', '😈', '👿', '👹', '👺', '💀', '👻', '👽', '🤖', '💩', '😺', '😸', '😹', '😻', '😼', '😽', '🙀', '😿', '😾']\n    },\n    {\n        title: 'People',\n        items: ['👶', '👧', '🧒', '👦', '👩', '🧑', '👨', '👵', '🧓', '👴', '👲', '👳‍♀️', '👳‍♂️', '🧕', '🧔', '👱‍♂️', '👱‍♀️', '👨‍🦰', '👩‍🦰', '👨‍🦱', '👩‍🦱', '👨‍🦲', '👩‍🦲', '👨‍🦳', '👩‍🦳', '🦸‍♀️', '🦸‍♂️', '🦹‍♀️', '🦹‍♂️', '👮‍♀️', '👮‍♂️', '👷‍♀️', '👷‍♂️', '💂‍♀️', '💂‍♂️', '🕵️‍♀️', '🕵️‍♂️', '👩‍⚕️', '👨‍⚕️', '👩‍🌾', '👨‍🌾', '👩‍🍳', '👨‍🍳', '👩‍🎓', '👨‍🎓', '👩‍🎤', '👨‍🎤', '👩‍🏫', '👨‍🏫', '👩‍🏭', '👨‍🏭', '👩‍💻', '👨‍💻', '👩‍💼', '👨‍💼', '👩‍🔧', '👨‍🔧', '👩‍🔬', '👨‍🔬', '👩‍🎨', '👨‍🎨', '👩‍🚒', '👨‍🚒', '👩‍✈️', '👨‍✈️', '👩‍🚀', '👨‍🚀', '👩‍⚖️', '👨‍⚖️', '👰', '🤵', '👸', '🤴', '🤶', '🎅', '🧙‍♀️', '🧙‍♂️', '🧝‍♀️', '🧝‍♂️', '🧛‍♀️', '🧛‍♂️', '🧟‍♀️', '🧟‍♂️', '🧞‍♀️', '🧞‍♂️', '🧜‍♀️', '🧜‍♂️', '🧚‍♀️', '🧚‍♂️', '👼', '🤰', '🤱', '🙇‍♀️', '🙇‍♂️', '💁‍♀️', '💁‍♂️', '🙅‍♀️', '🙅‍♂️', '🙆‍♀️', '🙆‍♂️', '🙋‍♀️', '🙋‍♂️', '🤦‍♀️', '🤦‍♂️', '🤷‍♀️', '🤷‍♂️', '🙎‍♀️', '🙎‍♂️', '🙍‍♀️', '🙍‍♂️', '💇‍♀️', '💇‍♂️', '💆‍♀️', '💆‍♂️', '🧖‍♀️', '🧖‍♂️', '💅', '🤳', '💃', '🕺', '👯‍♀️', '👯‍♂️', '🕴', '🚶‍♀️', '🚶‍♂️', '🏃‍♀️', '🏃‍♂️', '👫', '👭', '👬', '💑', '👩‍❤️‍👩', '👨‍❤️‍👨', '💏', '👩‍❤️‍💋‍👩', '👨‍❤️‍💋‍👨', '👪', '👨‍👩‍👧', '👨‍👩‍👧‍👦', '👨‍👩‍👦‍👦', '👨‍👩‍👧‍👧', '👩‍👩‍👦', '👩‍👩‍👧', '👩‍👩‍👧‍👦', '👩‍👩‍👦‍👦', '👩‍👩‍👧‍👧', '👨‍👨‍👦', '👨‍👨‍👧', '👨‍👨‍👧‍👦', '👨‍👨‍👦‍👦', '👨‍👨‍👧‍👧', '👩‍👦', '👩‍👧', '👩‍👧‍👦', '👩‍👦‍👦', '👩‍👧‍👧', '👨‍👦', '👨‍👧', '👨‍👧‍👦', '👨‍👦‍👦', '👨‍👧‍👧', '🤲', '👐', '🙌', '👏', '🤝', '👍', '👎', '👊', '✊', '🤛', '🤜', '🤞', '✌️', '🤟', '🤘', '👌', '👈', '👉', '👆', '👇', '☝️', '✋', '🤚', '🖐', '🖖', '👋', '🤙', '💪', '🦵', '🦶', '🖕', '✍️', '🙏', '💍', '💄', '💋', '👄', '👅', '👂', '👃', '👣', '👁', '👀', '🧠', '🦴', '🦷', '🗣', '👤', '👥']\n    },\n    {\n        title: 'Pale',\n        items: ['👶🏻', '👦🏻', '👧🏻', '👨🏻', '👩🏻', '👱🏻‍♀️', '👱🏻', '👴🏻', '👵🏻', '👲🏻', '👳🏻‍♀️', '👳🏻', '👮🏻‍♀️', '👮🏻', '👷🏻‍♀️', '👷🏻', '💂🏻‍♀️', '💂🏻', '🕵🏻‍♀️', '🕵🏻', '👩🏻‍⚕️', '👨🏻‍⚕️', '👩🏻‍🌾', '👨🏻‍🌾', '👩🏻‍🍳', '👨🏻‍🍳', '👩🏻‍🎓', '👨🏻‍🎓', '👩🏻‍🎤', '👨🏻‍🎤', '👩🏻‍🏫', '👨🏻‍🏫', '👩🏻‍🏭', '👨🏻‍🏭', '👩🏻‍💻', '👨🏻‍💻', '👩🏻‍💼', '👨🏻‍💼', '👩🏻‍🔧', '👨🏻‍🔧', '👩🏻‍🔬', '👨🏻‍🔬', '👩🏻‍🎨', '👨🏻‍🎨', '👩🏻‍🚒', '👨🏻‍🚒', '👩🏻‍✈️', '👨🏻‍✈️', '👩🏻‍🚀', '👨🏻‍🚀', '👩🏻‍⚖️', '👨🏻‍⚖️', '🤶🏻', '🎅🏻', '👸🏻', '🤴🏻', '👰🏻', '🤵🏻', '👼🏻', '🤰🏻', '🙇🏻‍♀️', '🙇🏻', '💁🏻', '💁🏻‍♂️', '🙅🏻', '🙅🏻‍♂️', '🙆🏻', '🙆🏻‍♂️', '🙋🏻', '🙋🏻‍♂️', '🤦🏻‍♀️', '🤦🏻‍♂️', '🤷🏻‍♀️', '🤷🏻‍♂️', '🙎🏻', '🙎🏻‍♂️', '🙍🏻', '🙍🏻‍♂️', '💇🏻', '💇🏻‍♂️', '💆🏻', '💆🏻‍♂️', '🕴🏻', '💃🏻', '🕺🏻', '🚶🏻‍♀️', '🚶🏻', '🏃🏻‍♀️', '🏃🏻', '🤲🏻', '👐🏻', '🙌🏻', '👏🏻', '🙏🏻', '👍🏻', '👎🏻', '👊🏻', '✊🏻', '🤛🏻', '🤜🏻', '🤞🏻', '✌🏻', '🤟🏻', '🤘🏻', '👌🏻', '👈🏻', '👉🏻', '👆🏻', '👇🏻', '☝🏻', '✋🏻', '🤚🏻', '🖐🏻', '🖖🏻', '👋🏻', '🤙🏻', '💪🏻', '🖕🏻', '✍🏻', '🤳🏻', '💅🏻', '👂🏻', '👃🏻']\n    },\n    {\n        title: 'Cream White',\n        items: ['👶🏼', '👦🏼', '👧🏼', '👨🏼', '👩🏼', '👱🏼‍♀️', '👱🏼', '👴🏼', '👵🏼', '👲🏼', '👳🏼‍♀️', '👳🏼', '👮🏼‍♀️', '👮🏼', '👷🏼‍♀️', '👷🏼', '💂🏼‍♀️', '💂🏼', '🕵🏼‍♀️', '🕵🏼', '👩🏼‍⚕️', '👨🏼‍⚕️', '👩🏼‍🌾', '👨🏼‍🌾', '👩🏼‍🍳', '👨🏼‍🍳', '👩🏼‍🎓', '👨🏼‍🎓', '👩🏼‍🎤', '👨🏼‍🎤', '👩🏼‍🏫', '👨🏼‍🏫', '👩🏼‍🏭', '👨🏼‍🏭', '👩🏼‍💻', '👨🏼‍💻', '👩🏼‍💼', '👨🏼‍💼', '👩🏼‍🔧', '👨🏼‍🔧', '👩🏼‍🔬', '👨🏼‍🔬', '👩🏼‍🎨', '👨🏼‍🎨', '👩🏼‍🚒', '👨🏼‍🚒', '👩🏼‍✈️', '👨🏼‍✈️', '👩🏼‍🚀', '👨🏼‍🚀', '👩🏼‍⚖️', '👨🏼‍⚖️', '🤶🏼', '🎅🏼', '👸🏼', '🤴🏼', '👰🏼', '🤵🏼', '👼🏼', '🤰🏼', '🙇🏼‍♀️', '🙇🏼', '💁🏼', '💁🏼‍♂️', '🙅🏼', '🙅🏼‍♂️', '🙆🏼', '🙆🏼‍♂️', '🙋🏼', '🙋🏼‍♂️', '🤦🏼‍♀️', '🤦🏼‍♂️', '🤷🏼‍♀️', '🤷🏼‍♂️', '🙎🏼', '🙎🏼‍♂️', '🙍🏼', '🙍🏼‍♂️', '💇🏼', '💇🏼‍♂️', '💆🏼', '💆🏼‍♂️', '🕴🏼', '💃🏼', '🕺🏼', '🚶🏼‍♀️', '🚶🏼', '🏃🏼‍♀️', '🏃🏼', '🤲🏼', '👐🏼', '🙌🏼', '👏🏼', '🙏🏼', '👍🏼', '👎🏼', '👊🏼', '✊🏼', '🤛🏼', '🤜🏼', '🤞🏼', '✌🏼', '🤟🏼', '🤘🏼', '👌🏼', '👈🏼', '👉🏼', '👆🏼', '👇🏼', '☝🏼', '✋🏼', '🤚🏼', '🖐🏼', '🖖🏼', '👋🏼', '🤙🏼', '💪🏼', '🖕🏼', '✍🏼', '🤳🏼', '💅🏼', '👂🏼', '👃🏼']\n    },\n    {\n        title: 'Moderate Brown',\n        items: ['👶🏽', '👦🏽', '👧🏽', '👨🏽', '👩🏽', '👱🏽‍♀️', '👱🏽', '👴🏽', '👵🏽', '👲🏽', '👳🏽‍♀️', '👳🏽', '👮🏽‍♀️', '👮🏽', '👷🏽‍♀️', '👷🏽', '💂🏽‍♀️', '💂🏽', '🕵🏽‍♀️', '🕵🏽', '👩🏽‍⚕️', '👨🏽‍⚕️', '👩🏽‍🌾', '👨🏽‍🌾', '👩🏽‍🍳', '👨🏽‍🍳', '👩🏽‍🎓', '👨🏽‍🎓', '👩🏽‍🎤', '👨🏽‍🎤', '👩🏽‍🏫', '👨🏽‍🏫', '👩🏽‍🏭', '👨🏽‍🏭', '👩🏽‍💻', '👨🏽‍💻', '👩🏽‍💼', '👨🏽‍💼', '👩🏽‍🔧', '👨🏽‍🔧', '👩🏽‍🔬', '👨🏽‍🔬', '👩🏽‍🎨', '👨🏽‍🎨', '👩🏽‍🚒', '👨🏽‍🚒', '👩🏽‍✈️', '👨🏽‍✈️', '👩🏽‍🚀', '👨🏽‍🚀', '👩🏽‍⚖️', '👨🏽‍⚖️', '🤶🏽', '🎅🏽', '👸🏽', '🤴🏽', '👰🏽', '🤵🏽', '👼🏽', '🤰🏽', '🙇🏽‍♀️', '🙇🏽', '💁🏽', '💁🏽‍♂️', '🙅🏽', '🙅🏽‍♂️', '🙆🏽', '🙆🏽‍♂️', '🙋🏽', '🙋🏽‍♂️', '🤦🏽‍♀️', '🤦🏽‍♂️', '🤷🏽‍♀️', '🤷🏽‍♂️', '🙎🏽', '🙎🏽‍♂️', '🙍🏽', '🙍🏽‍♂️', '💇🏽', '💇🏽‍♂️', '💆🏽', '💆🏽‍♂️', '🕴🏼', '💃🏽', '🕺🏽', '🚶🏽‍♀️', '🚶🏽', '🏃🏽‍♀️', '🏃🏽', '🤲🏽', '👐🏽', '🙌🏽', '👏🏽', '🙏🏽', '👍🏽', '👎🏽', '👊🏽', '✊🏽', '🤛🏽', '🤜🏽', '🤞🏽', '✌🏽', '🤟🏽', '🤘🏽', '👌🏽', '👈🏽', '👉🏽', '👆🏽', '👇🏽', '☝🏽', '✋🏽', '🤚🏽', '🖐🏽', '🖖🏽', '👋🏽', '🤙🏽', '💪🏽', '🖕🏽', '✍🏽', '🤳🏽', '💅🏽', '👂🏽', '👃🏽']\n    },\n    {\n        title: 'Dark Brown',\n        items: ['👶🏾', '👦🏾', '👧🏾', '👨🏾', '👩🏾', '👱🏾‍♀️', '👱🏾', '👴🏾', '👵🏾', '👲🏾', '👳🏾‍♀️', '👳🏾', '👮🏾‍♀️', '👮🏾', '👷🏾‍♀️', '👷🏾', '💂🏾‍♀️', '💂🏾', '🕵🏾‍♀️', '🕵🏾', '👩🏾‍⚕️', '👨🏾‍⚕️', '👩🏾‍🌾', '👨🏾‍🌾', '👩🏾‍🍳', '👨🏾‍🍳', '👩🏾‍🎓', '👨🏾‍🎓', '👩🏾‍🎤', '👨🏾‍🎤', '👩🏾‍🏫', '👨🏾‍🏫', '👩🏾‍🏭', '👨🏾‍🏭', '👩🏾‍💻', '👨🏾‍💻', '👩🏾‍💼', '👨🏾‍💼', '👩🏾‍🔧', '👨🏾‍🔧', '👩🏾‍🔬', '👨🏾‍🔬', '👩🏾‍🎨', '👨🏾‍🎨', '👩🏾‍🚒', '👨🏾‍🚒', '👩🏾‍✈️', '👨🏾‍✈️', '👩🏾‍🚀', '👨🏾‍🚀', '👩🏾‍⚖️', '👨🏾‍⚖️', '🤶🏾', '🎅🏾', '👸🏾', '🤴🏾', '👰🏾', '🤵🏾', '👼🏾', '🤰🏾', '🙇🏾‍♀️', '🙇🏾', '💁🏾', '💁🏾‍♂️', '🙅🏾', '🙅🏾‍♂️', '🙆🏾', '🙆🏾‍♂️', '🙋🏾', '🙋🏾‍♂️', '🤦🏾‍♀️', '🤦🏾‍♂️', '🤷🏾‍♀️', '🤷🏾‍♂️', '🙎🏾', '🙎🏾‍♂️', '🙍🏾', '🙍🏾‍♂️', '💇🏾', '💇🏾‍♂️', '💆🏾', '💆🏾‍♂️', '🕴🏾', '💃🏾', '🕺🏾', '🚶🏾‍♀️', '🚶🏾', '🏃🏾‍♀️', '🏃🏾', '🤲🏾', '👐🏾', '🙌🏾', '👏🏾', '🙏🏾', '👍🏾', '👎🏾', '👊🏾', '✊🏾', '🤛🏾', '🤜🏾', '🤞🏾', '✌🏾', '🤟🏾', '🤘🏾', '👌🏾', '👈🏾', '👉🏾', '👆🏾', '👇🏾', '☝🏾', '✋🏾', '🤚🏾', '🖐🏾', '🖖🏾', '👋🏾', '🤙🏾', '💪🏾', '🖕🏾', '✍🏾', '🤳🏾', '💅🏾', '👂🏾', '👃🏾']\n    },\n    {\n        title: 'Black',\n        items: ['👶🏿', '👦🏿', '👧🏿', '👨🏿', '👩🏿', '👱🏿‍♀️', '👱🏿', '👴🏿', '👵🏿', '👲🏿', '👳🏿‍♀️', '👳🏿', '👮🏿‍♀️', '👮🏿', '👷🏿‍♀️', '👷🏿', '💂🏿‍♀️', '💂🏿', '🕵🏿‍♀️', '🕵🏿', '👩🏿‍⚕️', '👨🏿‍⚕️', '👩🏿‍🌾', '👨🏿‍🌾', '👩🏿‍🍳', '👨🏿‍🍳', '👩🏿‍🎓', '👨🏿‍🎓', '👩🏿‍🎤', '👨🏿‍🎤', '👩🏿‍🏫', '👨🏿‍🏫', '👩🏿‍🏭', '👨🏿‍🏭', '👩🏿‍💻', '👨🏿‍💻', '👩🏿‍💼', '👨🏿‍💼', '👩🏿‍🔧', '👨🏿‍🔧', '👩🏿‍🔬', '👨🏿‍🔬', '👩🏿‍🎨', '👨🏿‍🎨', '👩🏿‍🚒', '👨🏿‍🚒', '👩🏿‍✈️', '👨🏿‍✈️', '👩🏿‍🚀', '👨🏿‍🚀', '👩🏿‍⚖️', '👨🏿‍⚖️', '🤶🏿', '🎅🏿', '👸🏿', '🤴🏿', '👰🏿', '🤵🏿', '👼🏿', '🤰🏿', '🙇🏿‍♀️', '🙇🏿', '💁🏿', '💁🏿‍♂️', '🙅🏿', '🙅🏿‍♂️', '🙆🏿', '🙆🏿‍♂️', '🙋🏿', '🙋🏿‍♂️', '🤦🏿‍♀️', '🤦🏿‍♂️', '🤷🏿‍♀️', '🤷🏿‍♂️', '🙎🏿', '🙎🏿‍♂️', '🙍🏿', '🙍🏿‍♂️', '💇🏿', '💇🏿‍♂️', '💆🏿', '💆🏿‍♂️', '🕴🏿', '💃🏿', '🕺🏿', '🚶🏿‍♀️', '🚶🏿', '🏃🏿‍♀️', '🏃🏿', '🤲🏿', '👐🏿', '🙌🏿', '👏🏿', '🙏🏿', '👍🏿', '👎🏿', '👊🏿', '✊🏿', '🤛🏿', '🤜🏿', '🤞🏿', '✌🏿', '🤟🏿', '🤘🏿', '👌🏿', '👈🏿', '👉🏿', '👆🏿', '👇🏿', '☝🏿', '✋🏿', '🤚🏿', '🖐🏿', '🖖🏿', '👋🏿', '🤙🏿', '💪🏿', '🖕🏿', '✍🏿', '🤳🏿', '💅🏿', '👂🏿', '👃🏿']\n    },\n    {\n        title: 'Animals And Nature',\n        items: ['🐶', '🐱', '🐭', '🐹', '🐰', '🦊', '🦝', '🐻', '🐼', '🦘', '🦡', '🐨', '🐯', '🦁', '🐮', '🐷', '🐽', '🐸', '🐵', '🙈', '🙉', '🙊', '🐒', '🐔', '🐧', '🐦', '🐤', '🐣', '🐥', '🦆', '🦢', '🦅', '🦉', '🦚', '🦜', '🦇', '🐺', '🐗', '🐴', '🦄', '🐝', '🐛', '🦋', '🐌', '🐚', '🐞', '🐜', '🦗', '🕷', '🕸', '🦂', '🦟', '🦠', '🐢', '🐍', '🦎', '🦖', '🦕', '🐙', '🦑', '🦐', '🦀', '🐡', '🐠', '🐟', '🐬', '🐳', '🐋', '🦈', '🐊', '🐅', '🐆', '🦓', '🦍', '🐘', '🦏', '🦛', '🐪', '🐫', '🦙', '🦒', '🐃', '🐂', '🐄', '🐎', '🐖', '🐏', '🐑', '🐐', '🦌', '🐕', '🐩', '🐈', '🐓', '🦃', '🕊', '🐇', '🐁', '🐀', '🐿', '🦔', '🐾', '🐉', '🐲', '🌵', '🎄', '🌲', '🌳', '🌴', '🌱', '🌿', '☘️', '🍀', '🎍', '🎋', '🍃', '🍂', '🍁', '🍄', '🌾', '💐', '🌷', '🌹', '🥀', '🌺', '🌸', '🌼', '🌻', '🌞', '🌝', '🌛', '🌜', '🌚', '🌕', '🌖', '🌗', '🌘', '🌑', '🌒', '🌓', '🌔', '🌙', '🌎', '🌍', '🌏', '💫', '⭐️', '🌟', '✨', '⚡️', '☄️', '💥', '🔥', '🌪', '🌈', '☀️', '🌤', '⛅️', '🌥', '☁️', '🌦', '🌧', '⛈', '🌩', '🌨', '❄️', '☃️', '⛄️', '🌬', '💨', '💧', '💦', '☔️', '☂️', '🌊', '🌫']\n    },\n    {\n        title: 'Food and Drink',\n        items: ['🍏', '🍎', '🍐', '🍊', '🍋', '🍌', '🍉', '🍇', '🍓', '🍈', '🍒', '🍑', '🍍', '🥭', '🥥', '🥝', '🍅', '🍆', '🥑', '🥦', '🥒', '🥬', '🌶', '🌽', '🥕', '🥔', '🍠', '🥐', '🍞', '🥖', '🥨', '🥯', '🧀', '🥚', '🍳', '🥞', '🥓', '🥩', '🍗', '🍖', '🌭', '🍔', '🍟', '🍕', '🥪', '🥙', '🌮', '🌯', '🥗', '🥘', '🥫', '🍝', '🍜', '🍲', '🍛', '🍣', '🍱', '🥟', '🍤', '🍙', '🍚', '🍘', '🍥', '🥮', '🥠', '🍢', '🍡', '🍧', '🍨', '🍦', '🥧', '🍰', '🎂', '🍮', '🍭', '🍬', '🍫', '🍿', '🧂', '🍩', '🍪', '🌰', '🥜', '🍯', '🥛', '🍼', '☕️', '🍵', '🥤', '🍶', '🍺', '🍻', '🥂', '🍷', '🥃', '🍸', '🍹', '🍾', '🥄', '🍴', '🍽', '🥣', '🥡', '🥢']\n    },\n    {\n        title: 'Travel and Places',\n        items: ['🚗', '🚕', '🚙', '🚌', '🚎', '🏎', '🚓', '🚑', '🚒', '🚐', '🚚', '🚛', '🚜', '🛴', '🚲', '🛵', '🏍', '🚨', '🚔', '🚍', '🚘', '🚖', '🚡', '🚠', '🚟', '🚃', '🚋', '🚞', '🚝', '🚄', '🚅', '🚈', '🚂', '🚆', '🚇', '🚊', '🚉', '✈️', '🛫', '🛬', '🛩', '💺', '🛰', '🚀', '🛸', '🚁', '🛶', '⛵️', '🚤', '🛥', '🛳', '⛴', '🚢', '⚓️', '⛽️', '🚧', '🚦', '🚥', '🚏', '🗺', '🗿', '🗽', '🗼', '🏰', '🏯', '🏟', '🎡', '🎢', '🎠', '⛲️', '⛱', '🏖', '🏝', '🏜', '🌋', '⛰', '🏔', '🗻', '🏕', '⛺️', '🏠', '🏡', '🏘', '🏚', '🏗', '🏭', '🏢', '🏬', '🏣', '🏤', '🏥', '🏦', '🏨', '🏪', '🏫', '🏩', '💒', '🏛', '⛪️', '🕌', '🕍', '🕋', '⛩', '🛤', '🛣', '🗾', '🎑', '🏞', '🌅', '🌄', '🌠', '🎇', '🎆', '🌇', '🌆', '🏙', '🌃', '🌌', '🌉', '🌁']\n    },\n    {\n        title: 'Activities and Events',\n        items: ['⚽️', '🏀', '🏈', '⚾️', '🥎', '🏐', '🏉', '🎾', '🥏', '🎱', '🏓', '🏸', '🥅', '🏒', '🏑', '🥍', '🏏', '⛳️', '🏹', '🎣', '🥊', '🥋', '🎽', '⛸', '🥌', '🛷', '🛹', '🎿', '⛷', '🏂', '🏋️‍♀️', '🏋🏻‍♀️', '🏋🏼‍♀️', '🏋🏽‍♀️', '🏋🏾‍♀️', '🏋🏿‍♀️', '🏋️‍♂️', '🏋🏻‍♂️', '🏋🏼‍♂️', '🏋🏽‍♂️', '🏋🏾‍♂️', '🏋🏿‍♂️', '🤼‍♀️', '🤼‍♂️', '🤸‍♀️', '🤸🏻‍♀️', '🤸🏼‍♀️', '🤸🏽‍♀️', '🤸🏾‍♀️', '🤸🏿‍♀️', '🤸‍♂️', '🤸🏻‍♂️', '🤸🏼‍♂️', '🤸🏽‍♂️', '🤸🏾‍♂️', '🤸🏿‍♂️', '⛹️‍♀️', '⛹🏻‍♀️', '⛹🏼‍♀️', '⛹🏽‍♀️', '⛹🏾‍♀️', '⛹🏿‍♀️', '⛹️‍♂️', '⛹🏻‍♂️', '⛹🏼‍♂️', '⛹🏽‍♂️', '⛹🏾‍♂️', '⛹🏿‍♂️', '🤺', '🤾‍♀️', '🤾🏻‍♀️', '🤾🏼‍♀️', '🤾🏾‍♀️', '🤾🏾‍♀️', '🤾🏿‍♀️', '🤾‍♂️', '🤾🏻‍♂️', '🤾🏼‍♂️', '🤾🏽‍♂️', '🤾🏾‍♂️', '🤾🏿‍♂️', '🏌️‍♀️', '🏌🏻‍♀️', '🏌🏼‍♀️', '🏌🏽‍♀️', '🏌🏾‍♀️', '🏌🏿‍♀️', '🏌️‍♂️', '🏌🏻‍♂️', '🏌🏼‍♂️', '🏌🏽‍♂️', '🏌🏾‍♂️', '🏌🏿‍♂️', '🏇', '🏇🏻', '🏇🏼', '🏇🏽', '🏇🏾', '🏇🏿', '🧘‍♀️', '🧘🏻‍♀️', '🧘🏼‍♀️', '🧘🏽‍♀️', '🧘🏾‍♀️', '🧘🏿‍♀️', '🧘‍♂️', '🧘🏻‍♂️', '🧘🏼‍♂️', '🧘🏽‍♂️', '🧘🏾‍♂️', '🧘🏿‍♂️', '🏄‍♀️', '🏄🏻‍♀️', '🏄🏼‍♀️', '🏄🏽‍♀️', '🏄🏾‍♀️', '🏄🏿‍♀️', '🏄‍♂️', '🏄🏻‍♂️', '🏄🏼‍♂️', '🏄🏽‍♂️', '🏄🏾‍♂️', '🏄🏿‍♂️', '🏊‍♀️', '🏊🏻‍♀️', '🏊🏼‍♀️', '🏊🏽‍♀️', '🏊🏾‍♀️', '🏊🏿‍♀️', '🏊‍♂️', '🏊🏻‍♂️', '🏊🏼‍♂️', '🏊🏽‍♂️', '🏊🏾‍♂️', '🏊🏿‍♂️', '🤽‍♀️', '🤽🏻‍♀️', '🤽🏼‍♀️', '🤽🏽‍♀️', '🤽🏾‍♀️', '🤽🏿‍♀️', '🤽‍♂️', '🤽🏻‍♂️', '🤽🏼‍♂️', '🤽🏽‍♂️', '🤽🏾‍♂️', '🤽🏿‍♂️', '🚣‍♀️', '🚣🏻‍♀️', '🚣🏼‍♀️', '🚣🏽‍♀️', '🚣🏾‍♀️', '🚣🏿‍♀️', '🚣‍♂️', '🚣🏻‍♂️', '🚣🏼‍♂️', '🚣🏽‍♂️', '🚣🏾‍♂️', '🚣🏿‍♂️', '🧗‍♀️', '🧗🏻‍♀️', '🧗🏼‍♀️', '🧗🏽‍♀️', '🧗🏾‍♀️', '🧗🏿‍♀️', '🧗‍♂️', '🧗🏻‍♂️', '🧗🏼‍♂️', '🧗🏽‍♂️', '🧗🏾‍♂️', '🧗🏿‍♂️', '🚵‍♀️', '🚵🏻‍♀️', '🚵🏼‍♀️', '🚵🏽‍♀️', '🚵🏾‍♀️', '🚵🏿‍♀️', '🚵‍♂️', '🚵🏻‍♂️', '🚵🏼‍♂️', '🚵🏽‍♂️', '🚵🏾‍♂️', '🚵🏿‍♂️', '🚴‍♀️', '🚴🏻‍♀️', '🚴🏼‍♀️', '🚴🏽‍♀️', '🚴🏾‍♀️', '🚴🏿‍♀️', '🚴‍♂️', '🚴🏻‍♂️', '🚴🏼‍♂️', '🚴🏽‍♂️', '🚴🏾‍♂️', '🚴🏿‍♂️', '🏆', '🥇', '🥈', '🥉', '🏅', '🎖', '🏵', '🎗', '🎫', '🎟', '🎪', '🤹‍♀️', '🤹🏻‍♀️', '🤹🏼‍♀️', '🤹🏽‍♀️', '🤹🏾‍♀️', '🤹🏿‍♀️', '🤹‍♂️', '🤹🏻‍♂️', '🤹🏼‍♂️', '🤹🏽‍♂️', '🤹🏾‍♂️', '🤹🏿‍♂️', '🎭', '🎨', '🎬', '🎤', '🎧', '🎼', '🎹', '🥁', '🎷', '🎺', '🎸', '🎻', '🎲', '🧩', '♟', '🎯', '🎳', '🎮', '🎰']\n    },\n    {\n        title: 'Objects',\n        items: ['⌚️', '📱', '📲', '💻', '⌨️', '🖥', '🖨', '🖱', '🖲', '🕹', '🗜', '💽', '💾', '💿', '📀', '📼', '📷', '📸', '📹', '🎥', '📽', '🎞', '📞', '☎️', '📟', '📠', '📺', '📻', '🎙', '🎚', '🎛', '⏱', '⏲', '⏰', '🕰', '⌛️', '⏳', '📡', '🔋', '🔌', '💡', '🔦', '🕯', '🗑', '🛢', '💸', '💵', '💴', '💶', '💷', '💰', '💳', '🧾', '💎', '⚖️', '🔧', '🔨', '⚒', '🛠', '⛏', '🔩', '⚙️', '⛓', '🔫', '💣', '🔪', '🗡', '⚔️', '🛡', '🚬', '⚰️', '⚱️', '🏺', '🧭', '🧱', '🔮', '🧿', '🧸', '📿', '💈', '⚗️', '🔭', '🧰', '🧲', '🧪', '🧫', '🧬', '🧯', '🔬', '🕳', '💊', '💉', '🌡', '🚽', '🚰', '🚿', '🛁', '🛀', '🛀🏻', '🛀🏼', '🛀🏽', '🛀🏾', '🛀🏿', '🧴', '🧵', '🧶', '🧷', '🧹', '🧺', '🧻', '🧼', '🧽', '🛎', '🔑', '🗝', '🚪', '🛋', '🛏', '🛌', '🖼', '🛍', '🧳', '🛒', '🎁', '🎈', '🎏', '🎀', '🎊', '🎉', '🧨', '🎎', '🏮', '🎐', '🧧', '✉️', '📩', '📨', '📧', '💌', '📥', '📤', '📦', '🏷', '📪', '📫', '📬', '📭', '📮', '📯', '📜', '📃', '📄', '📑', '📊', '📈', '📉', '🗒', '🗓', '📆', '📅', '📇', '🗃', '🗳', '🗄', '📋', '📁', '📂', '🗂', '🗞', '📰', '📓', '📔', '📒', '📕', '📗', '📘', '📙', '📚', '📖', '🔖', '🔗', '📎', '🖇', '📐', '📏', '📌', '📍', '✂️', '🖊', '🖋', '✒️', '🖌', '🖍', '📝', '✏️', '🔍', '🔎', '🔏', '🔐', '🔒', '🔓']\n    },\n    {\n        title: 'Clothing and Accessories',\n        items: ['🧥', '👚', '👕', '👖', '👔', '👗', '👙', '👘', '👠', '👡', '👢', '👞', '👟', '🥾', '🥿', '🧦', '🧤', '🧣', '🎩', '🧢', '👒', '🎓', '⛑', '👑', '👝', '👛', '👜', '💼', '🎒', '👓', '🕶', '🥽', '🥼', '🌂', '🧵', '🧶']\n    },\n    {\n        title: 'Symbols',\n        items: ['❤️', '🧡', '💛', '💚', '💙', '💜', '🖤', '💔', '❣️', '💕', '💞', '💓', '💗', '💖', '💘', '💝', '💟', '☮️', '✝️', '☪️', '🕉', '☸️', '✡️', '🔯', '🕎', '☯️', '☦️', '🛐', '⛎', '♈️', '♉️', '♊️', '♋️', '♌️', '♍️', '♎️', '♏️', '♐️', '♑️', '♒️', '♓️', '🆔', '⚛️', '🉑', '☢️', '☣️', '📴', '📳', '🈶', '🈚️', '🈸', '🈺', '🈷️', '✴️', '🆚', '💮', '🉐', '㊙️', '㊗️', '🈴', '🈵', '🈹', '🈲', '🅰️', '🅱️', '🆎', '🆑', '🅾️', '🆘', '❌', '⭕️', '🛑', '⛔️', '📛', '🚫', '💯', '💢', '♨️', '🚷', '🚯', '🚳', '🚱', '🔞', '📵', '🚭', '❗️', '❕', '❓', '❔', '‼️', '⁉️', '🔅', '🔆', '〽️', '⚠️', '🚸', '🔱', '⚜️', '🔰', '♻️', '✅', '🈯️', '💹', '❇️', '✳️', '❎', '🌐', '💠', 'Ⓜ️', '🌀', '💤', '🏧', '🚾', '♿️', '🅿️', '🈳', '🈂️', '🛂', '🛃', '🛄', '🛅', '🚹', '🚺', '🚼', '🚻', '🚮', '🎦', '📶', '🈁', '🔣', 'ℹ️', '🔤', '🔡', '🔠', '🆖', '🆗', '🆙', '🆒', '🆕', '🆓', '0️⃣', '1️⃣', '2️⃣', '3️⃣', '4️⃣', '5️⃣', '6️⃣', '7️⃣', '8️⃣', '9️⃣', '🔟', '🔢', '#️⃣', '*️⃣', '⏏️', '▶️', '⏸', '⏯', '⏹', '⏺', '⏭', '⏮', '⏩', '⏪', '⏫', '⏬', '◀️', '🔼', '🔽', '➡️', '⬅️', '⬆️', '⬇️', '↗️', '↘️', '↙️', '↖️', '↕️', '↔️', '↪️', '↩️', '⤴️', '⤵️', '🔀', '🔁', '🔂', '🔄', '🔃', '🎵', '🎶', '➕', '➖', '➗', '✖️', '♾', '💲', '💱', '™️', '©️', '®️', '〰️', '➰', '➿', '🔚', '🔙', '🔛', '🔝', '🔜', '✔️', '☑️', '🔘', '⚪️', '⚫️', '🔴', '🔵', '🔺', '🔻', '🔸', '🔹', '🔶', '🔷', '🔳', '🔲', '▪️', '▫️', '◾️', '◽️', '◼️', '◻️', '⬛️', '⬜️', '🔈', '🔇', '🔉', '🔊', '🔔', '🔕', '📣', '📢', '👁‍🗨', '💬', '💭', '🗯', '♠️', '♣️', '♥️', '♦️', '🃏', '🎴', '🀄️', '🕐', '🕑', '🕒', '🕓', '🕔', '🕕', '🕖', '🕗', '🕘', '🕙', '🕚', '🕛', '🕜', '🕝', '🕞', '🕟', '🕠', '🕡', '🕢', '🕣', '🕤', '🕥', '🕦', '🕧']\n    },\n    {\n        title: 'Flags',\n        items: ['🏳️', '🏴', '🏁', '🚩', '🏳️‍🌈', '🏴‍☠️', '🇦🇫', '🇦🇽', '🇦🇱', '🇩🇿', '🇦🇸', '🇦🇩', '🇦🇴', '🇦🇮', '🇦🇶', '🇦🇬', '🇦🇷', '🇦🇲', '🇦🇼', '🇦🇺', '🇦🇹', '🇦🇿', '🇧🇸', '🇧🇭', '🇧🇩', '🇧🇧', '🇧🇾', '🇧🇪', '🇧🇿', '🇧🇯', '🇧🇲', '🇧🇹', '🇧🇴', '🇧🇦', '🇧🇼', '🇧🇷', '🇮🇴', '🇻🇬', '🇧🇳', '🇧🇬', '🇧🇫', '🇧🇮', '🇰🇭', '🇨🇲', '🇨🇦', '🇮🇨', '🇨🇻', '🇧🇶', '🇰🇾', '🇨🇫', '🇹🇩', '🇨🇱', '🇨🇳', '🇨🇽', '🇨🇨', '🇨🇴', '🇰🇲', '🇨🇬', '🇨🇩', '🇨🇰', '🇨🇷', '🇨🇮', '🇭🇷', '🇨🇺', '🇨🇼', '🇨🇾', '🇨🇿', '🇩🇰', '🇩🇯', '🇩🇲', '🇩🇴', '🇪🇨', '🇪🇬', '🇸🇻', '🇬🇶', '🇪🇷', '🇪🇪', '🇪🇹', '🇪🇺', '🇫🇰', '🇫🇴', '🇫🇯', '🇫🇮', '🇫🇷', '🇬🇫', '🇵🇫', '🇹🇫', '🇬🇦', '🇬🇲', '🇬🇪', '🇩🇪', '🇬🇭', '🇬🇮', '🇬🇷', '🇬🇱', '🇬🇩', '🇬🇵', '🇬🇺', '🇬🇹', '🇬🇬', '🇬🇳', '🇬🇼', '🇬🇾', '🇭🇹', '🇭🇳', '🇭🇰', '🇭🇺', '🇮🇸', '🇮🇳', '🇮🇩', '🇮🇷', '🇮🇶', '🇮🇪', '🇮🇲', '🇮🇱', '🇮🇹', '🇯🇲', '🇯🇵', '🎌', '🇯🇪', '🇯🇴', '🇰🇿', '🇰🇪', '🇰🇮', '🇽🇰', '🇰🇼', '🇰🇬', '🇱🇦', '🇱🇻', '🇱🇧', '🇱🇸', '🇱🇷', '🇱🇾', '🇱🇮', '🇱🇹', '🇱🇺', '🇲🇴', '🇲🇰', '🇲🇬', '🇲🇼', '🇲🇾', '🇲🇻', '🇲🇱', '🇲🇹', '🇲🇭', '🇲🇶', '🇲🇷', '🇲🇺', '🇾🇹', '🇲🇽', '🇫🇲', '🇲🇩', '🇲🇨', '🇲🇳', '🇲🇪', '🇲🇸', '🇲🇦', '🇲🇿', '🇲🇲', '🇳🇦', '🇳🇷', '🇳🇵', '🇳🇱', '🇳🇨', '🇳🇿', '🇳🇮', '🇳🇪', '🇳🇬', '🇳🇺', '🇳🇫', '🇰🇵', '🇲🇵', '🇳🇴', '🇴🇲', '🇵🇰', '🇵🇼', '🇵🇸', '🇵🇦', '🇵🇬', '🇵🇾', '🇵🇪', '🇵🇭', '🇵🇳', '🇵🇱', '🇵🇹', '🇵🇷', '🇶🇦', '🇷🇪', '🇷🇴', '🇷🇺', '🇷🇼', '🇼🇸', '🇸🇲', '🇸🇦', '🇸🇳', '🇷🇸', '🇸🇨', '🇸🇱', '🇸🇬', '🇸🇽', '🇸🇰', '🇸🇮', '🇬🇸', '🇸🇧', '🇸🇴', '🇿🇦', '🇰🇷', '🇸🇸', '🇪🇸', '🇱🇰', '🇧🇱', '🇸🇭', '🇰🇳', '🇱🇨', '🇵🇲', '🇻🇨', '🇸🇩', '🇸🇷', '🇸🇿', '🇸🇪', '🇨🇭', '🇸🇾', '🇹🇼', '🇹🇯', '🇹🇿', '🇹🇭', '🇹🇱', '🇹🇬', '🇹🇰', '🇹🇴', '🇹🇹', '🇹🇳', '🇹🇷', '🇹🇲', '🇹🇨', '🇹🇻', '🇻🇮', '🇺🇬', '🇺🇦', '🇦🇪', '🇬🇧', '🏴󠁧󠁢󠁥󠁮󠁧󠁿', '🏴󠁧󠁢󠁳󠁣󠁴󠁿', '🏴󠁧󠁢󠁷󠁬󠁳󠁿', '🇺🇳', '🇺🇸', '🇺🇾', '🇺🇿', '🇻🇺', '🇻🇦', '🇻🇪', '🇻🇳', '🇼🇫', '🇪🇭', '🇾🇪', '🇿🇲', '🇿🇼']\n    },\n    {\n        title: 'New',\n        items: ['🥱', '🤏', '🦾', '🦿', '🦻', '🧏', '🧏‍♂️', '🧏‍♀️', '🧍', '🧍‍♂️', '🧍‍♀️', '🧎', '🧎‍♂️', '🧎‍♀️', '👨‍🦯', '👩‍🦯', '👨‍🦼', '👩‍🦼', '👨‍🦽', '👩‍🦽', '🦧', '🦮', '🐕‍🦺', '🦥', '🦦', '🦨', '🦩', '🧄', '🧅', '🧇', '🧆', '🧈', '🦪', '🧃', '🧉', '🧊', '🛕', '🦽', '🦼', '🛺', '🪂', '🪐', '🤿', '🪀', '🪁', '🦺', '🥻', '🩱', '🩲', '🩳', '🩰', '🪕', '🪔', '🪓', '🦯', '🩸', '🩹', '🩺', '🪑', '🪒', '🤎', '🤍', '🟠', '🟡', '🟢', '🟣', '🟤', '🟥', '🟧', '🟨', '🟩', '🟦', '🟪', '🟫']\n    }\n];\n\nexport interface EmojiListProps {\n    onClick?: (emoji: string) => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    group: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(auto-fill, 32px)'\n    },\n    item: {\n        fontSize: theme.spacing(3),\n        cursor: 'pointer',\n    }\n}));\n\nfunction EmojiList({ onClick }: EmojiListProps) {\n    const classes = useStyles();\n\n    const renderItem = (emoji: string) => (\n        <span\n            className={classes.item}\n            role=\"button\"\n            onClick={() => onClick && onClick(emoji)}\n        >\n            {emoji}\n        </span>\n    );\n\n    const renderGroup = (emojiGroup: EmojiGroup) => (\n        <div>\n            <Toolbar\n                variant=\"dense\"\n                disableGutters\n            >\n                <Typography\n                    variant=\"overline\"\n                >\n                    {emojiGroup.title}\n                </Typography>\n            </Toolbar>\n            <Container disableGutters>\n                <div className={classes.group}>\n                    {emojiGroup.items.map(renderItem)}\n                </div>\n            </Container>\n        </div>\n    );\n\n    return (\n        <div>\n            {emojiGroups.map(renderGroup)}\n        </div>\n    )\n}\n\nexport default EmojiList;\n","import React, {useState} from \"react\";\nimport {createStyles, Theme, Toolbar} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {AttachFile, InsertEmoticon, Send} from \"@material-ui/icons\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport EmojiList from \"./EmojiList\";\nimport Container from \"@material-ui/core/Container\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport interface SendMessageToolbarProps {\n    onSubmit?: (message: string) => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {},\n    messageField: {\n        marginTop: theme.spacing(1.5),\n        marginBottom: theme.spacing(1.5),\n        flex: 'auto'\n    },\n    sendButton: {\n        marginLeft: theme.spacing(1)\n    },\n    emojiList: {\n        maxHeight: 140,\n        overflow: 'auto'\n    }\n}));\n\nconst ENTER_KEY_CODE = 13;\n\nfunction SendMessageToolbar({ onSubmit }: SendMessageToolbarProps) {\n    const classes = useStyles();\n    const [emojiOpen, setEmojiOpen] = useState<boolean>(false);\n    const [message, setMessage] = useState<string>('');\n    const handleEmojiOpen = () => setEmojiOpen(!emojiOpen);\n    const handleSubmit = () => {\n        onSubmit && onSubmit(message);\n        setMessage('');\n        setEmojiOpen(false);\n    };\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => setMessage(event.target.value);\n    const handleKeyDown = (event: React.KeyboardEvent) => {\n        const { keyCode, ctrlKey } = event;\n        if (keyCode === ENTER_KEY_CODE && ctrlKey) {\n            setMessage(message + '\\n');\n        } else if (message && keyCode === ENTER_KEY_CODE) {\n            event.preventDefault();\n            handleSubmit();\n        }\n    };\n\n    const sendButton = (\n        <Tooltip\n            title=\"Send\"\n        >\n            <span>\n                <IconButton\n                    className={classes.sendButton}\n                    edge=\"end\"\n                    color=\"primary\"\n                    disabled={!message}\n                    onClick={handleSubmit}\n                >\n                    <Send />\n                </IconButton>\n            </span>\n        </Tooltip>\n    );\n\n    const startAdornment = (\n        <InputAdornment position=\"start\">\n            <Tooltip title=\"Insert emoticon\">\n                <IconButton\n                    edge=\"start\"\n                    size=\"small\"\n                    color={emojiOpen ? 'primary' : 'default'}\n                    onClick={handleEmojiOpen}\n                >\n                    <InsertEmoticon />\n                </IconButton>\n            </Tooltip>\n        </InputAdornment>\n    );\n\n    const endAdornment = (\n        <InputAdornment position=\"end\">\n            <Tooltip title=\"Attach file\">\n                <IconButton\n                    edge=\"end\"\n                    size=\"small\"\n                    component=\"label\"\n                    htmlFor=\"attach-file\"\n                >\n                    <AttachFile />\n                </IconButton>\n            </Tooltip>\n            <input\n                id=\"attach-file\"\n                type=\"file\"\n                hidden\n            />\n        </InputAdornment>\n    );\n\n    const messageField = (\n        <div className={classes.messageField}>\n            <TextField\n                value={message}\n                onKeyDown={handleKeyDown}\n                onChange={handleChange}\n                multiline\n                autoFocus={false}\n                rowsMax={3}\n                variant=\"outlined\"\n                size=\"small\"\n                placeholder=\"Enter message\"\n                InputProps={{\n                    startAdornment,\n                    endAdornment\n                }}\n                fullWidth\n            />\n        </div>\n    );\n\n    const emojiList = emojiOpen && (\n        <Container className={classes.emojiList}>\n            <EmojiList\n                onClick={emoji => setMessage(message + emoji)}\n            />\n        </Container>\n    );\n\n    return (\n        <div className={classes.root}>\n            {emojiList}\n            <Toolbar>\n                {messageField}\n                {sendButton}\n            </Toolbar>\n        </div>\n    )\n}\n\nexport default SendMessageToolbar;\n","import React from 'react';\nimport {useDispatch} from \"react-redux\";\nimport {addMessageRequest} from \"../../store/chatsSlice\";\nimport SendMessageToolbar from \"./SendMessageToolbar\";\nimport {Chat} from \"../../models/Chat\";\n\nexport interface SendMessageToolbarContainerProps {\n    chatId: Chat['id'];\n}\n\nfunction SendMessageToolbarContainer({ chatId }: SendMessageToolbarContainerProps) {\n    const dispatch = useDispatch();\n\n    return (\n        <SendMessageToolbar\n            onSubmit={messageText => {\n                const action = addMessageRequest({chatId, messageText});\n                dispatch(action);\n            }}\n        />\n    );\n}\n\nexport default SendMessageToolbarContainer;\n","import React from \"react\";\nimport {AvatarProps, createStyles, ListItem, ListItemTextProps, Theme} from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {NavLink} from \"react-router-dom\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MessageReadStatus, {MessageReadStatusProps} from \"../MessageList/MessageReadStatus\";\nimport PopoverAction from \"../PopoverAction\";\nimport List from \"@material-ui/core/List\";\nimport MenuListItem from \"../MenuListItem\";\n\nexport interface ContactListItemProps {\n    avatarSrc: AvatarProps['src'];\n    fullName: ListItemTextProps['primary'];\n    lastMessage?: {\n        text: ListItemTextProps['secondary'];\n        delivered: MessageReadStatusProps['delivered'];\n        read: MessageReadStatusProps['read'];\n        createdAt: Date;\n    };\n    isOnline: boolean;\n    inBlackList?: boolean;\n    to?: string;\n    onDelete?: VoidFunction;\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    messageText: {\n        display: 'flex',\n        alignItems: 'center',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n    }\n}));\n\nfunction ContactListItem(props: ContactListItemProps) {\n    const classes = useStyles();\n\n    const secondaryAction = (\n        <ListItemSecondaryAction>\n            <PopoverAction\n                renderPopover={(onClose) => (\n                    <List>\n                        <MenuListItem\n                            primary=\"Delete\"\n                            onClick={() => {\n                                props.onDelete && props.onDelete();\n                                onClose();\n                            }}\n                        />\n                    </List>\n                )}\n            />\n        </ListItemSecondaryAction>\n    );\n\n    return (\n        <ListItem\n            button\n            component={NavLink}\n            activeClassName=\"Mui-selected\"\n            to={props.to || '/'}\n        >\n            <ListItemAvatar>\n                <Badge\n                    variant=\"dot\"\n                    overlap=\"circle\"\n                    anchorOrigin={{\n                        horizontal: 'right',\n                        vertical: 'bottom'\n                    }}\n                    color=\"primary\"\n                    invisible={!props.isOnline}\n                >\n                    <Avatar\n                        src={props.avatarSrc}\n                    />\n                </Badge>\n            </ListItemAvatar>\n            <ListItemText\n                primary={props.fullName}\n                secondary={props.lastMessage &&\n                    <span className={classes.messageText}>\n                        <MessageReadStatus\n                            delivered={props.lastMessage.delivered}\n                            read={props.lastMessage.read}\n                            gutterRight\n                        />\n                        {props.lastMessage.text}\n                    </span>\n                }\n            />\n            {secondaryAction}\n        </ListItem>\n    )\n}\n\nexport default ContactListItem;\n","import React, {Key} from \"react\";\nimport ContactListItem, {ContactListItemProps} from \"./ContactListItem\";\nimport ListView from \"../ListView\";\n\nexport interface ContactListProps {\n    itemCount: number;\n    getItem: (index: number) => ContactListItemProps;\n    getItemKey?: (index: number) => Key;\n}\n\nfunction ContactList({\n    itemCount,\n    getItem,\n    getItemKey\n}: ContactListProps) {\n    const renderItem = (index: number) => {\n        const itemProps = getItem(index);\n        const itemKey = getItemKey ? getItemKey(index) : index;\n        return (\n            <ContactListItem\n                key={itemKey}\n                {...itemProps}\n            />\n        )\n    };\n\n    return (\n        <ListView\n            itemCount={itemCount}\n            renderItem={renderItem}\n        />\n    )\n}\n\nexport default ContactList;\n","import React, {useEffect} from \"react\";\nimport ContactList from \"./ContactList\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {contactsRequest, selectContacts, selectFoundContacts, removeContactById} from \"../../store/contactsSlice\";\nimport {Contact} from \"../../models/Contact\";\nimport {ContactListItemProps} from \"./ContactListItem\";\nimport {CHAT_ROUTE_PATH} from \"../../views/Chat\";\nimport ErrorMessage from \"../../layout/ErrorMessage\";\nimport Loading from \"../../layout/Loading\";\nimport Empty from \"../../layout/Empty\";\n\nexport const mapContactToItemProps = (contact: Contact): ContactListItemProps => ({\n    fullName: `${contact.firstName} ${contact.lastName}`,\n    avatarSrc: contact.avatarUrl,\n    lastMessage: {\n        text: contact.lastMessage.text,\n        delivered: contact.lastMessage.delivered,\n        read: contact.lastMessage.read,\n        createdAt: contact.lastMessage.createdAt\n    },\n    isOnline: contact.isOnline,\n    inBlackList: contact.inBlackList,\n    to: CHAT_ROUTE_PATH.replace(':id', contact.id)\n});\n\nfunction ContactListContainer() {\n    const contacts = useSelector(selectFoundContacts);\n    const {error, loading} = useSelector(selectContacts);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const action = contactsRequest();\n        dispatch(action);\n    }, [dispatch]);\n\n    if (loading) return <Loading/>;\n    if (error) return <ErrorMessage/>;\n    if (!contacts.length) return <Empty/>;\n\n    return (\n        <ContactList\n            itemCount={contacts.length}\n            getItemKey={index => contacts[index].id}\n            getItem={index => {\n                const contact = contacts[index];\n                const itemProps = mapContactToItemProps(contact);\n                const handleDelete = () => {\n                    const action = removeContactById(contact.id);\n                    dispatch(action);\n                };\n                return {\n                    ...itemProps,\n                    onDelete: handleDelete\n                };\n            }}\n        />\n    )\n}\n\nexport default ContactListContainer;\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {RootState} from \"./rootReducer\";\n\nexport interface SettingsState {\n    darkThemeEnabled: boolean;\n}\n\nconst initialState: SettingsState = {\n    darkThemeEnabled: false\n};\n\nconst settingsSlice = createSlice({\n    name: 'settings',\n    initialState,\n    reducers: {\n        enableDarkTheme(state, action: PayloadAction<boolean>) {\n            state.darkThemeEnabled = action.payload;\n        }\n    }\n});\n\nexport const selectSettings = (state: RootState) => state.settings;\n\nexport const {\n    enableDarkTheme\n} = settingsSlice.actions;\n\nconst settingsReducer = settingsSlice.reducer;\n\nexport default settingsReducer;\n","import React from 'react';\nimport ListItemSwitch from \"../../ListItemSwitch\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectSettings, enableDarkTheme} from \"../../../store/settingsSlice\";\n\nfunction DarkThemeSwitch() {\n    const {darkThemeEnabled} = useSelector(selectSettings);\n    const dispatch = useDispatch();\n    const handleChange = (checked: boolean) => dispatch(enableDarkTheme(checked));\n\n    return (\n        <ListItemSwitch\n            primary=\"Dark theme\"\n            checked={darkThemeEnabled}\n            onChange={handleChange}\n        />\n    );\n}\n\nexport default DarkThemeSwitch;\n","import React from 'react';\nimport {List} from \"@material-ui/core\";\nimport DarkThemeSwitch from \"./settings/DarkThemeSwitch\";\n\nexport interface SettingListProps {}\n\nfunction SettingList(props: SettingListProps) {\n    return (\n        <List>\n            <DarkThemeSwitch/>\n        </List>\n    );\n}\n\nexport default SettingList;\n","import React from 'react';\nimport SettingList from \"../../components/SettingList/SettingList\";\nimport View from \"../../layout/View\";\nimport LayoutToolbar from \"../../layout/LayoutToolbar\";\n\nexport interface SettingsProps {}\n\nfunction Settings(props: SettingsProps) {\n    const toolbar = (\n        <LayoutToolbar\n            title=\"Settings\"\n        />\n    );\n\n    return (\n        <View\n            toolbar={toolbar}\n        >\n            <SettingList/>\n        </View>\n    )\n}\n\nexport default Settings;\n","import Settings from \"./Settings\";\n\nexport const SETTINGS_ROUTE_PATH = '/settings';\n\nexport default Settings;\n","import React, {ChangeEvent, useState} from \"react\";\nimport {Grid} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectAuth, updateProfile} from \"../store/authSlice\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport {UserProfile} from \"../models/AuthUser\";\n\nexport interface EditProfileProps {}\n\ntype FieldName = 'firstName' | 'lastName' | 'avatarUrl' | 'email' | 'phoneNumber' | 'bio' | 'dateOfBirth';\n\nfunction EditProfile(props: EditProfileProps) {\n    const {user} = useSelector(selectAuth);\n    const dispatch = useDispatch();\n    const [profile, setProfile] = useState<UserProfile>({\n        firstName: user?.firstName,\n        lastName: user?.lastName,\n        avatarUrl: user?.avatarUrl,\n        email: user?.email,\n        phoneNumber: user?.phoneNumber,\n        bio: user?.bio,\n        dateOfBirth: user?.dateOfBirth\n    });\n    const getChangeHandler = (fieldName: FieldName) => (event: ChangeEvent<HTMLInputElement>) => setProfile({\n        ...profile,\n        [fieldName]: event.target.value\n    });\n\n    return (\n        <form onSubmit={event => {\n            event.preventDefault();\n            const action = updateProfile(profile);\n            dispatch(action);\n        }}>\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <TextField\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Avatar\"\n                        value={profile.avatarUrl}\n                        onChange={getChangeHandler('avatarUrl')}\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <Avatar\n                                        style={{width: 24, height: 24}}\n                                        src={user?.avatarUrl}\n                                    />\n                                </InputAdornment>\n                            ),\n                            endAdornment: (\n                                <InputAdornment position=\"end\">\n                                    <Button\n                                        variant=\"text\"\n                                        size=\"small\"\n                                        component=\"label\"\n                                        htmlFor=\"avatar\"\n                                        disabled={true}\n                                    >\n                                        Choose\n                                    </Button>\n                                </InputAdornment>\n                            ),\n                            readOnly: true\n                        }}\n                        fullWidth\n                    />\n                    <input\n                        id=\"avatar\"\n                        name=\"avatarUrl\"\n                        type=\"file\"\n                        hidden\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        name=\"firstName\"\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"First Name\"\n                        required\n                        value={profile.firstName}\n                        onChange={getChangeHandler('firstName')}\n                        fullWidth\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        name=\"lastName\"\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Last Name\"\n                        required\n                        value={profile.lastName}\n                        onChange={getChangeHandler('lastName')}\n                        fullWidth\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        name=\"dateOfBirth\"\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Date of Birth\"\n                        type=\"date\"\n                        disabled={true}\n                        InputLabelProps={{\n                            shrink: true\n                        }}\n                        required\n                        value={profile.dateOfBirth?.toISOString().split('T')[0]}\n                        //onChange={getChangeHandler('dateOfBirth')}\n                        fullWidth\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        name=\"bio\"\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Bio\"\n                        placeholder=\"A few words about yourself\"\n                        required\n                        value={profile.bio}\n                        onChange={getChangeHandler('bio')}\n                        fullWidth\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        name=\"email\"\n                        type=\"email\"\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Email\"\n                        required\n                        value={profile.email}\n                        onChange={getChangeHandler('email')}\n                        fullWidth\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        name=\"phoneNumber\"\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Phone number\"\n                        required\n                        value={profile.phoneNumber}\n                        onChange={getChangeHandler('phoneNumber')}\n                        fullWidth\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        type=\"submit\"\n                    >\n                        Save\n                    </Button>\n                </Grid>\n            </Grid>\n        </form>\n    );\n}\n\nexport default EditProfile;\n","import React from 'react';\nimport View from \"../../layout/View\";\nimport EditProfile from \"../../forms/EditProfile\";\nimport LayoutToolbar from \"../../layout/LayoutToolbar\";\nimport {Container, createStyles, Theme} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nexport interface ProfileProps {}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    content: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    }\n}));\n\nfunction Profile(props: ProfileProps) {\n    const classes = useStyles();\n    const toolbar = (\n        <LayoutToolbar\n            title=\"Edit Profile\"\n        />\n    );\n\n    const content = (\n        <Container\n            className={classes.content}\n            maxWidth=\"xs\"\n        >\n            <EditProfile/>\n        </Container>\n    );\n\n    return (\n        <View\n            toolbar={toolbar}\n        >\n            {content}\n        </View>\n    );\n}\n\nexport default Profile;\n","import Profile from \"./Profile\";\n\nexport const PROFILE_ROUTE_PATH = '/profile';\n\nexport default Profile;\n","import {Contact} from \"../models/Contact\";\nimport faker from \"faker\";\nimport {Message} from \"../models/Message\";\nimport {Attachment} from \"../models/Attachment\";\nimport {AuthUser} from \"../models/AuthUser\";\nimport {AttachmentLink} from \"../models/AttachmentLink\";\n\nexport interface FakerService {\n    contact: () => Contact;\n    message: () => Message;\n    attachment: () => Attachment;\n    attachmentLink: () => AttachmentLink;\n    authUser: () => AuthUser;\n}\n\nexport const fakerService: FakerService = {\n    contact: () => {\n        const firstName = faker.name.firstName();\n        const lastName = faker.name.lastName();\n        return ({\n            id: faker.random.uuid(),\n            firstName,\n            lastName,\n            email: faker.internet.email(firstName, lastName),\n            phoneNumber: faker.phone.phoneNumber(),\n            avatarUrl: faker.image.avatar(),\n            lastMessage: fakerService.message(),\n            isOnline: faker.random.boolean(),\n            lastVisitAt: faker.date.recent(0),\n            dateOfBirth: faker.date.past(faker.random.number({ min: 18, max: 65 })),\n            inBlackList: false,\n            notificationsEnabled: true,\n            bio: faker.lorem.sentence()\n        })\n    },\n    message: () => {\n        const hasAttachmentFile = Math.random() > .8;\n        const hasAttachmentLink = Math.random() > .5;\n        return ({\n            id: faker.random.uuid(),\n            text: faker.lorem.text(),\n            createdAt: faker.date.recent(0),\n            delivered: true,\n            read: true,\n            attachmentFile: hasAttachmentFile ? fakerService.attachment() : undefined,\n            attachmentLink: hasAttachmentLink ? fakerService.attachmentLink() : undefined,\n            createdByMe: faker.random.boolean()\n        })\n    },\n    attachment: () => ({\n        id: faker.random.uuid(),\n        type: faker.system.fileType(),\n        name: faker.system.fileName(),\n        size: faker.random.number(99999),\n        lastModified: faker.date.past().getMilliseconds(),\n        imageUrl: faker.image.avatar()\n    }),\n    attachmentLink: () => ({\n        id: faker.random.uuid(),\n        title: faker.company.companyName(),\n        description: faker.lorem.sentence(),\n        createdAt: faker.date.past(),\n        imageUrl: faker.image.avatar(),\n        url: faker.internet.url()\n    }),\n    authUser: () => {\n        const firstName = faker.name.firstName();\n        const lastName = faker.name.lastName();\n        return ({\n            id: faker.random.uuid(),\n            firstName,\n            lastName,\n            email: faker.internet.email(firstName, lastName),\n            phoneNumber: faker.phone.phoneNumber(),\n            avatarUrl: faker.image.avatar(),\n            isOnline: faker.random.boolean(),\n            dateOfBirth: faker.date.past(faker.random.number({ min: 18, max: 65 })),\n            bio: faker.lorem.sentence()\n        })\n    }\n};\n","import React from 'react';\nimport ContactList from \"../../components/ContactList\";\nimport ListItemToolbar from \"../../components/ListItemToolbar\";\nimport {Add, Settings} from \"@material-ui/icons\";\nimport {createStyles, Fab, IconButton, Theme} from \"@material-ui/core\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport {NavLink} from \"react-router-dom\";\nimport {SETTINGS_ROUTE_PATH} from \"../Settings\";\nimport {PROFILE_ROUTE_PATH} from \"../Profile\";\nimport View from \"../../layout/View\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectAuth} from \"../../store/authSlice\";\nimport {addOneContact, contactsSearchQuery} from '../../store/contactsSlice';\nimport ErrorMessage from \"../../layout/ErrorMessage\";\nimport Loading from \"../../layout/Loading\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {fakerService} from \"../../services/fakerService\";\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        position: 'relative'\n    },\n    fab: {\n        position: 'absolute',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2)\n    }\n}));\n\nfunction Contacts() {\n    const classes = useStyles();\n    const { error, loading, user } = useSelector(selectAuth);\n    const dispatch = useDispatch();\n\n    if (loading || !user) return <Loading />;\n    if (error) return <ErrorMessage/>;\n\n    const settingsButton = (\n        <Tooltip title=\"Settings\">\n            <IconButton\n                edge=\"end\"\n                component={NavLink}\n                to={SETTINGS_ROUTE_PATH}\n            >\n                <Settings/>\n            </IconButton>\n        </Tooltip>\n    );\n\n    const handleSearch = (value: string) => {\n        const action = contactsSearchQuery(value);\n        dispatch(action);\n    };\n\n    const handleReset = () => {\n        const action = contactsSearchQuery('');\n        dispatch(action);\n    };\n\n    const statusText = user.isOnline\n        ? (\n            <Typography\n                variant=\"inherit\"\n                color=\"primary\"\n            >\n                Online\n            </Typography>\n        )\n        : 'Offline';\n    const toolbar = (\n        <ListItemToolbar\n            primary={`${user.firstName} ${user.lastName}`}\n            secondary={statusText}\n            avatarSrc={user.avatarUrl}\n            avatarTo={PROFILE_ROUTE_PATH}\n            endAction={settingsButton}\n            SearchInputBaseProps={{\n                placeholder: 'Search contacts',\n                onChange: handleSearch,\n                onClear: handleReset,\n                onBack: handleReset\n            }}\n        />\n    );\n\n    const addButton = (\n        <Fab\n            className={classes.fab}\n            color=\"primary\"\n            onClick={() => {\n                const contact = fakerService.contact();\n                const action = addOneContact(contact);\n                dispatch(action);\n            }}\n        >\n            <Add/>\n        </Fab>\n    );\n\n    return (\n        <View\n            toolbar={toolbar}\n            className={classes.root}\n        >\n            <ContactList/>\n            {addButton}\n        </View>\n    )\n}\n\nexport default Contacts;\n","import Contacts from \"./Contacts\";\n\nexport const CONTACTS_ROUTE_PATH = '/contacts';\n\nexport default Contacts;\n","import React from \"react\";\nimport formatDistance from \"date-fns/formatDistance\";\nimport MessageList from \"../../components/MessageList\";\nimport ListItemToolbar from \"../../components/ListItemToolbar\";\nimport {useParams, Link, Redirect} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {createStyles, IconButton, Theme, useMediaQuery, useTheme} from \"@material-ui/core\";\nimport {Attachment, Delete} from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport View from \"../../layout/View\";\nimport {getContactByIdSelector} from \"../../store/contactsSlice\";\nimport {switchMessagesCheckMode, messagesSearchQuery, selectChatById, removeManyMessages} from \"../../store/chatsSlice\";\nimport PopoverAction from \"../../components/PopoverAction\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {CONTACT_PROFILE_ROUTE_PATH} from \"../ContactProfile\";\nimport {CHAT_ATTACHMENTS_ROUTE_PATH} from \"../Attachments\";\nimport MenuListItem from \"../../components/MenuListItem\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport SendMessageToolbar from \"../../components/SendMessageToolbar\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {CONTACTS_ROUTE_PATH} from \"../Contacts\";\nimport BackButton from \"../../layout/BackButton\";\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    cancelButton: {\n        marginLeft: theme.spacing(1)\n    }\n}));\n\nfunction Chat() {\n    const classes = useStyles();\n    const { id: chatId = '' } = useParams();\n    const theme = useTheme();\n    const isBreakpointSm = useMediaQuery(theme.breakpoints.down('sm'));\n    const { searchQuery, checkedIds, checkModeEnabled, prints } = useSelector(selectChatById(chatId));\n    const selectContact = getContactByIdSelector(chatId);\n    const contact = useSelector(selectContact);\n    const dispatch = useDispatch();\n    const removeAllMessages = () => {\n        const action = removeManyMessages({chatId});\n        dispatch(action);\n    };\n    const switchCheckMode = () => {\n        const action = switchMessagesCheckMode({chatId});\n        dispatch(action);\n    };\n    if (!chatId || !contact) return <Redirect to=\"/\"/>;\n\n    const renderPopover = (onClose: VoidFunction) => (\n        <List>\n            <MenuListItem\n                primary={checkModeEnabled ? 'Cancel select' : 'Select messages'}\n                onClick={() => {\n                    switchCheckMode();\n                    onClose();\n                }}\n            />\n            <MenuListItem\n                primary=\"Clear chat\"\n                onClick={() => {\n                    removeAllMessages();\n                    onClose();\n                }}\n            />\n        </List>\n    );\n\n    const endAction = (\n        <>\n            <Tooltip title=\"Attachments\">\n                <IconButton\n                    component={Link}\n                    to={CHAT_ATTACHMENTS_ROUTE_PATH.replace(':id', chatId)}\n                >\n                    <Attachment/>\n                </IconButton>\n            </Tooltip>\n            <PopoverAction\n                renderPopover={renderPopover}\n            />\n        </>\n    );\n\n    const handleSearch = (value: string) => {\n        const action = messagesSearchQuery({\n            chatId,\n            searchQuery: value\n        });\n        dispatch(action);\n    };\n\n    const handleReset = () => {\n        const action = messagesSearchQuery({\n            chatId,\n            searchQuery: ''\n        });\n        dispatch(action);\n    };\n\n    const statusText = contact?.isOnline\n        ? (\n            <Typography\n                variant=\"inherit\"\n                color=\"primary\"\n            >\n                Online\n            </Typography>\n        )\n        : formatDistance(new Date(), contact?.lastVisitAt);\n\n    const pathToProfile = CONTACT_PROFILE_ROUTE_PATH.replace(':id', chatId);\n    const backButton = isBreakpointSm ? (\n        <BackButton\n            onClick={history => history.push(CONTACTS_ROUTE_PATH)}\n        />\n    ) : null;\n\n    const toolbar = (\n        <ListItemToolbar\n            avatarSrc={contact?.avatarUrl}\n            avatarTo={pathToProfile}\n            primary={`${contact?.firstName} ${contact?.lastName}`}\n            secondary={prints ? 'Prints...' : statusText}\n            startAction={backButton}\n            endAction={endAction}\n            SearchInputBaseProps={{\n                placeholder: 'Search messages',\n                onChange: handleSearch,\n                onClear: handleReset,\n                onBack: handleReset,\n                initialValue: searchQuery\n            }}\n        />\n    );\n\n    const handleDelete = () => {\n        const action = removeManyMessages({\n            chatId,\n            messageIds: checkedIds\n        });\n        dispatch(action);\n    };\n\n    const footer = checkModeEnabled ? (\n        <Toolbar>\n            <Button\n                disabled={!checkedIds.length}\n                onClick={handleDelete}\n                startIcon={<Delete/>}\n                variant=\"outlined\"\n                color=\"secondary\"\n            >\n                Delete\n            </Button>\n            <Button\n                className={classes.cancelButton}\n                onClick={switchCheckMode}\n            >\n                Cancel\n            </Button>\n        </Toolbar>\n    ) : (\n        <SendMessageToolbar\n            chatId={chatId}\n        />\n    );\n\n    return (\n        <View\n            toolbar={toolbar}\n            footer={footer}\n            needScrollBottom={!checkModeEnabled}\n        >\n            <Container\n                disableGutters\n                maxWidth=\"md\"\n            >\n                <MessageList\n                    chatId={chatId}\n                />\n            </Container>\n        </View>\n    );\n}\n\nexport default Chat;\n","import React, {Component} from \"react\";\nimport ErrorMessage from \"./ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    };\n\n    componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\n        this.setState({error: true});\n    }\n\n    render() {\n        if (this.state.error) return <ErrorMessage/>;\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;\n","import React, {PropsWithChildren, ReactNode} from \"react\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport {createStyles, Theme, TypographyProps} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nexport type LayoutProps = PropsWithChildren<{\n    title?: TypographyProps['children'];\n    leftSide?: ReactNode;\n    rightSide?: ReactNode;\n}>\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%'\n    },\n    content: {\n        display: 'flex',\n        height: '100%'\n    },\n    leftSide: {\n        minWidth: 360,\n        maxWidth: 360,\n        overflow: 'auto',\n        borderRightWidth: 1,\n        borderRightStyle: 'solid',\n        borderRightColor: theme.palette.divider,\n    },\n    rightSide: {\n        minWidth: 360,\n        maxWidth: 360,\n        overflow: 'auto',\n        borderLeftWidth: 1,\n        borderLeftStyle: 'solid',\n        borderLeftColor: theme.palette.divider,\n    },\n    main: {\n        flex: 'auto',\n        overflow: 'auto'\n    },\n    appTitle: {\n        marginRight: 'auto',\n        textDecoration: 'none'\n    },\n    avatar: {\n        width: theme.spacing(4),\n        height: theme.spacing(4)\n    }\n}));\n\nfunction Layout(props: LayoutProps) {\n    const classes = useStyles();\n\n    const leftSide = props.leftSide && (\n        <aside className={classes.leftSide}>\n            {props.leftSide}\n        </aside>\n    );\n\n    const rightSide = props.rightSide && (\n        <aside className={classes.rightSide}>\n            {props.rightSide}\n        </aside>\n    );\n\n    const main = (\n        <ErrorBoundary>\n            <main className={classes.main}>\n                {props.children}\n            </main>\n        </ErrorBoundary>\n    );\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.content}>\n                {leftSide}\n                {main}\n                {rightSide}\n            </div>\n        </div>\n    )\n}\n\nexport default Layout;\n","import Layout from \"./Layout\";\n\nexport default Layout;\n","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport ContactProfile, {CONTACT_PROFILE_ROUTE_PATH} from \"../ContactProfile\";\nimport Attachments, {CHAT_ATTACHMENTS_ROUTE_PATH} from \"../Attachments\";\n\nfunction ChatRoutes() {\n    return (\n        <Switch>\n            <Route path={CONTACT_PROFILE_ROUTE_PATH} component={ContactProfile} />\n            <Route path={CHAT_ATTACHMENTS_ROUTE_PATH} component={Attachments} />\n            <Route component={ContactProfile} />\n        </Switch>\n    );\n}\n\nexport default ChatRoutes;\n","import Chat from \"./Chat\";\nimport Layout from \"../../layout\";\nimport ChatRoutes from \"./ChatRoutes\";\nimport React from \"react\";\nimport {useMediaQuery, useTheme} from \"@material-ui/core\";\n\nexport const CHAT_ROUTE_PATH = '/chat/:id';\n\nfunction ChatContainer() {\n    const theme = useTheme();\n    const isBreakpointSm = useMediaQuery(theme.breakpoints.down('sm'));\n\n    if (isBreakpointSm) return <Chat/>;\n\n    return (\n        <Layout\n            rightSide={<ChatRoutes/>}\n        >\n            <Chat/>\n        </Layout>\n    );\n}\n\nexport default ChatContainer;\n","import React from \"react\";\nimport {Switch, Route} from \"react-router-dom\";\nimport Welcome from \"../views/Welcome\";\nimport NotFound from \"../views/NotFound\";\nimport Chat, {CHAT_ROUTE_PATH} from \"../views/Chat\";\nimport Settings, {SETTINGS_ROUTE_PATH} from \"../views/Settings\";\nimport Profile, {PROFILE_ROUTE_PATH} from \"../views/Profile\";\n\nfunction Routes() {\n    return (\n        <Switch>\n            <Route exact={true} path=\"/\" component={Welcome} />\n            <Route path={SETTINGS_ROUTE_PATH} component={Settings} />\n            <Route path={CHAT_ROUTE_PATH} component={Chat} />\n            <Route path={PROFILE_ROUTE_PATH} component={Profile} />\n            <Route component={NotFound} />\n        </Switch>\n    )\n}\n\nexport default Routes;\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {RootState} from \"./rootReducer\";\n\nexport interface StatusState {\n    message: string | null;\n    autoHideDuration: number;\n    error: boolean;\n}\n\nconst initialState: StatusState = {\n    message: null,\n    autoHideDuration: 5000,\n    error: false\n};\n\nconst statusSlice = createSlice({\n    name: 'status',\n    initialState,\n    reducers: {\n        setStatusMessage(state, action: PayloadAction<StatusState['message']>) {\n            state.message = action.payload;\n        },\n        setStatusError(state, action: PayloadAction<StatusState['message']>) {\n            state.message = action.payload;\n            state.error = true;\n        },\n        resetStatus(state) {\n            state.message = null;\n            state.error = false;\n        }\n    }\n});\n\nexport const selectStatus = (state: RootState) => state.status;\n\nexport const {\n    setStatusMessage,\n    setStatusError,\n    resetStatus\n} = statusSlice.actions;\n\nconst statusReducer = statusSlice.reducer;\nexport default statusReducer;","import React from \"react\";\nimport {Snackbar, SnackbarProps} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Close} from \"@material-ui/icons\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectStatus, resetStatus} from \"../store/statusSlice\";\n\nfunction ActionSnackbar() {\n    const {message, autoHideDuration} = useSelector(selectStatus);\n    const dispatch = useDispatch();\n    const hasMessage = Boolean(message);\n    const hideSnackbar = () => dispatch(resetStatus());\n\n    if (!hasMessage) return null;\n\n    const handleClose: SnackbarProps['onClose'] = (event, reason) => {\n        hideSnackbar();\n    };\n\n    const action = (\n        <IconButton\n            size=\"small\"\n            aria-label=\"close\"\n            color=\"inherit\"\n            onClick={hideSnackbar}\n        >\n            <Close fontSize=\"small\" />\n        </IconButton>\n    );\n\n    return (\n        <Snackbar\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n            }}\n            open={hasMessage}\n            autoHideDuration={autoHideDuration}\n            onClose={handleClose}\n            message={message}\n            action={action}\n        />\n    );\n}\n\nexport default ActionSnackbar;","import React from \"react\";\nimport {Switch, Route} from \"react-router-dom\";\nimport Chat, {CHAT_ROUTE_PATH} from \"../views/Chat\";\nimport Settings, {SETTINGS_ROUTE_PATH} from \"../views/Settings\";\nimport Profile, {PROFILE_ROUTE_PATH} from \"../views/Profile\";\nimport Contacts, {CONTACTS_ROUTE_PATH} from \"../views/Contacts\";\nimport ContactProfile, {CONTACT_PROFILE_ROUTE_PATH} from \"../views/ContactProfile\";\nimport Attachments, {CHAT_ATTACHMENTS_ROUTE_PATH} from \"../views/Attachments\";\n\nfunction MobileRoutes() {\n    return (\n        <Switch>\n            <Route exact={true} path=\"/\" component={Contacts} />\n            <Route exact={true} path={CHAT_ROUTE_PATH} component={Chat} />\n            <Route path={CONTACTS_ROUTE_PATH} component={Contacts} />\n            <Route path={SETTINGS_ROUTE_PATH} component={Settings} />\n            <Route path={PROFILE_ROUTE_PATH} component={Profile} />\n            <Route path={CONTACT_PROFILE_ROUTE_PATH} component={ContactProfile} />\n            <Route path={CHAT_ATTACHMENTS_ROUTE_PATH} component={Attachments} />\n            <Route component={Contacts} />\n        </Switch>\n    )\n}\n\nexport default MobileRoutes;\n","import React, {useEffect} from \"react\";\nimport Routes from \"./Routes\";\nimport Layout from \"../layout/Layout\";\nimport Contacts from \"../views/Contacts\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectAuth, authRequest} from \"../store/authSlice\";\nimport ErrorMessage from \"../layout/ErrorMessage\";\nimport Loading from \"../layout/Loading\";\nimport ActionSnackbar from \"./ActionSnackbar\";\nimport MobileRoutes from \"./MobileRoutes\";\nimport {useMediaQuery, useTheme} from \"@material-ui/core\";\n\nfunction App() {\n    const dispatch = useDispatch();\n    const theme = useTheme();\n    const isBreakpointSm = useMediaQuery(theme.breakpoints.down('sm'));\n    const { error, loading, user } = useSelector(selectAuth);\n\n    useEffect(() => {\n        const action = authRequest({\n            login: 'someLogin',\n            password: 'somePassword'\n        });\n        dispatch(action);\n    }, [dispatch]);\n\n    if (loading || !user) return <Loading/>;\n    if (error) return <ErrorMessage/>;\n\n    if (isBreakpointSm) return (\n        <>\n            <MobileRoutes/>\n            <ActionSnackbar/>\n        </>\n    );\n\n    return (\n        <Layout\n            title=\"Fake Messenger\"\n            leftSide={<Contacts/>}\n        >\n            <Routes />\n            <ActionSnackbar/>\n        </Layout>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('ErrorMessage during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./contactsSlice\";\nimport chatsReducer from \"./chatsSlice\";\nimport authSlice from \"./authSlice\";\nimport settingsReducer from \"./settingsSlice\";\nimport statusReducer from \"./statusSlice\";\n\nexport const rootReducer = combineReducers({\n    contacts: contactsReducer,\n    chats: chatsReducer,\n    auth: authSlice,\n    settings: settingsReducer,\n    status: statusReducer\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import {Contact} from \"../models/Contact\";\nimport faker from \"faker\";\nimport {fakerService} from \"./fakerService\";\nimport {ErrorResponse, FetchList} from \"../interfaces/Service\";\n\nexport const fetchContacts = async (skip = 0, limit = 12): Promise<FetchList<Contact> | ErrorResponse> => await ({\n    count: faker.random.number({ min: 12, max: 9999 }),\n    items: Array(limit).fill(null).map(fakerService.contact)\n});\n\nexport const removeContact = async (id: Contact['id']): Promise<boolean | ErrorResponse> => true;\n\nexport const addContact = async (id: Contact['id']): Promise<boolean | ErrorResponse> => true;","import {all, call, put, takeEvery, takeLatest, delay} from \"redux-saga/effects\";\nimport {addContact, fetchContacts, removeContact} from \"../services/contactService\";\nimport {ErrorResponse, FetchList} from \"../interfaces/Service\";\nimport {Contact} from \"../models/Contact\";\nimport {contactsFailure, contactsRequest, contactsSuccess, addOneContact, removeContactById} from \"../store/contactsSlice\";\nimport {setStatusError, setStatusMessage} from \"../store/statusSlice\";\n\nfunction* removeContactSaga(action: ReturnType<typeof removeContactById>) {\n    const id = action.payload as string;\n    try {\n        const request = () => removeContact(id);\n        const response = yield call(request);\n        const errors = (response as ErrorResponse).errors;\n        if (errors) throw new Error(errors[0]);\n        const statusAction = setStatusMessage(`Success removed`);\n        yield put(statusAction);\n    } catch(error) {\n        const statusAction = setStatusError(error.message);\n        yield put(statusAction);\n    }\n}\n\nfunction* addContactSaga(action: ReturnType<typeof addOneContact>) {\n    const contact = action.payload;\n    try {\n        const request = () => addContact(contact.id);\n        const response = yield call(request);\n        const errors = (response as ErrorResponse).errors;\n        if (errors) throw new Error(errors[0]);\n        const statusMessage = `${contact.firstName} ${contact.lastName} added to contacts`;\n        const statusAction = setStatusMessage(statusMessage);\n        yield put(statusAction);\n    } catch(error) {\n        const statusAction = setStatusError(error.message);\n        yield put(statusAction);\n    }\n}\n\nfunction* fetchContactsSaga() {\n    yield delay(240); // need remove in production\n    try {\n        const response = yield call(fetchContacts);\n        const errors = (response as ErrorResponse).errors;\n        if (errors) throw new Error(errors[0]);\n        const contacts = (response as FetchList<Contact>).items;\n        const action = contactsSuccess(contacts);\n        yield put(action);\n    } catch(error) {\n        const action = contactsFailure();\n        const statusAction = setStatusError(error.message);\n        yield all([\n            put(action),\n            put(statusAction)\n        ])\n    }\n}\n\nfunction* watchContactsSaga() {\n    yield all([\n        takeEvery(removeContactById.type, removeContactSaga),\n        takeEvery(addOneContact.type, addContactSaga),\n        takeLatest(contactsRequest.type, fetchContactsSaga)\n    ])\n}\n\nexport default watchContactsSaga;","import {AuthUser, UserProfile} from \"../models/AuthUser\";\nimport {fakerService} from \"./fakerService\";\nimport {ErrorResponse} from \"../interfaces/Service\";\n\nexport const signInWithLoginAndPassword = async (login: string, password: string): Promise<AuthUser | ErrorResponse> => await fakerService.authUser();\nexport const signOut = async (): Promise<boolean | ErrorResponse> => true;\nexport const updateUserProfile = async (changes: UserProfile): Promise<boolean | ErrorResponse> => true;\n","import {call, all, takeEvery, put, takeLatest} from \"redux-saga/effects\";\nimport {authRequest, authSuccess, authFailure, updateProfile} from \"../store/authSlice\";\nimport {signInWithLoginAndPassword, updateUserProfile} from \"../services/authService\";\nimport {ErrorResponse} from \"../interfaces/Service\";\nimport {setStatusError, setStatusMessage} from \"../store/statusSlice\";\nimport {AuthUser} from \"../models/AuthUser\";\n\nfunction* signInSaga(action: ReturnType<typeof authRequest>) {\n    const { login, password } = action.payload;\n    try {\n        const request = () => signInWithLoginAndPassword(login, password);\n        const response = yield call(request);\n        const errors = (response as ErrorResponse).errors;\n        if (errors) throw new Error(errors[0]);\n        const user = response as AuthUser;\n        const action = authSuccess(user);\n        const statusAction = setStatusMessage(`Authorized as ${user.firstName} ${user.lastName}`);\n        yield all([\n            put(action),\n            put(statusAction)\n        ]);\n    } catch(error) {\n        const action = authFailure();\n        const statusAction = setStatusError(error.message);\n        yield all([\n            put(action),\n            put(statusAction)\n        ]);\n    }\n}\n\nfunction* updateProfileSaga(action: ReturnType<typeof updateProfile>) {\n    const profileChanges = action.payload;\n    try {\n        const request = () => updateUserProfile(profileChanges);\n        const response = yield call(request);\n        const errors = (response as ErrorResponse).errors;\n        if (errors) throw new Error(errors[0]);\n        const statusAction = setStatusMessage('Profile updated');\n        yield put(statusAction);\n    } catch(error) {\n        const statusAction = setStatusError(error.message);\n        yield put(statusAction);\n    }\n}\n\nfunction* watchAuthSaga() {\n    yield all([\n        takeLatest(authRequest.type, signInSaga),\n        takeEvery(updateProfile.type, updateProfileSaga)\n    ])\n}\n\nexport default watchAuthSaga;","import {Message} from \"../models/Message\";\nimport faker from \"faker\";\nimport {\n    ErrorResponse,\n    FetchList\n} from \"../interfaces/Service\";\nimport {fakerService} from \"./fakerService\";\nimport {Chat} from \"../models/Chat\";\n\nexport const fetchMessages = async (skip = 0, limit = 12): Promise<FetchList<Message> | ErrorResponse> => await ({\n    count: faker.random.number({ min: 12, max: 9999 }),\n    items: Array(limit).fill(null).map(fakerService.message)\n});\n\nexport const addMessage = async (chatId: Chat['id'], messageText: Message['text']): Promise<Message | ErrorResponse> => {\n    const message = fakerService.message();\n    message.text = messageText;\n    message.attachmentFile = undefined;\n    message.attachmentLink = undefined;\n    message.createdAt = new Date();\n    message.createdByMe = true;\n    return message;\n};\n\nexport const removeMessages = async (ids?: Message['id'][]): Promise<boolean | ErrorResponse> => true;\n","import {all, call, put, delay, fork, takeEvery} from \"redux-saga/effects\";\nimport {ErrorResponse, FetchList} from \"../interfaces/Service\";\nimport {setStatusError} from \"../store/statusSlice\";\nimport {addMessage, fetchMessages, removeMessages} from \"../services/messageService\";\nimport {\n    addOneMessage,\n    removeManyMessages,\n    addMessageRequest,\n    messagesFailure,\n    messagesRequest,\n    messagesSuccess,\n    setMessagePrints\n} from \"../store/chatsSlice\";\nimport {Message} from \"../models/Message\";\nimport {Chat} from \"../models/Chat\";\nimport {fakerService} from \"../services/fakerService\";\n\nfunction* removeMessageSaga(action: ReturnType<typeof removeManyMessages>) {\n    const { messageIds } = action.payload;\n    try {\n        const request = () => removeMessages(messageIds);\n        const response = yield call(request);\n        const errors = (response as ErrorResponse).errors;\n        if (errors) throw new Error(errors[0]);\n    } catch (error) {\n        const statusAction = setStatusError(error.message);\n        yield put(statusAction);\n    }\n}\n\nfunction* sendFakeAnswerSaga(chatId: Chat['id']) {\n    const message = fakerService.message();\n    message.createdBy = chatId;\n    message.createdByMe = false;\n    message.createdAt = new Date();\n    message.attachmentLink = undefined;\n    message.attachmentFile = undefined;\n    message.read = true;\n    message.delivered = true;\n\n    const startPrintsTimeout = (Math.random() * 2000 + 1000);\n    yield delay(startPrintsTimeout);\n    const startsPrintsAction = setMessagePrints({chatId, prints: true});\n    yield put(startsPrintsAction);\n\n    const timeout = message.text.length * (Math.random() * 10 + 5);\n    yield delay(timeout);\n    const addMessageAction = addOneMessage({chatId, message});\n    const endsPrintsAction = setMessagePrints({chatId, prints: false});\n    yield all([\n        put(addMessageAction),\n        put(endsPrintsAction)\n    ]);\n}\n\nfunction* addMessageSaga(action: ReturnType<typeof addMessageRequest>) {\n    const { chatId, messageText } = action.payload;\n    try {\n        const request = () => addMessage(chatId, messageText);\n        const response = yield call(request);\n        const errors = (response as ErrorResponse).errors;\n        if (errors) throw new Error(errors[0]);\n        const message = response as Message;\n        const action = addOneMessage({chatId, message});\n        yield all([\n            put(action),\n            fork(sendFakeAnswerSaga, chatId),\n        ]);\n    } catch (error) {\n        const statusAction = setStatusError(error.message);\n        yield put(statusAction);\n    }\n}\n\nfunction* fetchMessagesSaga(action: ReturnType<typeof messagesRequest>) {\n    yield delay(240); // need remove in production\n    const { chatId } = action.payload;\n    try {\n        const request = () => fetchMessages();\n        const response = yield call(request);\n        const errors = (response as ErrorResponse).errors;\n        if (errors) throw new Error(errors[0]);\n        const messages = (response as FetchList<Message>).items;\n        const action = messagesSuccess({chatId, messages});\n        yield put(action);\n    } catch (error) {\n        const action = messagesFailure({chatId});\n        const statusAction = setStatusError(error.message);\n        yield all([\n            put(action),\n            put(statusAction)\n        ])\n    }\n}\n\nfunction* watchChatSaga() {\n    yield all([\n        takeEvery(removeManyMessages.type, removeMessageSaga),\n        takeEvery(addMessageRequest.type, addMessageSaga),\n        takeEvery(messagesRequest.type, fetchMessagesSaga)\n    ])\n}\n\nexport default watchChatSaga;","import {all} from \"redux-saga/effects\";\nimport contactsSaga from \"./contactsSaga\";\nimport authSaga from \"./authSaga\";\nimport chatSaga from \"./chatSaga\";\n\nexport default function* rooSaga() {\n    yield all([\n        contactsSaga(),\n        authSaga(),\n        chatSaga()\n    ]);\n}\n","import {createStore, applyMiddleware} from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport {rootReducer} from \"./rootReducer\";\nimport rootSaga from \"../sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(\n        applyMiddleware(sagaMiddleware)\n    )\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;","import {createMuiTheme} from \"@material-ui/core\";\nimport {blue, green} from \"@material-ui/core/colors\";\n\nexport const LIGHT_THEME = createMuiTheme({\n    palette: {\n        type: 'light',\n        primary: blue,\n        secondary: green\n    },\n    overrides: {\n    }\n});\n\nexport const DARK_THEME = createMuiTheme({\n    palette: {\n        type: 'dark'\n    }\n});\n","import React, {PropsWithChildren} from \"react\";\nimport {LIGHT_THEME, DARK_THEME} from \"./theme\";\nimport {MuiThemeProvider} from \"@material-ui/core\";\nimport {useSelector} from \"react-redux\";\nimport {selectSettings} from \"../../store/settingsSlice\";\n\nfunction ThemeProvider(props: PropsWithChildren<{}>) {\n    const {darkThemeEnabled} = useSelector(selectSettings);\n    return (\n        <MuiThemeProvider theme={darkThemeEnabled ? DARK_THEME : LIGHT_THEME}>\n            {props.children}\n        </MuiThemeProvider>\n    )\n}\n\nexport default ThemeProvider;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./store\";\nimport {CssBaseline} from \"@material-ui/core\";\nimport ThemeProvider from \"./components/ThemeProvider\";\n\nfunction Root() {\n    return (\n        <Router>\n            <Provider store={store}>\n                <ThemeProvider>\n                    <React.StrictMode>\n                        <CssBaseline/>\n                        <App />\n                    </React.StrictMode>\n                </ThemeProvider>\n            </Provider>\n        </Router>\n    )\n}\n\nReactDOM.render(\n  <Root/>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}