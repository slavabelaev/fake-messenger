{"version":3,"sources":["serviceWorker.ts","features/contacts/contactsSlice.ts","features/chat/chatsSlice.ts","features/auth/authSlice.ts","features/settings/settingsSlice.ts","app/statusSlice.ts","app/rootReducer.ts","features/messages/generateMessage.ts","features/attachments/generateAttachment.ts","features/links/generateAttachmentLink.ts","features/contacts/generateContact.ts","features/contacts/contactService.ts","features/contacts/contactsSaga.ts","features/auth/generateAuthUser.ts","features/auth/authService.ts","features/auth/authSaga.ts","features/messages/messageService.ts","features/chat/chatSaga.ts","app/rootSaga.ts","app/store.ts","app/ThemeProvider/theme.ts","app/ThemeProvider/ThemeProvider.tsx","common/components/layout/ErrorMessage.tsx","common/components/layout/Loading.tsx","features/auth/WelcomePage/WelcomePage.tsx","features/auth/WelcomePage/index.tsx","common/pages/NotFoundPage/NotFoundPage.tsx","common/components/MessageList/MessageReadStatus.tsx","common/components/MessageList/MessageListItem.tsx","common/components/ListView.tsx","common/components/MessageList/MessageList.tsx","features/messages/MessageList.tsx","common/components/SearchInputBase.tsx","common/components/ToolbarListItem.tsx","common/components/layout/View.tsx","common/components/PopoverAction.tsx","common/components/layout/BackButton.tsx","common/components/layout/LayoutToolbar.tsx","common/components/DetailListItem.tsx","common/components/SwitchListItem.tsx","features/contacts/ContactProfilePage/NotificationsContactSwitch.tsx","features/contacts/ContactProfilePage/ContactProfilePage.tsx","features/contacts/ContactProfilePage/index.tsx","common/components/AttachmentList/AttachmentListItem.tsx","common/components/AttachmentList/AttachmentList.tsx","common/components/layout/Empty.tsx","features/attachments/AttachmentList.tsx","common/components/LinkList/LinkListItem.tsx","common/components/LinkList/LinkList.tsx","features/links/LinkList.tsx","common/components/MenuListItem.tsx","features/attachments/AttachmentsPage/AttachmentsPage.tsx","features/attachments/AttachmentsPage/index.tsx","common/components/SendMessageToolbar/EmojiList.tsx","common/components/SendMessageToolbar/SendMessageToolbar.tsx","common/components/ContactList/ContactListItem.tsx","common/components/ContactList/ContactList.tsx","features/contacts/ContactList.tsx","features/settings/DarkThemeSwitch.tsx","features/settings/SettingList.tsx","features/settings/SettingsPage/SettingsPage.tsx","features/settings/SettingsPage/index.tsx","common/components/forms/EditProfile.tsx","features/auth/ProfilePage/ProfilePage.tsx","features/auth/ProfilePage/index.tsx","features/contacts/ContactsPage/ContactsPage.tsx","features/contacts/ContactsPage/index.tsx","features/chat/ChatPage/ChatPage.tsx","common/components/layout/ErrorBoundary.tsx","common/components/layout/Layout.tsx","features/chat/ChatPage/ChatPageRoutes.tsx","features/chat/ChatPage/index.tsx","app/Routes.tsx","app/ActionSnackbar.tsx","app/MobileRoutes.tsx","app/App.tsx","app/Root.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","contactsAdapter","createEntityAdapter","initialState","getInitialState","searchQuery","loading","contactsSlice","createSlice","name","reducers","request","success","action","addMany","payload","failure","addOne","removeOne","setSearchQuery","switchNotifications","contactId","notificationsEnabled","entities","updateOne","id","changes","selectContacts","contacts","getSelectors","selectContactById","selectAll","selectById","getContactByIdSelector","selectFoundContacts","createSelector","query","toLowerCase","searchResults","entity","firstName","includes","lastName","push","actions","contactsRequest","contactsSuccess","contactsFailure","addOneContact","removeContactById","contactsSearchQuery","contactsSwitchNotifications","contactsReducer","reducer","itemInitialState","messages","checkedIds","prints","checkModeEnabled","chatsSlice","fetchRequest","chatId","fetchSuccess","fetchFailure","setPrints","switchCheckMode","enabled","chat","undefined","addMessageRequest","addMessageSuccess","message","removeMessagesSuccess","messageIds","filter","item","toggleCheck","messageId","removeAttachmentsSuccess","forEach","attachmentFile","removeLinksSuccess","attachmentLink","selectChatById","chats","fetchMessagesRequest","fetchMessagesSuccess","fetchMessagesFailure","toggleCheckMessage","messagesSearchQuery","switchMessagesCheckMode","setMessagePrints","chatsReducer","authSlice","user","update","selectAuth","auth","authRequest","authSuccess","authFailure","updateProfile","authReducer","settingsSlice","darkThemeEnabled","enableDarkTheme","selectSettings","settings","settingsReducer","statusSlice","autoHideDuration","setMessage","setError","reset","selectStatus","status","setStatusMessage","setStatusError","resetStatus","statusReducer","rootReducer","combineReducers","generateMessage","hasAttachmentFile","Math","random","hasAttachmentLink","faker","uuid","text","lorem","split","map","smiles","floor","length","generateRandomEmoji","join","createdBy","createdAt","date","recent","delivered","read","type","system","fileType","fileName","size","number","lastModified","past","getMilliseconds","imageUrl","image","avatar","title","company","companyName","description","sentence","url","internet","createdByMe","boolean","generateContact","email","phoneNumber","phone","avatarUrl","lastMessage","isOnline","lastVisitAt","dateOfBirth","min","max","bio","fetchContacts","a","limit","count","items","Array","fill","removeContact","addContact","removeContactSaga","addContactSaga","fetchContactsSaga","watchContactsSaga","call","response","errors","Error","statusAction","put","contact","statusMessage","delay","all","takeEvery","takeLatest","generateAuthUser","signInWithLoginAndPassword","login","password","updateUserProfile","signInSaga","updateProfileSaga","watchAuthSaga","profileChanges","fetchMessages","addMessage","messageText","Date","removeMessages","ids","removeMessageSaga","sendFakeAnswerSaga","addMessageSaga","fetchMessagesSaga","watchChatSaga","startPrintsTimeout","startsPrintsAction","timeout","addMessageAction","endsPrintsAction","fork","rooSaga","contactsSaga","authSaga","chatSaga","sagaMiddleware","createSagaMiddleware","defaultMiddleware","getDefaultMiddleware","thunk","immutableCheck","serializableCheck","store","configureStore","devTools","process","middleware","run","rootSaga","LIGHT_THEME","createMuiTheme","palette","primary","red","secondary","grey","overrides","DARK_THEME","ThemeProvider","props","useSelector","theme","children","useStyles","makeStyles","createStyles","root","display","flexDirection","justifyContent","alignItems","padding","spacing","height","width","ErrorMessage","classes","className","Typography","variant","color","Loading","CircularProgress","header","marginBottom","WelcomePage","Avatar","src","component","textAlign","NotFoundPage","MessageReadStatus","marginRight","gutterRight","deliveredIcon","zIndex","opacity","readIcon","marginLeft","Check","fontSize","MessageListItem","direction","CheckboxProps","bgColor","main","background","paper","textColor","getContrastText","directionRight","directionLeft","position","maxWidth","backgroundColor","borderRadius","shape","listItemText","margin","tailRight","right","top","borderWidth","borderColor","borderStyle","borderRightColor","borderBottomColor","tailLeft","left","borderLeftColor","listItemIcon","toLocaleTimeString","substring","ListItemIcon","Checkbox","messageStatus","messageTail","ListItem","dense","selected","checked","ListItemText","ListView","List","itemCount","_","index","renderItem","MessageList","getItem","getItemKey","itemProps","itemKey","key","MessageListContainer","allMessages","messagesFilter","getMessagesFilter","messagesFetched","dispatch","useDispatch","useEffect","mapMessageToItemProps","onChange","event","SearchInputBase","placeholder","initialValue","onBack","onClear","inputProps","useState","value","setValue","startAdornment","InputAdornment","Tooltip","IconButton","edge","onClick","ArrowBack","endAdornment","Clear","InputBase","fullWidth","autoFocus","target","primaryText","whiteSpace","overflow","textOverflow","ToolbarListItem","viewName","setViewName","handleBack","SearchInputBaseProps","Toolbar","avatarTo","Link","to","avatarSrc","searchButton","endAction","Search","startAction","ListItemAvatar","defaultView","onKeyUp","keyCode","content","flex","toolbar","divider","borderBottomStyle","borderBottomWidth","footer","borderTopColor","borderTopStyle","borderTopWidth","View","contentRef","React","createRef","classNames","needScrollBottom","current","scrollTo","scrollHeight","ref","PopoverAction","anchorEl","setAnchorEl","open","handleClick","currentTarget","handleClose","iconButton","renderButton","MoreVert","popover","Popover","onClose","anchorOrigin","vertical","horizontal","renderPopover","BackButton","history","useHistory","goBack","LayoutToolbar","useTheme","isBreakpointSm","useMediaQuery","breakpoints","down","DetailListItem","SwitchListItem","switchProps","button","ListItemSecondaryAction","Switch","NotificationsContactSwitch","selectContact","ContactProfilePage","useParams","removeListItem","Delete","Divider","ListSubheader","href","toLocaleDateString","typeIcons","PlayCircleOutline","Audiotrack","Image","FontDownload","TextFields","Message","AttachmentListItem","Attachment","bytes","download","GetApp","AttachmentList","Empty","AttachmentListContainer","selectAttachments","messagesWithAttachments","attachments","attachment","singleLine","LinkListItem","OpenInNew","LinkList","LinkListContainer","selectLinks","links","link","MenuListItem","icon","disabled","AttachmentsPage","tabsValue","setTabsValue","popoverMenuButton","tabs","Tabs","indicatorColor","Tab","label","toolbarWithTabs","emojiGroups","group","gridTemplateColumns","cursor","EmojiList","emoji","role","emojiGroup","disableGutters","Container","messageField","marginTop","sendButton","emojiList","maxHeight","SendMessageToolbar","onSubmit","emojiOpen","setEmojiOpen","handleSubmit","Send","InsertEmoticon","htmlFor","AttachFile","hidden","TextField","onKeyDown","ctrlKey","preventDefault","multiline","rowsMax","InputProps","ContactListItem","fullName","toProfile","listItemSecondaryAction","placement","NavLink","InfoOutlined","secondaryText","activeClassName","Badge","overlap","invisible","ContactList","ContactListContainer","CHAT_ROUTE_PATH","replace","mapContactToItemProps","DarkThemeSwitch","SettingList","SettingsPage","EditProfile","profile","setProfile","getChangeHandler","fieldName","Grid","container","xs","style","Button","readOnly","required","InputLabelProps","shrink","toISOString","paddingTop","paddingBottom","ProfilePage","fab","bottom","ContactsPage","settingsButton","Settings","handleReset","statusText","addButton","Fab","Add","cancelButton","ChatPage","removeAllMessages","formatDistance","pathToProfile","backButton","startIcon","trim","ErrorBoundary","errorInfo","this","setState","Component","leftSide","minWidth","borderRightWidth","borderRightStyle","rightSide","borderLeftWidth","borderLeftStyle","appTitle","textDecoration","Layout","ChatPageRoutes","path","ChatContainer","Routes","exact","Chat","ActionSnackbar","hasMessage","hideSnackbar","aria-label","Close","Snackbar","reason","MobileRoutes","App","Root","StrictMode","CssBaseline","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,qBAAO,2BAAQ,2BAAQ,2BAAQ,qBAAO,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,qBAAO,qBAAO,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,qBAAO,2BAAQ,2BAAQ,2BAAQ,6BAEtnC,CACIzB,MAAO,iBACPyB,MAAO,CAAC,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,qBAAO,2BAAQ,2BAAQ,2BAAQ,qBAAO,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,qBAAO,qBAAO,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,qBAAO,2BAAQ,2BAAQ,2BAAQ,6BAEtnC,CACIzB,MAAO,aACPyB,MAAO,CAAC,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,qBAAO,2BAAQ,2BAAQ,2BAAQ,qBAAO,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,qBAAO,qBAAO,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,qBAAO,2BAAQ,2BAAQ,2BAAQ,6BAEtnC,CACIzB,MAAO,QACPyB,MAAO,CAAC,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,2BAAQ,2BAAQ,6CAAW,2BAAQ,6CAAW,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,qBAAO,2BAAQ,2BAAQ,2BAAQ,qBAAO,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,qBAAO,qBAAO,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,qBAAO,2BAAQ,2BAAQ,2BAAQ,6BAEtnC,CACIzB,MAAO,qBACPyB,MAAO,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,SAAK,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,SAAK,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,iBAEpiC,CACIzB,MAAO,iBACPyB,MAAO,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,iBAEtnB,CACIzB,MAAO,oBACPyB,MAAO,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,SAAK,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,SAAK,eAAM,eAAM,eAAM,eAAM,SAAK,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,SAAK,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,iBAEltB,CACIzB,MAAO,wBACPyB,MAAO,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,SAAK,eAAM,eAAM,eAAM,eAAM,SAAK,eAAM,uCAAU,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,uCAAU,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,iCAAS,iCAAS,iCAAS,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,iCAAS,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,iCAAS,uCAAU,uCAAU,uCAAU,uCAAU,uCAAU,iCAAS,uCAAU,uCAAU,uCAAU,uCAAU,uCAAU,eAAM,iCAAS,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,iCAAS,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,uCAAU,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,uCAAU,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,eAAM,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,iCAAS,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,iCAAS,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,iCAAS,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,iCAAS,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,iCAAS,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,iCAAS,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,iCAAS,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,iCAAS,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,iCAAS,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,iCAAS,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,iCAAS,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,iCAAS,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,iCAAS,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,iCAAS,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,iCAAS,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,iCAAS,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,iCAAS,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,iCAAS,6CAAW,6CAAW,6CAAW,6CAAW,6CAAW,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,SAAK,eAAM,eAAM,eAAM,iBAE3qE,CACIzB,MAAO,UACPyB,MAAO,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,SAAK,SAAK,SAAK,eAAM,eAAM,SAAK,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,SAAK,eAAM,SAAK,eAAM,eAAM,SAAK,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,iBAE/rC,CACIzB,MAAO,2BACPyB,MAAO,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,SAAK,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,iBAE7N,CACIzB,MAAO,UACPyB,MAAO,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,SAAK,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,qBAAO,eAAM,eAAM,qBAAO,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,qBAAO,qBAAO,eAAM,eAAM,qBAAO,eAAM,SAAK,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,SAAK,SAAK,SAAK,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,SAAK,qBAAO,eAAM,eAAM,eAAM,SAAK,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,qBAAO,eAAM,qBAAO,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAAO,gBAAO,gBAAO,gBAAO,gBAAO,gBAAO,gBAAO,gBAAO,gBAAO,gBAAO,eAAM,eAAM,gBAAO,gBAAO,eAAM,eAAM,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,SAAK,SAAK,SAAK,eAAM,SAAK,eAAM,eAAM,eAAM,aAAM,aAAM,eAAM,SAAK,SAAK,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,iCAAS,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,qBAAO,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,iBAEnnD,CACIzB,MAAO,QACPyB,MAAO,CAAC,qBAAO,eAAM,eAAM,eAAM,uCAAU,iCAAS,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,euFAAkB,uFAAkB,uFAAkB,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,6BAEpiE,CACIzB,MAAO,MACPyB,MAAO,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,iCAAS,iCAAS,eAAM,iCAAS,iCAAS,eAAM,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,iCAAS,eAAM,eAAM,iCAAS,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,kBAQve+E,GAAYC,cAAW,SAACH,GAAD,OAAkBI,aAAa,CACxDwP,MAAO,CACHtP,QAAS,OACTuP,oBAAqB,2BAEzBpb,KAAM,CACF8N,SAAUvC,EAAMW,QAAQ,GACxBmP,OAAQ,gBA4CDC,OAxCf,YAAiD,IAA5BzI,EAA2B,EAA3BA,QACXvG,EAAUb,KAEVoF,EAAa,SAAC0K,GAAD,OACf,0BACIhP,UAAWD,EAAQtM,KACnBwb,KAAK,SACL3I,QAAS,kBAAMA,GAAWA,EAAQ0I,KAEjCA,IAwBT,OACI,6BACKL,GAAYzX,KAtBD,SAACgY,GAAD,OAChB,6BACI,kBAAC3H,GAAA,EAAD,CACIrH,QAAQ,QACRiP,gBAAc,GAEd,kBAAClP,GAAA,EAAD,CACIC,QAAQ,YAEPgP,EAAWxW,QAGpB,kBAAC0W,GAAA,EAAD,CAAWD,gBAAc,GACrB,yBAAKnP,UAAWD,EAAQ6O,OACnBM,EAAW/U,MAAMjD,IAAIoN,W,WC1GpCpF,GAAYC,cAAW,SAACH,GAAD,OAAkBI,aAAa,CACxDC,KAAM,GACNgQ,aAAc,CACVC,UAAWtQ,EAAMW,QAAQ,KACzBY,aAAcvB,EAAMW,QAAQ,KAC5B0I,KAAM,QAEVkH,WAAY,CACRlO,WAAYrC,EAAMW,QAAQ,IAE9B6P,UAAW,CACPC,UAAW,IACXzI,SAAU,aAwHH0I,OAlHf,YAAoE,IAAtCC,EAAqC,EAArCA,SACpB5P,EAAUb,KAD+C,EAE7B4G,oBAAkB,GAFW,oBAExD8J,EAFwD,KAE7CC,EAF6C,OAGjC/J,mBAAiB,IAHgB,oBAGxDzS,EAHwD,KAG/CwC,EAH+C,KAKzDia,EAAe,WACjBH,GAAYA,EAAStc,GACrBwC,EAAW,IACXga,GAAa,IAaXN,EACF,kBAACpJ,GAAA,EAAD,CACIzN,MAAM,QAEN,8BACI,kBAAC0N,GAAA,EAAD,CACIpG,UAAWD,EAAQwP,WACnBlJ,KAAK,MACLlG,MAAM,UACN6N,UAAW3a,EACXiT,QAASwJ,GAET,kBAACC,GAAA,EAAD,SAMV9J,EACF,kBAACC,GAAA,EAAD,CAAgB/D,SAAS,SACrB,kBAACgE,GAAA,EAAD,CAASzN,MAAM,mBACX,kBAAC0N,GAAA,EAAD,CACIC,KAAK,QACLnO,KAAK,QACLiI,MAAOyP,EAAY,UAAY,UAC/BtJ,QA1CQ,kBAAMuJ,GAAcD,KA4C5B,kBAACI,GAAA,EAAD,SAMVxJ,EACF,kBAACN,GAAA,EAAD,CAAgB/D,SAAS,OACrB,kBAACgE,GAAA,EAAD,CAASzN,MAAM,eACX,kBAAC0N,GAAA,EAAD,CACIC,KAAK,MACLnO,KAAK,QACLyI,UAAU,QACVsP,QAAQ,eAER,kBAACC,GAAA,EAAD,QAGR,2BACI3f,GAAG,cACHuH,KAAK,OACLqY,QAAM,KAKZd,EACF,yBAAKrP,UAAWD,EAAQsP,cACpB,kBAACe,GAAA,EAAD,CACIrK,MAAO1S,EACPgd,UAnEU,SAAC9K,GAAgC,IAC3C4C,EAAqB5C,EAArB4C,QAASmI,EAAY/K,EAAZ+K,QAdF,KAeXnI,GAA8BmI,EAC9Bza,EAAWxC,EAAU,MACdA,GAjBI,KAiBO8U,IAClB5C,EAAMgL,iBACNT,MA8DIxK,SArES,SAACC,GAAD,OAAgD1P,EAAW0P,EAAMsB,OAAOd,QAsEjFyK,WAAS,EACT5J,WAAW,EACX6J,QAAS,EACTvQ,QAAQ,WACRhI,KAAK,QACLuN,YAAY,gBACZiL,WAAY,CACRzK,iBACAO,gBAEJG,WAAS,KAKf6I,EAAYI,GACd,kBAACR,GAAA,EAAD,CAAWpP,UAAWD,EAAQyP,WAC1B,kBAAC,GAAD,CACIlJ,QAAS,SAAA0I,GAAK,OAAInZ,EAAWxC,EAAU2b,OAKnD,OACI,yBAAKhP,UAAWD,EAAQV,MACnBmQ,EACD,kBAACjI,GAAA,EAAD,KACK8H,EACAE,K,iCCjHXrQ,GAAYC,cAAW,SAACH,GAAD,OAAkBI,aAAa,CACxDjD,YAAa,CACTmD,QAAS,QACTG,WAAY,SACZsH,WAAY,SACZC,SAAU,SACVC,aAAc,iBAyEP0J,OArEf,YAO0B,IANtBhJ,EAMqB,EANrBA,UACAiJ,EAKqB,EALrBA,SACApX,EAIqB,EAJrBA,YACAC,EAGqB,EAHrBA,SACAiO,EAEqB,EAFrBA,GACAmJ,EACqB,EADrBA,UAEM9Q,EAAUb,KAEV4R,EAA0BD,EAC5B,kBAACtF,GAAA,EAAD,KACI,kBAACpF,GAAA,EAAD,CACIzN,MAAM,cACNqY,UAAU,QAEV,kBAAC3K,GAAA,EAAD,CACIzF,UAAWqQ,IACXtJ,GAAImJ,GAEJ,kBAACI,GAAA,EAAD,SAIZ,KAEEC,EAAgB1X,EAClB,0BAAMwG,UAAWD,EAAQ5D,aACrB,kBAAC,GAAD,CACIvE,UAAW4B,EAAY5B,UACvBC,KAAM2B,EAAY3B,KAClBmJ,aAAW,IAEdxH,EAAYzC,MAEjB,KAEJ,OACI,kBAAC6M,GAAA,EAAD,CACI0H,QAAM,EACN3K,UAAWqQ,IACXG,gBAAgB,eAChBzJ,GAAIA,GAAM,KAEV,kBAACM,GAAA,EAAD,KACI,kBAACoJ,GAAA,EAAD,CACIlR,QAAQ,MACRmR,QAAQ,SACRhH,aAAc,CACVE,WAAY,QACZD,SAAU,UAEdnK,MAAM,UACNmR,WAAY7X,GAEZ,kBAACgH,GAAA,EAAD,CACIC,IAAKiH,MAIjB,kBAAC3D,GAAA,EAAD,CACIzF,QAASqS,EACTnS,UAAWyS,IAEdJ,ICpEES,OAxBf,YAIsB,IAHlBpN,EAGiB,EAHjBA,UACAK,EAEiB,EAFjBA,QACAC,EACiB,EADjBA,WAaA,OACI,kBAAC,GAAD,CACIN,UAAWA,EACXG,WAdW,SAACD,GAChB,IAAMK,EAAYF,EAAQH,GACpBM,EAAUF,EAAaA,EAAWJ,GAASA,EACjD,OACI,kBAAC,GAAD,eACIO,IAAKD,GACDD,QC8BL8M,OAvBf,WACI,IAAM9gB,EAAWqO,YAAY/N,GADD,EAEH+N,YAAYtO,GAA9B3B,EAFqB,EAErBA,MAAOM,EAFc,EAEdA,QACR8V,EAAWC,cAOjB,OALAC,qBAAU,WACN,IAAMzV,EAASgC,IACfuT,EAASvV,KACV,CAACuV,IAEA9V,EAAgB,kBAAC,GAAD,MAChBN,EAAc,kBAAC,GAAD,MACb4B,EAAS2G,OAGV,kBAAC,GAAD,CACI8M,UAAWzT,EAAS2G,OACpBoN,WAAY,SAAAJ,GAAK,OAAI3T,EAAS2T,GAAO9T,IACrCiU,QAAS,SAAAH,GAAK,OAnCW,SAACnJ,GAClC,IAAMwM,EAAK+J,GAAgBC,QAAQ,MAAOxW,EAAQ3K,IAClD,MAAO,CACHqgB,SAAS,GAAD,OAAK1V,EAAQ5J,UAAb,YAA0B4J,EAAQ1J,UAC1CmW,UAAWzM,EAAQ3B,UACnBC,YAAa,CACTzC,KAAMmE,EAAQ1B,YAAYzC,KAC1Ba,UAAWsD,EAAQ1B,YAAY5B,UAC/BC,KAAMqD,EAAQ1B,YAAY3B,KAC1BJ,UAAWyD,EAAQ1B,YAAY/B,WAEnCgC,SAAUyB,EAAQzB,SAClBoX,UAAWnJ,EAAK,WAChBA,MAsBsBiK,CAAsBjhB,EAAS2T,OAN5B,kBAAC,GAAD,O,iCCrBlBuN,OAdf,WAA4B,IACjBtc,EAAoByJ,YAAYvJ,IAAhCF,iBACD4P,EAAWC,cAGjB,OACI,kBAAC,GAAD,CACI5G,QAAQ,aACRwF,QAASzO,EACTgQ,SANa,SAACvB,GAAD,OAAsBmB,EAAS3P,GAAgBwO,QCMzD8N,OARf,SAAqB/S,GACjB,OACI,kBAACoF,GAAA,EAAD,KACI,kBAAC,GAAD,QCcG4N,ICnBAA,GDGf,SAAsBhT,GAClB,IAAMwJ,EACF,kBAAC,GAAD,CACI5P,MAAM,iBAId,OACI,kBAAC,GAAD,CACI4P,QAASA,GAET,kBAAC,GAAD,Q,oBEyJGyJ,OA7Jf,SAAqBjT,GAA0B,IAAD,EACnClK,EAAQmK,YAAYjK,GAApBF,KACDsQ,EAAWC,cAFyB,EAGZW,mBAAsB,CAChDxU,UAAS,OAAEsD,QAAF,IAAEA,OAAF,EAAEA,EAAMtD,UACjBE,SAAQ,OAAEoD,QAAF,IAAEA,OAAF,EAAEA,EAAMpD,SAChB+H,UAAS,OAAE3E,QAAF,IAAEA,OAAF,EAAEA,EAAM2E,UACjBH,MAAK,OAAExE,QAAF,IAAEA,OAAF,EAAEA,EAAMwE,MACbC,YAAW,OAAEzE,QAAF,IAAEA,OAAF,EAAEA,EAAMyE,YACnBS,IAAG,OAAElF,QAAF,IAAEA,OAAF,EAAEA,EAAMkF,IACXH,YAAW,OAAE/E,QAAF,IAAEA,OAAF,EAAEA,EAAM+E,cAVmB,oBAGnCqY,EAHmC,KAG1BC,EAH0B,KAYpCC,EAAmB,SAACC,GAAD,OAA0B,SAAC5M,GAAD,OAA0C0M,EAAW,eACjGD,EADgG,gBAElGG,EAAY5M,EAAMsB,OAAOd,WAG9B,OACI,0BAAM4J,SAAU,SAAApK,GACZA,EAAMgL,iBACN,IAAM5gB,EAASwF,GAAc6c,GAC7B9M,EAASvV,KAET,kBAACyiB,GAAA,EAAD,CAAMC,WAAS,EAAC1S,QAAS,GACrB,kBAACyS,GAAA,EAAD,CAAM3e,MAAI,EAAC6e,GAAI,IACX,kBAAClC,GAAA,EAAD,CACIlQ,QAAQ,WACRhI,KAAK,QACLuW,MAAM,SACN1I,MAAOiM,EAAQzY,UACf+L,SAAU4M,EAAiB,aAC3BxB,WAAY,CACRzK,eACI,kBAACC,GAAA,EAAD,CAAgB/D,SAAS,SACrB,kBAAC1B,GAAA,EAAD,CACI8R,MAAO,CAAC1S,MAAO,GAAID,OAAQ,IAC3Bc,IAAG,OAAE9L,QAAF,IAAEA,OAAF,EAAEA,EAAM2E,aAIvBiN,aACI,kBAACN,GAAA,EAAD,CAAgB/D,SAAS,OACrB,kBAACqQ,GAAA,EAAD,CACItS,QAAQ,OACRhI,KAAK,QACLyI,UAAU,QACVsP,QAAQ,SACRjC,UAAU,GALd,WAWRyE,UAAU,GAEd9L,WAAS,IAEb,2BACIpW,GAAG,SACHhB,KAAK,YACLuI,KAAK,OACLqY,QAAM,KAGd,kBAACiC,GAAA,EAAD,CAAM3e,MAAI,EAAC6e,GAAI,IACX,kBAAClC,GAAA,EAAD,CACI7gB,KAAK,YACL2Q,QAAQ,WACRhI,KAAK,QACLuW,MAAM,aACNiE,UAAQ,EACR3M,MAAOiM,EAAQ1gB,UACfgU,SAAU4M,EAAiB,aAC3BvL,WAAS,KAGjB,kBAACyL,GAAA,EAAD,CAAM3e,MAAI,EAAC6e,GAAI,IACX,kBAAClC,GAAA,EAAD,CACI7gB,KAAK,WACL2Q,QAAQ,WACRhI,KAAK,QACLuW,MAAM,YACNiE,UAAQ,EACR3M,MAAOiM,EAAQxgB,SACf8T,SAAU4M,EAAiB,YAC3BvL,WAAS,KAGjB,kBAACyL,GAAA,EAAD,CAAM3e,MAAI,EAAC6e,GAAI,IACX,kBAAClC,GAAA,EAAD,CACI7gB,KAAK,cACL2Q,QAAQ,WACRhI,KAAK,QACLuW,MAAM,gBACN3W,KAAK,OACLkW,UAAU,EACV2E,gBAAiB,CACbC,QAAQ,GAEZF,UAAQ,EACR3M,MAAK,UAAEiM,EAAQrY,mBAAV,aAAE,EAAqBkZ,cAAc5b,MAAM,KAAK,GAErD0P,WAAS,KAGjB,kBAACyL,GAAA,EAAD,CAAM3e,MAAI,EAAC6e,GAAI,IACX,kBAAClC,GAAA,EAAD,CACI7gB,KAAK,MACL2Q,QAAQ,WACRhI,KAAK,QACLuW,MAAM,MACNhJ,YAAY,6BACZiN,UAAQ,EACR3M,MAAOiM,EAAQlY,IACfwL,SAAU4M,EAAiB,OAC3BvL,WAAS,KAGjB,kBAACyL,GAAA,EAAD,CAAM3e,MAAI,EAAC6e,GAAI,IACX,kBAAClC,GAAA,EAAD,CACI7gB,KAAK,QACLuI,KAAK,QACLoI,QAAQ,WACRhI,KAAK,QACLuW,MAAM,QACNiE,UAAQ,EACR3M,MAAOiM,EAAQ5Y,MACfkM,SAAU4M,EAAiB,SAC3BvL,WAAS,KAGjB,kBAACyL,GAAA,EAAD,CAAM3e,MAAI,EAAC6e,GAAI,IACX,kBAAClC,GAAA,EAAD,CACI7gB,KAAK,cACL2Q,QAAQ,WACRhI,KAAK,QACLuW,MAAM,eACNiE,UAAQ,EACR3M,MAAOiM,EAAQ3Y,YACfiM,SAAU4M,EAAiB,eAC3BvL,WAAS,KAGjB,kBAACyL,GAAA,EAAD,CAAM3e,MAAI,EAAC6e,GAAI,IACX,kBAACE,GAAA,EAAD,CACItS,QAAQ,YACRC,MAAM,UACNrI,KAAK,UAHT,YCrJdoH,GAAYC,cAAW,SAACH,GAAD,OAAkBI,aAAa,CACxDgJ,QAAS,CACL0K,WAAY9T,EAAMW,QAAQ,GAC1BoT,cAAe/T,EAAMW,QAAQ,SA8BtBqT,ICtCAA,GDYf,SAAqBlU,GACjB,IAAMiB,EAAUb,KACVoJ,EACF,kBAAC,GAAD,CACI5P,MAAM,qBAIR0P,EACF,kBAACgH,GAAA,EAAD,CACIpP,UAAWD,EAAQqI,QACnBhG,SAAS,MAET,kBAAC,GAAD,OAIR,OACI,kBAAC,GAAD,CACIkG,QAASA,GAERF,IElBPlJ,GAAYC,cAAW,SAACH,GAAD,OAAkBI,aAAa,CACxDC,KAAM,CACF8C,SAAU,YAEd8Q,IAAK,CACD9Q,SAAU,WACV+Q,OAAQlU,EAAMW,QAAQ,GACtBgD,MAAO3D,EAAMW,QAAQ,SAqFdwT,IC3GAA,GD0Bf,WACI,IAAMpT,EAAUb,KADI,EAEaH,YAAYjK,GAArChG,EAFY,EAEZA,MAAOM,EAFK,EAELA,QAASwF,EAFJ,EAEIA,KAClBsQ,EAAWC,cAEjB,GAAI/V,IAAYwF,EAAM,OAAO,kBAAC,GAAD,MAC7B,GAAI9F,EAAO,OAAO,kBAAC,GAAD,MAElB,IAAMskB,EACF,kBAACjN,GAAA,EAAD,CAASzN,MAAM,gBACX,kBAAC0N,GAAA,EAAD,CACIC,KAAK,MACL1F,UAAWqQ,IACXtJ,GJzCmB,aI2CnB,kBAAC2L,GAAA,EAAD,QAUNC,EAAc,WAChB,IAAM3jB,EAASqC,EAAoB,IACnCkT,EAASvV,IAGP4jB,EAAa3e,EAAK6E,SAEhB,kBAACwG,GAAA,EAAD,CACIC,QAAQ,UACRC,MAAM,WAFV,UAOF,UACAmI,EACF,kBAAC,GAAD,CACI/J,QAAO,UAAK3J,EAAKtD,UAAV,YAAuBsD,EAAKpD,UACnCiN,UAAW8U,EACX5L,UAAW/S,EAAK2E,UAChBiO,SDzEsB,WC0EtBK,UAAWuL,EACX9L,qBAAsB,CAClB7B,YAAa,kBACbH,SA7BS,SAACS,GAClB,IAAMpW,EAASqC,EAAoB+T,GACnCb,EAASvV,IA4BDiW,QAAS0N,EACT3N,OAAQ2N,KAKdE,EACF,kBAACC,GAAA,EAAD,CACIzT,UAAWD,EAAQkT,IACnB9S,MAAM,UACNmG,QAAS,WACL,IAAMpL,EAAU/B,KACVxJ,EAASmC,EAAcoJ,GAC7BgK,EAASvV,KAGb,kBAAC+jB,GAAA,EAAD,OAIR,OACI,kBAAC,GAAD,CACIpL,QAASA,EACTtI,UAAWD,EAAQV,MAEnB,kBAAC,GAAD,MACCmU,IE1EPtU,GAAYC,cAAW,SAACH,GAAD,OAAkBI,aAAa,CACxDuU,aAAc,CACVtS,WAAYrC,EAAMW,QAAQ,SAqKnBiU,OAjKf,WACI,IAAM7T,EAAUb,KADA,EAEY0M,eAApBrb,GAAIoC,OAFI,MAEK,GAFL,EAGVqM,EAAQ8L,eACRC,EAAiBC,aAAchM,EAAMiM,YAAYC,KAAK,OAJ5C,EAK8CnM,YAAY9K,EAAetB,IAAjFxD,EALQ,EAKRA,YAAamD,EALL,EAKKA,WAAYE,EALjB,EAKiBA,iBAAkBD,EALnC,EAKmCA,OAC7CmZ,EAAgB3a,EAAuB4B,GACvCuI,EAAU6D,YAAY2M,GACtBxG,EAAWC,cAKXpS,EAAkB,WACpB,IAAMpD,EAAS6E,EAAwB,CAAC7B,WACxCuS,EAASvV,IAEb,IAAKgD,IAAWuI,EAAS,OAAO,kBAAC,KAAD,CAAUwM,GAAG,MAE7C,IAmBMG,EACF,oCACI,kBAAC1B,GAAA,EAAD,CAASzN,MAAM,mBACX,kBAAC0N,GAAA,EAAD,CACIzF,UAAW8G,IACXC,Gf/EuB,wBe+ESgK,QAAQ,MAAO/e,IAE/C,kBAACga,GAAA,EAAD,QAGR,kBAAC,GAAD,CACInC,cA9BU,SAACJ,GAAD,OAClB,kBAAClG,GAAA,EAAD,KACI,kBAAC,GAAD,CACI3F,QAAS/L,EAAmB,gBAAkB,kBAC9C8T,QAAS,WACLvT,IACAqX,OAGR,kBAAC,GAAD,CACI7L,QAAQ,aACR+H,QAAS,YArBK,WACtB,IAAM3W,EAAS2D,EAAsB,CAACX,WACtCuS,EAASvV,GAoBGkkB,GACAzJ,YA8BVkJ,EAAc,WAChB,IAAM3jB,EAAS4E,EAAoB,CAC/B5B,SACAxD,YAAa,KAEjB+V,EAASvV,IAGP4jB,GAAoB,OAAPrY,QAAO,IAAPA,OAAA,EAAAA,EAASzB,UAEpB,kBAACwG,GAAA,EAAD,CACIC,QAAQ,UACRC,MAAM,WAFV,UAOF2T,aAAe,IAAI1X,KAAL,OAAalB,QAAb,IAAaA,OAAb,EAAaA,EAASxB,aAEpCqa,EzBrHgC,oByBqHWrC,QAAQ,MAAO/e,GAC1DqhB,EAAajJ,EACf,kBAAC,GAAD,CACIzE,QAAS,SAAAoE,GAAO,OAAIA,EAAQjZ,KDxHL,gBC0H3B,KAEE6W,EACF,kBAAC,GAAD,CACIX,UAAS,OAAEzM,QAAF,IAAEA,OAAF,EAAEA,EAAS3B,UACpBiO,SAAUuM,EACVxV,QAAO,iBAAKrD,QAAL,IAAKA,OAAL,EAAKA,EAAS5J,UAAd,mBAA2B4J,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAS1J,UAC3CiN,UAAWlM,EAAS,YAAcghB,EAClCxL,YAAaiM,EACbnM,UAAWA,EACXP,qBAAsB,CAClB7B,YAAa,kBACbH,SA5CS,SAACS,GAClB,IAAMpW,EAAS4E,EAAoB,CAC/B5B,SACAxD,YAAa4W,IAEjBb,EAASvV,IAwCDiW,QAAS0N,EACT3N,OAAQ2N,EACR5N,aAAcvW,KAapBuZ,EAASlW,EACX,kBAAC+U,GAAA,EAAD,KACI,kBAACiL,GAAA,EAAD,CACIxE,UAAW1b,EAAW+E,OACtBiP,QAZS,WACjB,IAAM3W,EAAS2D,EAAsB,CACjCX,SACAY,WAAYjB,IAEhB4S,EAASvV,IAQDskB,UAAW,kBAACnI,GAAA,EAAD,MACX5L,QAAQ,WACRC,MAAM,aALV,UASA,kBAACqS,GAAA,EAAD,CACIxS,UAAWD,EAAQ4T,aACnBrN,QAASvT,GAFb,WAQJ,kBAAC,GAAD,CACI4c,SAAU,SAAAxT,GAEN,GADAA,EAAcA,EAAY+X,OAC1B,CACA,IAAMvkB,EAASwD,EAAkB,CAACR,SAAQwJ,gBAC1C+I,EAASvV,OAKrB,OACI,kBAAC,GAAD,CACI2Y,QAASA,EACTI,OAAQA,EACRS,kBAAmB3W,GAEnB,kBAAC4c,GAAA,EAAD,CACID,gBAAc,EACd/M,SAAS,MAET,kBAAC,GAAD,CACIzP,OAAQA,O,wCC9KbwhB,G,+MAdX5lB,MAAQ,CACJO,OAAO,G,iEAGOA,EAAcslB,GAC5BC,KAAKC,SAAS,CAACxlB,OAAO,M,+BAItB,OAAIulB,KAAK9lB,MAAMO,MAAc,kBAAC,GAAD,MACtBulB,KAAKvV,MAAMG,a,GAXEsV,aCQtBrV,GAAYC,cAAW,SAACH,GAAD,OAAkBI,aAAa,CACxDC,KAAM,CACFC,QAAS,OACTC,cAAe,SACfK,OAAQ,QAEZwI,QAAS,CACL9I,QAAS,OACTM,OAAQ,QAEZ4U,SAAU,CACNC,SAAU,IACVrS,SAAU,IACV4E,SAAU,OACV0N,iBAAkB,EAClBC,iBAAkB,QAClB3R,iBAAkBhE,EAAMV,QAAQiK,SAEpCqM,UAAW,CACPH,SAAU,IACVrS,SAAU,IACV4E,SAAU,OACV6N,gBAAiB,EACjBC,gBAAiB,QACjB1R,gBAAiBpE,EAAMV,QAAQiK,SAEnC3G,KAAM,CACFyG,KAAM,OACNrB,SAAU,QAEd+N,SAAU,CACNhU,YAAa,OACbiU,eAAgB,QAEpBvc,OAAQ,CACJoH,MAAOb,EAAMW,QAAQ,GACrBC,OAAQZ,EAAMW,QAAQ,SAsCfsV,OAlCf,SAAgBnW,GACZ,IAAMiB,EAAUb,KAEVsV,EAAW1V,EAAM0V,UACnB,2BAAOxU,UAAWD,EAAQyU,UACrB1V,EAAM0V,UAITI,EAAY9V,EAAM8V,WACpB,2BAAO5U,UAAWD,EAAQ6U,WACrB9V,EAAM8V,WAIThT,EACF,kBAAC,GAAD,KACI,0BAAM5B,UAAWD,EAAQ6B,MACpB9C,EAAMG,WAKnB,OACI,yBAAKe,UAAWD,EAAQV,MACpB,yBAAKW,UAAWD,EAAQqI,SACnBoM,EACA5S,EACAgT,KChEFM,OAVf,WACI,OACI,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAOC,K5BNuB,oB4BMWxU,UAAWgL,KACpD,kBAAC,KAAD,CAAOwJ,KlBPwB,wBkBOWxU,UAAWsN,KACrD,kBAAC,KAAD,CAAOtN,UAAWsN,OCJjBwD,GAAkB,YAiBhB2D,OAff,WACI,IAAMpW,EAAQ8L,eAGd,OAFuBE,aAAchM,EAAMiM,YAAYC,KAAK,OAEjC,kBAAC,GAAD,MAGvB,kBAAC,GAAD,CACI0J,UAAW,kBAAC,GAAD,OAEX,kBAAC,GAAD,QCEGS,OAZf,WACI,OACI,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAOC,OAAO,EAAMH,KAAK,IAAIxU,UAAWH,KACxC,kBAAC,KAAD,CAAO2U,KXVgB,YWUWxU,UAAWmR,KAC7C,kBAAC,KAAD,CAAOqD,KAAM1D,GAAiB9Q,UAAW4U,KACzC,kBAAC,KAAD,CAAOJ,KRZe,WQYWxU,UAAWqS,KAC5C,kBAAC,KAAD,CAAOrS,UAAWE,O,sBC8Bf2U,OAtCf,WAA2B,IAAD,EACczW,YAAY/I,IAAzC3C,EADe,EACfA,QAASuC,EADM,EACNA,iBACVsP,EAAWC,cACXsQ,EAAanoB,QAAQ+F,GACrBqiB,EAAe,kBAAMxQ,EAAS9O,OAEpC,IAAKqf,EAAY,OAAO,KAExB,IAIM9lB,EACF,kBAACyW,GAAA,EAAD,CACIlO,KAAK,QACLyd,aAAW,QACXxV,MAAM,UACNmG,QAASoP,GAET,kBAACE,GAAA,EAAD,CAAOrU,SAAS,WAIxB,OACI,kBAACsU,GAAA,EAAD,CACIxL,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBZ,KAAM8L,EACN7f,iBAAkBA,EAClBwU,QAvBsC,SAAC7E,EAAOuQ,GAClDJ,KAuBIriB,QAASA,EACT1D,OAAQA,KChBLomB,OAff,WACI,OACI,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAOT,OAAO,EAAMH,KAAK,IAAIxU,UAAWwS,KACxC,kBAAC,KAAD,CAAOmC,OAAO,EAAMH,KAAM1D,GAAiB9Q,UAAW4U,KACtD,kBAAC,KAAD,CAAOJ,KRZgB,YQYWxU,UAAWwS,KAC7C,kBAAC,KAAD,CAAOgC,KbbgB,YaaWxU,UAAWmR,KAC7C,kBAAC,KAAD,CAAOqD,KVde,WUcWxU,UAAWqS,KAC5C,kBAAC,KAAD,CAAOmC,KhCfuB,oBgCeWxU,UAAWgL,KACpD,kBAAC,KAAD,CAAOwJ,KtBhBwB,wBsBgBWxU,UAAWsN,KACrD,kBAAC,KAAD,CAAOtN,UAAWwS,OC4Bf6C,OAnCf,WACI,IAAM9Q,EAAWC,cACXnG,EAAQ8L,eACRC,EAAiBC,aAAchM,EAAMiM,YAAYC,KAAK,OAHjD,EAIsBnM,YAAYjK,GAArChG,EAJG,EAIHA,MAAOM,EAJJ,EAIIA,QAASwF,EAJb,EAIaA,KAUxB,OARAwQ,qBAAU,WACN,IAAMzV,EAASqF,GAAY,CACvB0G,MAAO,YACPC,SAAU,iBAEduJ,EAASvV,KACV,CAACuV,IAEA9V,IAAYwF,EAAa,kBAAC,GAAD,MACzB9F,EAAc,kBAAC,GAAD,MAEdic,EACA,oCACI,kBAAC,GAAD,MACA,kBAAC,GAAD,OAKJ,kBAAC,GAAD,CACIrS,MAAM,iBACN8b,SAAU,kBAAC,GAAD,OAEV,kBAAC,GAAD,MACA,kBAAC,GAAD,QCnBGyB,OAff,WACI,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUpY,MAAOA,IACb,kBAAC,GAAD,KACI,kBAAC,IAAMqY,WAAP,KACI,kBAACC,EAAA,EAAD,MACA,kBAAC,GAAD,WCVxBC,IAASC,OACP,kBAAC,GAAD,MACAC,SAASC,eAAe,S7EoBnB,SAAkB1oB,GACvB,GAA6C,kBAAmBC,UAAW,CAMzE,GAJkB,IAAI0oB,IACpBxY,kBACAzQ,OAAOC,SAASye,MAEJwK,SAAWlpB,OAAOC,SAASipB,OAIvC,OAGFlpB,OAAOmpB,iBAAiB,QAAQ,WAC9B,IAAM9oB,EAAK,UAAMoQ,kBAAN,sBAEP3Q,IAgEV,SAAiCO,EAAeC,GAE9C8oB,MAAM/oB,EAAO,CACXgpB,QAAS,CAAE,iBAAkB,YAE5B3oB,MAAK,SAAA4M,GAEJ,IAAMgc,EAAchc,EAAS+b,QAAQE,IAAI,gBAEnB,MAApBjc,EAAS5E,QACO,MAAf4gB,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5CjpB,UAAUC,cAAcipB,MAAM/oB,MAAK,SAAAC,GACjCA,EAAa+oB,aAAahpB,MAAK,WAC7BV,OAAOC,SAAS0pB,eAKpBvpB,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IACN,oEAvFAyoB,CAAwBvpB,EAAOC,GAI/BC,UAAUC,cAAcipB,MAAM/oB,MAAK,WACjCQ,QAAQC,IACN,iHAMJf,EAAgBC,EAAOC,O6E7C/BE,I","file":"static/js/main.61ecbd1b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('ErrorMessage during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createEntityAdapter, createSelector, createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {Contact} from \"./Contact\";\nimport {RootState} from \"../../app/rootReducer\";\n\nconst contactsAdapter = createEntityAdapter<Contact>();\n\nconst initialState = contactsAdapter.getInitialState<{\n    searchQuery: string;\n    loading: boolean;\n    error: boolean;\n}>({\n    searchQuery: '',\n    loading: false,\n    error: false\n});\n\nconst contactsSlice = createSlice({\n    name: 'contacts',\n    initialState,\n    reducers: {\n        request(state) {\n            state.loading = true;\n            state.error = false;\n        },\n        success(state, action: PayloadAction<Contact[]>) {\n            state.error = false;\n            state.loading = false;\n            contactsAdapter.addMany(state, action.payload);\n        },\n        failure(state) {\n            state.error = true;\n            state.loading = false;\n        },\n        addOne: contactsAdapter.addOne,\n        removeOne: contactsAdapter.removeOne,\n        setSearchQuery(state, action: PayloadAction<string>) {\n            state.searchQuery = action.payload;\n        },\n        switchNotifications(state, action: PayloadAction<Contact['id']>) {\n            const contactId = action.payload;\n            const notificationsEnabled = state.entities[contactId]?.notificationsEnabled;\n            contactsAdapter.updateOne(state, {\n                id: contactId,\n                changes: {\n                    notificationsEnabled: !notificationsEnabled\n                }\n            });\n        }\n    }\n});\n\nexport const selectContacts = (state: RootState) => state.contacts;\n\nexport const {\n    selectAll: selectAllContacts,\n    selectById: selectContactById\n} = contactsAdapter.getSelectors<RootState>(selectContacts);\n\nexport const getContactByIdSelector = (id: Contact['id']) => (state: RootState) => selectContactById(state, id);\n\nexport const selectFoundContacts = createSelector(\n    selectContacts,\n    ({ searchQuery, entities }) => {\n        const query = searchQuery.toLowerCase();\n        const searchResults = [];\n        for (let id in entities) {\n            const entity = entities[id];\n            if (!entity) continue;\n            const match =\n                entity.firstName.toLowerCase().includes(query) ||\n                entity.lastName.toLowerCase().includes(query);\n            if (!match) continue;\n            searchResults.push(entity);\n        }\n        return searchResults;\n    }\n);\n\nexport const {\n    request: contactsRequest,\n    success: contactsSuccess,\n    failure: contactsFailure,\n    addOne: addOneContact,\n    removeOne: removeContactById,\n    setSearchQuery: contactsSearchQuery,\n    switchNotifications: contactsSwitchNotifications,\n} = contactsSlice.actions;\n\nconst contactsReducer = contactsSlice.reducer;\n\nexport default contactsReducer;\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {Message} from \"../messages/Message\";\nimport {Chat} from \"./Chat\";\nimport {RootState} from \"../../app/rootReducer\";\nimport {Attachment} from \"../attachments/Attachment\";\nimport {AttachmentLink} from \"../links/AttachmentLink\";\n\nexport interface ChatMessagesState {\n    messages: Message[] | null;\n    checkedIds: Message['id'][];\n    searchQuery: string;\n    checkModeEnabled: boolean;\n    prints: boolean;\n    loading: boolean;\n    error: boolean;\n}\n\nexport interface MessagesState {\n    [chatId: string]: ChatMessagesState\n}\n\nconst initialState: MessagesState = {};\nexport const itemInitialState: ChatMessagesState = {\n    messages: null,\n    checkedIds: [],\n    searchQuery: '',\n    prints: false,\n    checkModeEnabled: false,\n    loading: false,\n    error: false\n};\n\nconst chatsSlice = createSlice({\n    name: 'chats',\n    initialState,\n    reducers: {\n        fetchRequest: (state, action: PayloadAction<{\n            chatId: Chat['id'];\n        }>) => {\n            const { chatId } = action.payload;\n            if (!state[chatId]) state[chatId] = {...itemInitialState};\n            state[chatId].loading = true;\n            state[chatId].error = false;\n        },\n        fetchSuccess(state, action: PayloadAction<{\n            chatId: Chat['id'];\n            messages: Message[];\n        }>) {\n            const { chatId, messages } = action.payload;\n            state[chatId].error = false;\n            state[chatId].loading = false;\n            state[chatId].messages = messages;\n        },\n        fetchFailure(state, action: PayloadAction<{\n            chatId: Chat['id'];\n        }>) {\n            const { chatId } = action.payload;\n            state[chatId].error = true;\n            state[chatId].loading = false;\n        },\n        setPrints(state, action: PayloadAction<{\n            chatId: Chat['id'];\n            prints: boolean;\n        }>) {\n            const { chatId, prints } = action.payload;\n            state[chatId].prints = prints;\n        },\n        setSearchQuery(state, action: PayloadAction<{\n            chatId: Chat['id'];\n            searchQuery: string;\n        }>) {\n            const { chatId, searchQuery } = action.payload;\n            state[chatId].searchQuery = searchQuery;\n        },\n        switchCheckMode(state, action: PayloadAction<{\n            chatId: Chat['id'];\n            enabled?: boolean;\n        }>) {\n            const { chatId, enabled } = action.payload;\n            const chat = state[chatId];\n            const checkModeEnabled = enabled !== undefined\n                ? enabled\n                : !chat.checkModeEnabled;\n            chat.checkModeEnabled = checkModeEnabled;\n            if (!checkModeEnabled) chat.checkedIds = [];\n        },\n        addMessageRequest(state, action: PayloadAction<{\n            chatId: Chat['id'];\n            messageText: string;\n        }>) {\n\n        },\n        addMessageSuccess(state, action: PayloadAction<{\n            chatId: Chat['id'];\n            message: Message;\n        }>) {\n            const {chatId, message} = action.payload;\n            let messages = state[chatId].messages;\n            if (!messages) messages = [];\n            messages.push(message);\n        },\n        removeMessagesSuccess(state, action: PayloadAction<{\n            chatId: Chat['id'];\n            messageIds?: Message['id'][];\n        }>) {\n            const { chatId, messageIds } = action.payload;\n            const chat = state[chatId];\n            if (messageIds) {\n                chat.messages = (chat.messages || []).filter(item => !messageIds.includes(item.id));\n            } else {\n                chat.messages = [];\n            }\n            chat.checkedIds = [];\n            chat.checkModeEnabled = false;\n        },\n        toggleCheck(state, action: PayloadAction<{\n            chatId: Chat['id'];\n            messageId: Message['id'];\n        }>) {\n            const {chatId, messageId} = action.payload;\n            const chat = state[chatId];\n            const checked = chat.checkedIds.includes(messageId);\n            if (checked) chat.checkedIds = chat.checkedIds.filter(id => id !== messageId);\n            else chat.checkedIds.push(messageId);\n        },\n        removeAttachmentsSuccess(state, action: PayloadAction<{\n            chatId: Chat['id'];\n        }>) {\n            const {chatId} = action.payload;\n            const chat = state[chatId];\n            chat.messages?.forEach(item => item.attachmentFile = undefined);\n        },\n        removeLinksSuccess(state, action: PayloadAction<{\n            chatId: Chat['id'];\n        }>) {\n            const {chatId} = action.payload;\n            const chat = state[chatId];\n            chat.messages?.forEach(item => item.attachmentLink = undefined);\n        }\n    }\n});\n\nexport const selectChatById = (id: Chat['id']) => (state: RootState): ChatMessagesState => {\n    return state.chats[id] || itemInitialState;\n};\n\nexport const selectChatAttachmentsById = (id: Chat['id']) => (state: RootState): Attachment[] | null => {\n    const chat = state.chats[id];\n    if (!chat || !chat.messages) return null;\n\n    const messagesWithAttachments = chat.messages?.filter(item => item.attachmentFile !== undefined);\n    const attachments = messagesWithAttachments?.map(item => item.attachmentFile);\n    return attachments as Attachment[];\n};\n\nexport const selectChatLinksById = (id: Chat['id']) => (state: RootState): AttachmentLink[] | null => {\n    const chat = state.chats[id];\n    if (!chat || !chat.messages) return null;\n\n    const messagesWithAttachments = chat.messages?.filter(item => item.attachmentLink !== undefined);\n    const attachments = messagesWithAttachments?.map(item => item.attachmentLink);\n    return attachments as AttachmentLink[];\n};\n\nexport const {\n    fetchRequest: fetchMessagesRequest,\n    fetchSuccess: fetchMessagesSuccess,\n    fetchFailure: fetchMessagesFailure,\n    removeMessagesSuccess,\n    addMessageRequest,\n    addMessageSuccess,\n    removeAttachmentsSuccess,\n    removeLinksSuccess,\n    toggleCheck: toggleCheckMessage,\n    setSearchQuery: messagesSearchQuery,\n    switchCheckMode: switchMessagesCheckMode,\n    setPrints: setMessagePrints\n} = chatsSlice.actions;\n\nconst chatsReducer = chatsSlice.reducer;\n\nexport default chatsReducer;\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {AuthUser, UserProfile} from \"./AuthUser\";\nimport {RootState} from \"../../app/rootReducer\";\n\nexport interface AuthState {\n    loading: boolean;\n    error: boolean;\n    user: AuthUser | null;\n}\n\nconst initialState: AuthState = {\n    loading: false,\n    error: false,\n    user: null\n};\n\ninterface RequestPayload {\n    login: string;\n    password: string;\n}\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        request(state, action: PayloadAction<RequestPayload>) {\n            state.loading = true;\n            state.error = false;\n        },\n        success(state, action: PayloadAction<AuthUser>) {\n            state.error = false;\n            state.loading = false;\n            state.user = action.payload;\n        },\n        failure(state) {\n            state.error = true;\n            state.loading = false;\n        },\n        update(state, action: PayloadAction<UserProfile>) {\n            const changes = action.payload;\n            state.user = state.user ? {\n                ...state.user,\n                ...changes\n            } : null;\n        }\n    }\n});\n\nexport const selectAuth = (state: RootState) => state.auth;\n\nexport const {\n    request: authRequest,\n    success: authSuccess,\n    failure: authFailure,\n    update: updateProfile\n} = authSlice.actions;\n\nconst authReducer = authSlice.reducer;\n\nexport default authReducer;\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {RootState} from \"../../app/rootReducer\";\n\nexport interface SettingsState {\n    darkThemeEnabled: boolean;\n}\n\nconst initialState: SettingsState = {\n    darkThemeEnabled: false\n};\n\nconst settingsSlice = createSlice({\n    name: 'settings',\n    initialState,\n    reducers: {\n        enableDarkTheme(state, action: PayloadAction<boolean>) {\n            state.darkThemeEnabled = action.payload;\n        }\n    }\n});\n\nexport const selectSettings = (state: RootState) => state.settings;\n\nexport const {\n    enableDarkTheme\n} = settingsSlice.actions;\n\nconst settingsReducer = settingsSlice.reducer;\n\nexport default settingsReducer;\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {RootState} from \"./rootReducer\";\n\nexport interface StatusState {\n    message: string | null;\n    autoHideDuration: number;\n    error: boolean;\n}\n\nconst initialState: StatusState = {\n    message: null,\n    autoHideDuration: 5000,\n    error: false\n};\n\nconst statusSlice = createSlice({\n    name: 'status',\n    initialState,\n    reducers: {\n        setMessage(state, action: PayloadAction<StatusState['message']>) {\n            state.message = action.payload;\n        },\n        setError(state, action: PayloadAction<StatusState['message']>) {\n            state.message = action.payload;\n            state.error = true;\n        },\n        reset(state) {\n            state.message = null;\n            state.error = false;\n        }\n    }\n});\n\nexport const selectStatus = (state: RootState) => state.status;\n\nexport const {\n    setMessage: setStatusMessage,\n    setError: setStatusError,\n    reset: resetStatus\n} = statusSlice.actions;\n\nconst statusReducer = statusSlice.reducer;\nexport default statusReducer;","import {combineReducers} from \"@reduxjs/toolkit\";\nimport contactsReducer from \"../features/contacts/contactsSlice\";\nimport chatsReducer from \"../features/chat/chatsSlice\";\nimport authSlice from \"../features/auth/authSlice\";\nimport settingsReducer from \"../features/settings/settingsSlice\";\nimport statusReducer from \"./statusSlice\";\n\nexport const rootReducer = combineReducers({\n    contacts: contactsReducer,\n    chats: chatsReducer,\n    auth: authSlice,\n    settings: settingsReducer,\n    status: statusReducer\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import faker from \"faker\";\nimport {generateAttachmentLink} from \"../links/generateAttachmentLink\";\nimport {generateAttachment} from \"../attachments/generateAttachment\";\nimport {Message} from \"./Message\";\n\n// Source: https://emojipedia.org/stats/\n// Most popular emoji\nconst generateRandomEmoji = (): string => {\n    if (Math.random() < .85) return '';\n    const smiles = ['😂', '😭', '🥺', '🤣', '❤️', '✨', '😍', '🙏', '😊', '🥰', '👍', '💕', '🤔'];\n    const index = Math.floor(Math.random() * smiles.length);\n    return '. ' + smiles[index];\n}\n\nexport function generateMessage(): Message {\n    const hasAttachmentFile = Math.random() > .8;\n    const hasAttachmentLink = Math.random() > .5;\n    return {\n        id: faker.random.uuid(),\n        text: faker.lorem.text().split('.').map(text => text + generateRandomEmoji()).join(''),\n        createdBy: faker.random.uuid(),\n        createdAt: faker.date.recent(0),\n        delivered: true,\n        read: true,\n        attachmentFile: hasAttachmentFile ? generateAttachment() : undefined,\n        attachmentLink: hasAttachmentLink ? generateAttachmentLink() : undefined,\n        createdByMe: faker.random.boolean()\n    }\n}","import faker from \"faker\";\nimport {Attachment} from \"./Attachment\";\n\nexport function generateAttachment(): Attachment {\n    return {\n        id: faker.random.uuid(),\n        type: faker.system.fileType(),\n        name: faker.system.fileName(),\n        size: faker.random.number(99999),\n        lastModified: faker.date.past().getMilliseconds(),\n        imageUrl: faker.image.avatar()\n    }\n}","import faker from \"faker\";\nimport {AttachmentLink} from \"./AttachmentLink\";\n\nexport function generateAttachmentLink(): AttachmentLink {\n    return {\n        id: faker.random.uuid(),\n        title: faker.company.companyName(),\n        description: faker.lorem.sentence(),\n        createdAt: faker.date.past(),\n        imageUrl: faker.image.avatar(),\n        url: faker.internet.url()\n    }\n}","import faker from \"faker\";\nimport {generateMessage} from \"../messages/generateMessage\";\nimport {Contact} from \"./Contact\";\n\nexport function generateContact(): Contact {\n    const firstName = faker.name.firstName();\n    const lastName = faker.name.lastName();\n    return {\n        id: faker.random.uuid(),\n        firstName,\n        lastName,\n        email: faker.internet.email(firstName, lastName),\n        phoneNumber: faker.phone.phoneNumber(),\n        avatarUrl: faker.image.avatar(),\n        lastMessage: generateMessage(),\n        isOnline: faker.random.boolean(),\n        lastVisitAt: faker.date.recent(0),\n        dateOfBirth: faker.date.past(faker.random.number({ min: 18, max: 65 })),\n        notificationsEnabled: true,\n        bio: faker.lorem.sentence()\n    }\n}","import {Contact} from \"./Contact\";\nimport faker from \"faker\";\nimport {ErrorResponse, SuccessResponse} from \"../../common/interfaces/Service\";\nimport {generateContact} from \"./generateContact\";\n\nexport const fetchContacts = async (skip = 0, limit = 12): Promise<SuccessResponse<Contact> | ErrorResponse> => await ({\n    count: faker.random.number({ min: 12, max: 9999 }),\n    items: Array(limit).fill(null).map(generateContact)\n});\n\nexport const removeContact = async (id: Contact['id']): Promise<boolean | ErrorResponse> => true;\n\nexport const addContact = async (id: Contact['id']): Promise<boolean | ErrorResponse> => true;","import {all, call, put, takeEvery, takeLatest, delay} from \"redux-saga/effects\";\nimport {addContact, fetchContacts, removeContact} from \"./contactService\";\nimport {ErrorResponse, SuccessResponse} from \"../../common/interfaces/Service\";\nimport {Contact} from \"./Contact\";\nimport {contactsFailure, contactsRequest, contactsSuccess, addOneContact, removeContactById} from \"./contactsSlice\";\nimport {setStatusError, setStatusMessage} from \"../../app/statusSlice\";\n\nfunction* removeContactSaga(action: ReturnType<typeof removeContactById>) {\n    const id = action.payload as string;\n    try {\n        const request = () => removeContact(id);\n        const response = yield call(request);\n        const errors = (response as ErrorResponse).errors;\n        if (errors) throw new Error(errors[0]);\n        const statusAction = setStatusMessage(`Success removed`);\n        yield put(statusAction);\n    } catch(error) {\n        const statusAction = setStatusError(error.message);\n        yield put(statusAction);\n    }\n}\n\nfunction* addContactSaga(action: ReturnType<typeof addOneContact>) {\n    const contact = action.payload;\n    try {\n        const request = () => addContact(contact.id);\n        const response = yield call(request);\n        const errors = (response as ErrorResponse).errors;\n        if (errors) throw new Error(errors[0]);\n        const statusMessage = `${contact.firstName} ${contact.lastName} added to contacts`;\n        const statusAction = setStatusMessage(statusMessage);\n        yield put(statusAction);\n    } catch(error) {\n        const statusAction = setStatusError(error.message);\n        yield put(statusAction);\n    }\n}\n\nfunction* fetchContactsSaga() {\n    yield delay(240); // need remove in production\n    try {\n        const response = yield call(fetchContacts);\n        const errors = (response as ErrorResponse).errors;\n        if (errors) throw new Error(errors[0]);\n        const contacts = (response as SuccessResponse<Contact>).items;\n        const action = contactsSuccess(contacts);\n        yield put(action);\n    } catch(error) {\n        const action = contactsFailure();\n        const statusAction = setStatusError(error.message);\n        yield all([\n            put(action),\n            put(statusAction)\n        ])\n    }\n}\n\nfunction* watchContactsSaga() {\n    yield all([\n        takeEvery(removeContactById.type, removeContactSaga),\n        takeEvery(addOneContact.type, addContactSaga),\n        takeLatest(contactsRequest.type, fetchContactsSaga)\n    ])\n}\n\nexport default watchContactsSaga;","import faker from \"faker\";\n\nexport function generateAuthUser() {\n    const firstName = faker.name.firstName();\n    const lastName = faker.name.lastName();\n    return ({\n        id: faker.random.uuid(),\n        firstName,\n        lastName,\n        email: faker.internet.email(firstName, lastName),\n        phoneNumber: faker.phone.phoneNumber(),\n        avatarUrl: faker.image.avatar(),\n        isOnline: faker.random.boolean(),\n        dateOfBirth: faker.date.past(faker.random.number({ min: 18, max: 65 })),\n        bio: faker.lorem.sentence()\n    })\n}","import {AuthUser, UserProfile} from \"./AuthUser\";\nimport {ErrorResponse} from \"../../common/interfaces/Service\";\nimport {generateAuthUser} from \"./generateAuthUser\";\n\nexport const signInWithLoginAndPassword = async (login: string, password: string): Promise<AuthUser | ErrorResponse> => await generateAuthUser();\nexport const signOut = async (): Promise<boolean | ErrorResponse> => true;\nexport const updateUserProfile = async (changes: UserProfile): Promise<boolean | ErrorResponse> => true;\n","import {call, all, takeEvery, put, takeLatest} from \"redux-saga/effects\";\nimport {authRequest, authSuccess, authFailure, updateProfile} from \"./authSlice\";\nimport {signInWithLoginAndPassword, updateUserProfile} from \"./authService\";\nimport {ErrorResponse} from \"../../common/interfaces/Service\";\nimport {setStatusError, setStatusMessage} from \"../../app/statusSlice\";\nimport {AuthUser} from \"./AuthUser\";\n\nfunction* signInSaga(action: ReturnType<typeof authRequest>) {\n    const { login, password } = action.payload;\n    try {\n        const request = () => signInWithLoginAndPassword(login, password);\n        const response = yield call(request);\n        const errors = (response as ErrorResponse).errors;\n        if (errors) throw new Error(errors[0]);\n        const user = response as AuthUser;\n        const action = authSuccess(user);\n        const statusAction = setStatusMessage(`Authorized as ${user.firstName} ${user.lastName}`);\n        yield all([\n            put(action),\n            put(statusAction)\n        ]);\n    } catch(error) {\n        const action = authFailure();\n        const statusAction = setStatusError(error.message);\n        yield all([\n            put(action),\n            put(statusAction)\n        ]);\n    }\n}\n\nfunction* updateProfileSaga(action: ReturnType<typeof updateProfile>) {\n    const profileChanges = action.payload;\n    try {\n        const request = () => updateUserProfile(profileChanges);\n        const response = yield call(request);\n        const errors = (response as ErrorResponse).errors;\n        if (errors) throw new Error(errors[0]);\n        const statusAction = setStatusMessage('Profile updated');\n        yield put(statusAction);\n    } catch(error) {\n        const statusAction = setStatusError(error.message);\n        yield put(statusAction);\n    }\n}\n\nfunction* watchAuthSaga() {\n    yield all([\n        takeLatest(authRequest.type, signInSaga),\n        takeEvery(updateProfile.type, updateProfileSaga)\n    ])\n}\n\nexport default watchAuthSaga;","import {Message} from \"./Message\";\nimport faker from \"faker\";\nimport {\n    ErrorResponse,\n    SuccessResponse\n} from \"../../common/interfaces/Service\";\nimport {Chat} from \"../chat/Chat\";\nimport {generateMessage} from \"./generateMessage\";\n\nexport const fetchMessages = async (skip = 0, limit = 12): Promise<SuccessResponse<Message> | ErrorResponse> => await ({\n    count: faker.random.number({ min: 12, max: 9999 }),\n    items: Array(limit).fill(null).map(generateMessage)\n});\n\nexport const addMessage = async (chatId: Chat['id'], messageText: Message['text']): Promise<Message | ErrorResponse> => {\n    const message = generateMessage();\n    message.text = messageText;\n    message.attachmentFile = undefined;\n    message.attachmentLink = undefined;\n    message.createdAt = new Date();\n    message.createdByMe = true;\n    return message;\n};\n\nexport const removeMessages = async (ids?: Message['id'][]): Promise<boolean | ErrorResponse> => true;\n","import {all, call, put, delay, fork, takeEvery} from \"redux-saga/effects\";\nimport {ErrorResponse, SuccessResponse} from \"../../common/interfaces/Service\";\nimport {setStatusError} from \"../../app/statusSlice\";\nimport {addMessage, fetchMessages, removeMessages} from \"../messages/messageService\";\nimport {\n    addMessageSuccess,\n    removeMessagesSuccess,\n    addMessageRequest,\n    fetchMessagesFailure,\n    fetchMessagesRequest,\n    fetchMessagesSuccess,\n    setMessagePrints\n} from \"./chatsSlice\";\nimport {Message} from \"../messages/Message\";\nimport {Chat} from \"./Chat\";\nimport {generateMessage} from \"../messages/generateMessage\";\n\nfunction* removeMessageSaga(action: ReturnType<typeof removeMessagesSuccess>) {\n    const { messageIds } = action.payload;\n    try {\n        const request = () => removeMessages(messageIds);\n        const response = yield call(request);\n        const errors = (response as ErrorResponse).errors;\n        if (errors) throw new Error(errors[0]);\n    } catch (error) {\n        const statusAction = setStatusError(error.message);\n        yield put(statusAction);\n    }\n}\n\nfunction* sendFakeAnswerSaga(chatId: Chat['id']) {\n    const message = generateMessage();\n    message.createdBy = chatId;\n    message.createdByMe = false;\n    message.createdAt = new Date();\n    message.attachmentLink = undefined;\n    message.attachmentFile = undefined;\n    message.read = true;\n    message.delivered = true;\n\n    const startPrintsTimeout = (Math.random() * 2000 + 1000);\n    yield delay(startPrintsTimeout);\n    const startsPrintsAction = setMessagePrints({chatId, prints: true});\n    yield put(startsPrintsAction);\n\n    const timeout = message.text.length * (Math.random() * 10 + 5);\n    yield delay(timeout);\n    const addMessageAction = addMessageSuccess({chatId, message});\n    const endsPrintsAction = setMessagePrints({chatId, prints: false});\n    yield all([\n        put(addMessageAction),\n        put(endsPrintsAction)\n    ]);\n}\n\nfunction* addMessageSaga(action: ReturnType<typeof addMessageRequest>) {\n    const { chatId, messageText } = action.payload;\n    try {\n        const request = () => addMessage(chatId, messageText);\n        const response = yield call(request);\n        const errors = (response as ErrorResponse).errors;\n        if (errors) throw new Error(errors[0]);\n        const message = response as Message;\n        const action = addMessageSuccess({chatId, message});\n        yield all([\n            put(action),\n            fork(sendFakeAnswerSaga, chatId),\n        ]);\n    } catch (error) {\n        const statusAction = setStatusError(error.message);\n        yield put(statusAction);\n    }\n}\n\nfunction* fetchMessagesSaga(action: ReturnType<typeof fetchMessagesRequest>) {\n    yield delay(240); // need remove in production\n    const { chatId } = action.payload;\n    try {\n        const request = () => fetchMessages();\n        const response = yield call(request);\n        const errors = (response as ErrorResponse).errors;\n        if (errors) throw new Error(errors[0]);\n        const messages = (response as SuccessResponse<Message>).items;\n        const action = fetchMessagesSuccess({chatId, messages});\n        yield put(action);\n    } catch (error) {\n        const action = fetchMessagesFailure({chatId});\n        const statusAction = setStatusError(error.message);\n        yield all([\n            put(action),\n            put(statusAction)\n        ])\n    }\n}\n\nfunction* watchChatSaga() {\n    yield all([\n        takeEvery(removeMessagesSuccess.type, removeMessageSaga),\n        takeEvery(addMessageRequest.type, addMessageSaga),\n        takeEvery(fetchMessagesRequest.type, fetchMessagesSaga)\n    ])\n}\n\nexport default watchChatSaga;","import {all} from \"redux-saga/effects\";\nimport contactsSaga from \"../features/contacts/contactsSaga\";\nimport authSaga from \"../features/auth/authSaga\";\nimport chatSaga from \"../features/chat/chatSaga\";\n\nexport default function* rooSaga() {\n    yield all([\n        contactsSaga(),\n        authSaga(),\n        chatSaga()\n    ]);\n}\n","import {configureStore, getDefaultMiddleware} from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport {rootReducer} from \"./rootReducer\";\nimport rootSaga from \"./rootSaga\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst defaultMiddleware = getDefaultMiddleware({\n    thunk: true,\n    immutableCheck: true,\n    serializableCheck: true\n});\n\nconst store = configureStore({\n    reducer: rootReducer,\n    devTools: process.env.NODE_ENV !== 'production',\n    middleware: [\n        ...defaultMiddleware,\n        sagaMiddleware\n    ],\n});\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;","import {createMuiTheme} from \"@material-ui/core\";\nimport {red, grey} from \"@material-ui/core/colors\";\n\nexport const LIGHT_THEME = createMuiTheme({\n    palette: {\n        type: 'light',\n        primary: red,\n        secondary: grey\n    },\n    overrides: {\n    }\n});\n\nexport const DARK_THEME = createMuiTheme({\n    palette: {\n        type: 'dark'\n    }\n});\n","import React, {PropsWithChildren} from \"react\";\nimport {LIGHT_THEME, DARK_THEME} from \"./theme\";\nimport {MuiThemeProvider} from \"@material-ui/core\";\nimport {useSelector} from \"react-redux\";\nimport {selectSettings} from \"../../features/settings/settingsSlice\";\n\nfunction ThemeProvider(props: PropsWithChildren<{}>) {\n    const {darkThemeEnabled} = useSelector(selectSettings);\n    return (\n        <MuiThemeProvider theme={darkThemeEnabled ? DARK_THEME : LIGHT_THEME}>\n            {props.children}\n        </MuiThemeProvider>\n    )\n}\n\nexport default ThemeProvider;\n","import React from 'react';\nimport {Typography} from \"@material-ui/core\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\n\nexport interface ErrorMessageProps {\n    text?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: theme.spacing(2),\n        height: '100%',\n        width: '100%'\n    }\n}));\n\nfunction ErrorMessage({\n    text = 'That’s an error'\n}: ErrorMessageProps) {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Typography\n                variant=\"h6\"\n                color=\"error\"\n            >\n                {text}\n            </Typography>\n        </div>\n    );\n}\n\nexport default ErrorMessage;\n","import React from 'react';\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport {CircularProgress} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n        height: '100%',\n    }\n}));\n\nfunction Loading() {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <CircularProgress/>\n        </div>\n    );\n}\n\nexport default Loading;\n","import React from 'react';\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport {Typography} from \"@material-ui/core\";\nimport {useSelector} from \"react-redux\";\nimport {selectAuth} from \"../authSlice\";\nimport ErrorMessage from \"../../../common/components/layout/ErrorMessage\";\nimport Loading from \"../../../common/components/layout/Loading\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100%'\n    },\n    header: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    avatar: {\n        width: 72,\n        height: 72,\n        marginBottom: theme.spacing(2)\n    }\n}));\n\nfunction WelcomePage() {\n    const classes = useStyles();\n    const { user, error, loading } = useSelector(selectAuth);\n\n    if (loading || !user) return <Loading/>;\n    if (error) return <ErrorMessage/>;\n\n    return (\n        <div className={classes.root}>\n            <header className={classes.header}>\n                <Avatar\n                    className={classes.avatar}\n                    src={user?.avatarUrl}\n                />\n                <Typography\n                    variant=\"h6\"\n                    component=\"h2\"\n                >\n                    Welcome to Fake Messenger, {user?.firstName}\n                </Typography>\n                <Typography>\n\n                </Typography>\n            </header>\n        </div>\n    );\n}\n\nexport default WelcomePage;\n","import WelcomePage from \"./WelcomePage\";\n\nexport default WelcomePage;\n","import React from \"react\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport {Typography} from \"@material-ui/core\";\n\nexport const NOT_FOUND_ROUTE_PATH = '/not-found';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100%'\n    },\n    header: {\n        textAlign: 'center'\n    }\n}));\n\nfunction NotFoundPage() {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <header className={classes.header}>\n                <Typography\n                    variant=\"h6\"\n                    component=\"h2\"\n                    color=\"error\"\n                >\n                    That’s an error 404\n                </Typography>\n                <Typography>\n                    The requested URL was not found on this server. That’s all we know.\n                </Typography>\n            </header>\n        </div>\n    )\n}\n\nexport default NotFoundPage;\n","import React from 'react';\nimport {Check} from \"@material-ui/icons\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {createStyles, Theme} from \"@material-ui/core\";\n\nexport interface MessageReadStatusProps {\n    delivered?: boolean;\n    read?: boolean;\n    gutterRight?: boolean;\n}\n\nconst useStyles = (props: MessageReadStatusProps) => makeStyles((theme: Theme) => createStyles({\n    root: {\n        display: 'inline-flex',\n        alignItems: 'center',\n        marginRight: props.gutterRight\n            ? theme.spacing(.25)\n            : 0\n    },\n    deliveredIcon: {\n        zIndex: 1,\n        opacity: props.delivered ? 1 : .25\n    },\n    readIcon: {\n        marginLeft: -theme.spacing(1),\n        opacity: props.read ? 1 : .25\n    },\n}));\n\nfunction MessageReadStatus(props: MessageReadStatusProps) {\n    const classes = useStyles(props)();\n    return (\n        <span className={classes.root}>\n            <Check\n                className={classes.deliveredIcon}\n                color=\"inherit\"\n                fontSize=\"inherit\"\n            />\n            <Check\n                className={classes.readIcon}\n                color=\"inherit\"\n                fontSize=\"inherit\"\n            />\n        </span>\n    );\n}\n\nexport default MessageReadStatus;\n","import React from 'react';\nimport {CheckboxProps, createStyles, ListItem, ListItemTextProps, Theme} from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport MessageReadStatus, {MessageReadStatusProps} from \"./MessageReadStatus\";\n\nexport interface MessageListItemProps {\n    variant?: 'default' | 'checkbox';\n    direction?: 'right' | 'left';\n    color?: 'primary' | 'default';\n    text: ListItemTextProps['secondary'];\n    delivered?: MessageReadStatusProps['delivered'];\n    read?: MessageReadStatusProps['read'];\n    createdAt: Date;\n    CheckboxProps?: CheckboxProps;\n}\n\nconst useStyles = (props: MessageListItemProps) => makeStyles((theme: Theme) => {\n    const bgColor = props.color === 'primary'\n        ? theme.palette.primary.main\n        : theme.palette.background.paper;\n    const textColor = props.color === 'primary'\n        ? theme.palette.getContrastText(bgColor)\n        : 'inherit';\n    return createStyles({\n        directionRight: {\n            justifyContent: 'flex-end'\n        },\n        directionLeft: {\n            justifyContent: 'flex-start'\n        },\n        message: {\n            position: 'relative',\n            maxWidth: '90%',\n            marginLeft: props.direction === 'left'\n                ? theme.spacing(2)\n                : 'inherit',\n            marginRight: props.direction === 'right'\n                ? theme.spacing(2)\n                : 'inherit',\n            backgroundColor: bgColor,\n            color: textColor,\n            padding: theme.spacing(1),\n            borderRadius: theme.shape.borderRadius\n        },\n        status: {\n            display: 'inline-flex',\n            alignItems: 'center',\n            color: textColor\n        },\n        listItemText: {\n            margin: 0\n        },\n        tailRight: {\n            position: 'absolute',\n            right: -theme.spacing(2) + theme.shape.borderRadius,\n            top: 0,\n            display: 'block',\n            borderWidth: theme.spacing(1),\n            borderColor: bgColor,\n            borderStyle: 'solid',\n            borderRightColor: 'transparent',\n            borderBottomColor: 'transparent'\n        },\n        tailLeft: {\n            position: 'absolute',\n            left: -theme.spacing(2) + theme.shape.borderRadius,\n            top: 0,\n            display: 'block',\n            borderWidth: theme.spacing(1),\n            borderColor: bgColor,\n            borderStyle: 'solid',\n            borderLeftColor: 'transparent',\n            borderBottomColor: 'transparent'\n        },\n        listItemIcon: {\n            marginRight: 'auto'\n        }\n    })\n});\n\nfunction MessageListItem(props: MessageListItemProps) {\n    const {\n        variant = 'default',\n        direction = 'right',\n        text,\n        delivered,\n        read,\n        createdAt,\n        CheckboxProps\n    } = props;\n    const classes = useStyles(props)();\n\n    const primary = (\n        <Typography\n            variant=\"body2\"\n        >\n            {text}\n        </Typography>\n    );\n\n    const secondary = (\n        <Typography\n            variant=\"caption\"\n            color=\"inherit\"\n        >\n            {createdAt.toLocaleTimeString().substring(0, 5)}\n        </Typography>\n\n    );\n\n    const listItemIcon = variant === 'checkbox' && (\n        <ListItemIcon\n            className={classes.listItemIcon}\n        >\n            <Checkbox\n                {...CheckboxProps}\n            />\n        </ListItemIcon>\n    );\n\n    const messageStatus = (\n        <MessageReadStatus\n            delivered={delivered}\n            read={read}\n            gutterRight\n        />\n    );\n\n    const messageTail = direction === 'right'\n        ? <div className={classes.tailRight} />\n        : <div className={classes.tailLeft} />;\n\n    const className = direction === 'right'\n        ? classes.directionRight\n        : classes.directionLeft;\n    return (\n        <ListItem\n            className={className}\n            dense\n            selected={CheckboxProps?.checked}\n        >\n            {listItemIcon}\n            <div className={classes.message}>\n                <ListItemText\n                    className={classes.listItemText}\n                    primary={primary}\n                    secondary={\n                        <span className={classes.status}>\n                            {messageStatus}\n                            {secondary}\n                        </span>\n                    }\n                />\n                {messageTail}\n            </div>\n        </ListItem>\n    );\n}\n\nexport default MessageListItem;\n","import React, {ReactNode} from \"react\";\nimport List from \"@material-ui/core/List\";\n\nexport interface ListViewProps {\n    itemCount: number;\n    renderItem: (index: number) => ReactNode;\n}\n\nfunction ListView(props: ListViewProps) {\n    const renderItem = (_: null, index: number) => props.renderItem(index);\n    return (\n        <List>\n            {Array(props.itemCount).fill(null).map(renderItem)}\n        </List>\n    )\n}\n\nexport default ListView;","import React, {Key} from 'react';\nimport MessageListItem, {MessageListItemProps} from \"./MessageListItem\";\nimport ListView from \"../ListView\";\n\nexport interface MessageListProps {\n    itemCount: number;\n    getItem: (index: number) => MessageListItemProps;\n    getItemKey?: (index: number) => Key;\n}\n\nfunction MessageList({\n    itemCount,\n    getItem,\n    getItemKey\n}: MessageListProps) {\n    const renderItem = (index: number) => {\n        const itemProps = getItem(index);\n        const itemKey = getItemKey ? getItemKey(index) : index;\n\n        return (\n            <MessageListItem\n                key={itemKey}\n                {...itemProps}\n            />\n        )\n    };\n\n    return (\n        <ListView\n            itemCount={itemCount}\n            renderItem={renderItem}\n        />\n    );\n}\n\nexport default MessageList;\n","import React, {ChangeEvent, useEffect} from 'react';\nimport MessageList, {MessageListProps} from \"../../common/components/MessageList/MessageList\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Message} from \"./Message\";\nimport {toggleCheckMessage, selectChatById, fetchMessagesRequest} from \"../chat/chatsSlice\";\nimport {MessageListItemProps} from \"../../common/components/MessageList/MessageListItem\";\nimport ErrorMessage from \"../../common/components/layout/ErrorMessage\";\nimport Loading from \"../../common/components/layout/Loading\";\nimport {Chat} from \"../chat/Chat\";\n\nexport interface MessageListContainerProps {\n    chatId: Chat['id'];\n}\n\nconst mapMessageToItemProps = (message: Message): MessageListItemProps => ({\n    text: message?.text,\n    delivered: message.delivered,\n    read: message.read,\n    createdAt: message.createdAt,\n    direction: message.createdByMe ? 'right' : 'left',\n    color: message.createdByMe ? 'primary' : 'default'\n});\n\nconst getMessagesFilter = (searchQuery: string) => (item: Message) => {\n    const query = searchQuery.toLowerCase();\n    return item.text.toLowerCase().includes(query);\n};\n\nfunction MessageListContainer({ chatId }: MessageListContainerProps) {\n    const { error, searchQuery, checkModeEnabled, checkedIds, messages: allMessages, loading } = useSelector(selectChatById(chatId));\n    const messagesFilter = getMessagesFilter(searchQuery);\n    const messages = searchQuery ? allMessages?.filter(messagesFilter) : allMessages;\n    const messagesFetched = Boolean(allMessages);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (!messagesFetched) {\n            const action = fetchMessagesRequest({chatId});\n            dispatch(action);\n        }\n    }, [messagesFetched, dispatch, chatId]);\n\n    if (loading || !messages) return <Loading/>;\n    if (error) return <ErrorMessage/>;\n\n    const getItem: MessageListProps['getItem'] = (index) => {\n        const message: Message = messages[index];\n        const handleChange = (event: ChangeEvent, checked: boolean) => {\n            const action = toggleCheckMessage({\n                chatId,\n                messageId: message.id\n            });\n            dispatch(action);\n        };\n\n        return {\n            ...mapMessageToItemProps(message),\n            variant: checkModeEnabled ? 'checkbox' : 'default',\n            CheckboxProps: {\n                checked: checkedIds.includes(message.id),\n                onChange: handleChange\n            }\n        };\n    };\n\n    return messages.length ? (\n        <MessageList\n            itemCount={messages.length}\n            getItem={getItem}\n            getItemKey={index => messages[index].id}\n        />\n    ) : null;\n}\n\nexport default MessageListContainer;\n","import React, {ChangeEvent, useState} from 'react';\nimport {InputBaseProps} from \"@material-ui/core\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {ArrowBack, Clear} from \"@material-ui/icons\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nexport interface SearchInputBaseProps extends Omit<InputBaseProps, 'onChange' | 'value'> {\n    initialValue?: string;\n    onChange?: (value: string) => void;\n    onBack?: VoidFunction;\n    onClear?: VoidFunction;\n}\n\nfunction SearchInputBase({\n    placeholder = 'Search',\n    initialValue = '',\n    onBack,\n    onClear,\n    onChange,\n    ...inputProps\n}: SearchInputBaseProps) {\n    const [value, setValue] = useState<string>(initialValue);\n    const handleBack = () => {\n        setValue('');\n        onBack && onBack();\n    };\n    const handleClear = () => {\n        setValue('');\n        onClear && onClear();\n    };\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n        const { value } = event.target;\n        setValue(value);\n        onChange && onChange(value);\n    };\n\n    const startAdornment = (\n        <InputAdornment position=\"start\">\n            <Tooltip title=\"Back\">\n                <IconButton\n                    edge=\"start\"\n                    onClick={handleBack}\n                >\n                    <ArrowBack/>\n                </IconButton>\n            </Tooltip>\n        </InputAdornment>\n    );\n\n    const endAdornment = value && (\n        <InputAdornment position=\"end\">\n            <IconButton\n                edge=\"end\"\n                onClick={handleClear}\n            >\n                <Clear/>\n            </IconButton>\n        </InputAdornment>\n    );\n\n    return (\n        <InputBase\n            placeholder={placeholder}\n            fullWidth\n            autoFocus\n            {...inputProps}\n            value={value}\n            onChange={handleChange}\n            startAdornment={startAdornment}\n            endAdornment={endAdornment}\n        />\n    );\n}\n\nexport default SearchInputBase;\n","import React, {ReactNode, useState} from 'react';\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar, {AvatarProps} from \"@material-ui/core/Avatar\";\nimport ListItemText, {ListItemTextProps} from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Search} from \"@material-ui/icons\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport SearchInputBase, {SearchInputBaseProps} from \"./SearchInputBase\";\nimport {createStyles, Theme, Tooltip} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nexport interface UserToolbarProps {\n    primary: ListItemTextProps['primary'];\n    secondary: ListItemTextProps['secondary'];\n    avatarSrc?: AvatarProps['src'];\n    avatarTo?: string;\n    endAction?: ReactNode;\n    startAction?: ReactNode;\n    SearchInputBaseProps?: SearchInputBaseProps\n}\n\ntype ViewName = 'search' | 'default';\nconst ESCAPE_KEY_CODE = 27;\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    primaryText: {\n        display: 'block',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n    }\n}));\n\nfunction ToolbarListItem(props: UserToolbarProps) {\n    const classes = useStyles();\n    const [viewName, setViewName] = useState<ViewName>('default');\n\n    const handleBack = () => {\n        const onBack = props.SearchInputBaseProps?.onBack;\n        setViewName('default');\n        onBack && onBack();\n    };\n\n    const searchView = () => (\n        <SearchInputBase\n            {...props.SearchInputBaseProps}\n            onKeyUp={event => event.keyCode === ESCAPE_KEY_CODE && handleBack()}\n            onBack={handleBack}\n        />\n    );\n\n    const defaultView = () => {\n        const avatar = props.avatarTo ? (\n            <Tooltip title=\"ProfilePage\">\n                <IconButton\n                    edge=\"start\"\n                    size=\"small\"\n                    component={Link}\n                    to={props.avatarTo}\n                >\n                    <Avatar\n                        src={props.avatarSrc}\n                    />\n                </IconButton>\n            </Tooltip>\n        ) : (\n            <Avatar\n                src={props.avatarSrc}\n            />\n        );\n\n        const searchButton = (\n            <Tooltip title=\"Search\">\n                <IconButton\n                    edge={props.endAction ? false : 'end'}\n                    onClick={() => setViewName('search')}\n                >\n                    <Search/>\n                </IconButton>\n            </Tooltip>\n        );\n\n        return (\n            <>\n                {props.startAction}\n                <ListItemAvatar>\n                    {avatar}\n                </ListItemAvatar>\n                <ListItemText\n                    primary={\n                        <span className={classes.primaryText}>\n                            {props.primary}\n                        </span>\n                    }\n                    secondary={props.secondary}\n                />\n                {searchButton}\n                {props.endAction}\n            </>\n        );\n    };\n\n    const getView = (name: ViewName) => name === 'default'\n        ? defaultView()\n        : searchView();\n\n    return (\n        <Toolbar>\n            {getView(viewName)}\n        </Toolbar>\n    );\n}\n\nexport default ToolbarListItem;\n","import React, {PropsWithChildren, ReactNode, useEffect} from 'react';\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\n\nexport type ViewProps = PropsWithChildren<{\n    className?: HTMLDivElement['className'];\n    toolbar?: ReactNode;\n    footer?: ReactNode;\n    needScrollBottom?: boolean;\n}>;\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%'\n    },\n    content: {\n        overflow: 'auto',\n        flex: 'auto'\n    },\n    toolbar: {\n        backgroundColor: theme.palette.background.paper,\n        borderBottomColor: theme.palette.divider,\n        borderBottomStyle: 'solid',\n        borderBottomWidth: 1\n    },\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        borderTopColor: theme.palette.divider,\n        borderTopStyle: 'solid',\n        borderTopWidth: 1\n    },\n}));\n\nfunction View(props: ViewProps) {\n    const classes = useStyles();\n    const contentRef = React.createRef<HTMLDivElement>();\n    const classNames = [props.className, classes.root].join(' ');\n\n    useEffect(() => {\n        if (!props.needScrollBottom) return;\n\n        const { current } = contentRef;\n        if (current) current.scrollTo({\n            top: current.scrollHeight\n        });\n    });\n\n    const content = (\n        <div\n            className={classes.content}\n            ref={contentRef}\n        >\n            {props.children}\n        </div>\n    );\n\n    const toolbar = props.toolbar && (\n        <div className={classes.toolbar}>\n            {props.toolbar}\n        </div>\n    );\n\n    const footer = props.footer && (\n        <div className={classes.footer}>\n            {props.footer}\n        </div>\n    );\n\n    return (\n        <div className={classNames}>\n            {toolbar}\n            {content}\n            {footer}\n        </div>\n    );\n}\n\nexport default View;\n","import React, {ReactNode, useState} from 'react';\nimport {IconButtonProps, Tooltip} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {MoreVert} from \"@material-ui/icons\";\nimport Popover from \"@material-ui/core/Popover\";\n\nexport interface PopoverButtonProps {\n    renderButton?: (onClick: IconButtonProps['onClick']) => ReactNode;\n    renderPopover: (onClose: VoidFunction) => ReactNode;\n}\n\nfunction PopoverAction(props: PopoverButtonProps) {\n    const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n    const open = Boolean(anchorEl);\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => setAnchorEl(event.currentTarget);\n    const handleClose = () => setAnchorEl(null);\n\n    const iconButton = props.renderButton ? props.renderButton(handleClick) : (\n        <Tooltip title=\"Details\">\n            <IconButton\n                edge=\"end\"\n                onClick={handleClick}\n            >\n                <MoreVert/>\n            </IconButton>\n        </Tooltip>\n    );\n\n    const popover = (\n        <Popover\n            open={open}\n            onClose={handleClose}\n            anchorEl={anchorEl}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left'\n            }}\n        >\n            {props.renderPopover(handleClose)}\n        </Popover>\n    );\n\n    return (\n        <>\n            {iconButton}\n            {popover}\n        </>\n    );\n}\n\nexport default PopoverAction;\n","import React from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {ArrowBack} from \"@material-ui/icons\";\n\nexport interface BackButtonProps {\n    onClick?: (history: ReturnType<typeof useHistory>) => void;\n}\n\nfunction BackButton({ onClick }: BackButtonProps) {\n    const history = useHistory();\n\n    return (\n        <Tooltip title=\"Back\">\n            <IconButton\n                edge=\"start\"\n                onClick={() => onClick ? onClick(history) : history.goBack()}\n            >\n                <ArrowBack/>\n            </IconButton>\n        </Tooltip>\n    );\n}\n\nexport default BackButton;","import React, {ReactNode} from 'react';\nimport Typography, {TypographyProps} from \"@material-ui/core/Typography\";\nimport {createStyles, Theme, Toolbar, useMediaQuery, useTheme} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport BackButton from \"./BackButton\";\n\nexport interface ViewToolbarProps {\n    title?: TypographyProps['children'];\n    startAction?: ReactNode;\n    endAction?: ReactNode;\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        background: theme.palette.background.paper\n    },\n    title: {\n        marginRight: 'auto',\n        display: 'block',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n    }\n}));\n\nfunction LayoutToolbar(props: ViewToolbarProps) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const isBreakpointSm = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const title = (\n        <Typography className={classes.title}>\n            {props.title}\n        </Typography>\n    );\n\n    const startAction = props.startAction ? props.startAction : isBreakpointSm\n        ? <BackButton/> : null;\n\n    return (\n        <Toolbar className={classes.root}>\n            {startAction}\n            {title}\n            {props.endAction}\n        </Toolbar>\n    );\n}\n\nexport default LayoutToolbar;\n","import React from 'react';\nimport ListItemText, {ListItemTextProps} from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\n\nexport interface DetailListItemProps {\n    primary?: ListItemTextProps['primary'];\n    secondary?: ListItemTextProps['secondary'];\n}\n\nfunction DetailListItem(props: DetailListItemProps) {\n    return (\n        <ListItem>\n            <ListItemText\n                primary={props.primary}\n                secondary={props.secondary}\n            />\n        </ListItem>\n    );\n}\n\nexport default DetailListItem;\n","import React from 'react';\nimport {ListItem, ListItemTextProps, SwitchProps} from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Switch from \"@material-ui/core/Switch\";\n\nexport type ListItemSwitchProps = Omit<SwitchProps, 'onChange'> & {\n    primary?: ListItemTextProps['primary'];\n    secondary?: ListItemTextProps['secondary'];\n    checked: boolean;\n    onChange?: (checked: boolean) => void;\n}\n\nfunction SwitchListItem({\n    primary,\n    secondary,\n    onChange,\n    checked,\n    ...switchProps\n}: ListItemSwitchProps) {\n    return (\n        <ListItem\n            button\n            onClick={() => onChange && onChange(!checked)}\n        >\n            <ListItemText\n                primary={primary}\n                secondary={secondary}\n            />\n            <ListItemSecondaryAction>\n                <Switch\n                    checked={checked}\n                    onChange={(event, checked) => onChange && onChange(checked)}\n                    {...switchProps}\n                />\n            </ListItemSecondaryAction>\n        </ListItem>\n    );\n}\n\nexport default SwitchListItem;\n","import React from 'react';\nimport SwitchListItem from \"../../../common/components/SwitchListItem\";\nimport {Contact} from \"../Contact\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    contactsSwitchNotifications,\n    getContactByIdSelector\n} from \"../contactsSlice\";\n\nexport interface NotificationsContactSwitchProps {\n    contactId: Contact['id'];\n}\n\nfunction NotificationsContactSwitch({ contactId }: NotificationsContactSwitchProps) {\n    const selectContact = getContactByIdSelector(contactId);\n    const contact = useSelector(selectContact);\n    const dispatch = useDispatch();\n    const notificationsEnabled = contact?.notificationsEnabled || false;\n    return (\n        <SwitchListItem\n            primary=\"Notifications\"\n            checked={notificationsEnabled}\n            onChange={async checked => {\n                const action = contactsSwitchNotifications(contactId);\n                dispatch(action);\n            }}\n        />\n    );\n}\n\nexport default NotificationsContactSwitch;\n","import React from 'react';\nimport View from \"../../../common/components/layout/View\";\nimport LayoutToolbar from \"../../../common/components/layout/LayoutToolbar\";\nimport { useParams } from 'react-router-dom';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getContactByIdSelector, removeContactById} from \"../contactsSlice\";\nimport {List} from \"@material-ui/core\";\nimport ErrorMessage from \"../../../common/components/layout/ErrorMessage\";\nimport DetailListItem from \"../../../common/components/DetailListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport NotificationsContactSwitch from \"./NotificationsContactSwitch\";\nimport Link from \"@material-ui/core/Link\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport {Delete} from \"@material-ui/icons\";\n\nfunction ContactProfilePage() {\n    const {id: contactId = ''} = useParams();\n    const dispatch = useDispatch();\n    const selectContact = getContactByIdSelector(contactId);\n    const contact = useSelector(selectContact);\n    const removeContact = () => {\n        const action = removeContactById(contactId);\n        dispatch(action);\n    }\n\n    if (!contactId) return <ErrorMessage text=\"No data\" />;\n\n    const toolbar = (\n        <LayoutToolbar\n            title={`${contact?.firstName} ${contact?.lastName}`}\n        />\n    );\n\n    const removeListItem = (\n        <ListItem button onClick={removeContact}>\n            <ListItemIcon>\n                <Delete/>\n            </ListItemIcon>\n            <ListItemText\n                primary=\"Remove from contacts\"\n            />\n        </ListItem>\n    );\n\n    return (\n        <View\n            toolbar={toolbar}\n        >\n            <List>\n                <NotificationsContactSwitch\n                    contactId={contactId}\n                />\n            </List>\n            <Divider/>\n            <List>\n                <ListSubheader>\n                    Details\n                </ListSubheader>\n                <DetailListItem\n                    primary=\"Phone number\"\n                    secondary={\n                        <Link href={`tel: ${contact?.phoneNumber}`}>\n                            {contact?.phoneNumber}\n                        </Link>\n                    }\n                />\n                <DetailListItem\n                    primary=\"Email\"\n                    secondary={\n                        <Link href={`mailto: ${contact?.email}`}>\n                            {contact?.email}\n                        </Link>\n                    }\n                />\n                <DetailListItem\n                    primary=\"Date of Birth\"\n                    secondary={contact?.dateOfBirth.toLocaleDateString()}\n                />\n                <DetailListItem\n                    primary=\"Bio\"\n                    secondary={contact?.bio}\n                />\n            </List>\n            <Divider/>\n            <List>\n                {removeListItem}\n            </List>\n        </View>\n    );\n}\n\nexport default ContactProfilePage;\n","import ContactProfilePage from \"./ContactProfilePage\";\n\nexport const CONTACT_PROFILE_ROUTE_PATH = '/chat/:id/profile';\n\nexport default ContactProfilePage;\n","import React, {ReactElement} from \"react\";\nimport bytes from \"bytes\";\nimport {AvatarProps, createStyles, Theme} from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport {\n    Audiotrack,\n    PlayCircleOutline,\n    Image,\n    TextFields,\n    Message,\n    FontDownload,\n    Attachment, GetApp\n} from \"@material-ui/icons\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Link from \"@material-ui/core/Link\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nexport interface AttachmentListItemProps {\n    name: File['name'];\n    size: File['size'];\n    type: File['type'];\n    lastModified: File['lastModified'];\n    avatarSrc?: AvatarProps['src'];\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    primary: {\n        display: 'block',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    }\n}));\n\nconst typeIcons: {[key: string]: ReactElement} = {\n    'video': <PlayCircleOutline/>,\n    'audio': <Audiotrack/>,\n    'image': <Image/>,\n    'font': <FontDownload/>,\n    'text': <TextFields/>,\n    'message': <Message />\n};\n\nfunction AttachmentListItem(props: AttachmentListItemProps) {\n    const classes = useStyles();\n\n    return (\n        <ListItem dense>\n            <ListItemAvatar>\n                <Avatar\n                    variant=\"rounded\"\n                    children={typeIcons[props.type] || <Attachment/>}\n                />\n            </ListItemAvatar>\n            <ListItemText\n                primary={\n                    <span className={classes.primary}>\n                        {props.name}\n                    </span>\n                }\n                secondary={bytes(props.size)}\n            />\n            <ListItemSecondaryAction>\n                <IconButton\n                    edge=\"end\"\n                    component={Link}\n                    href={`data:text/plain;`}\n                    download={props.name}\n                >\n                    <GetApp/>\n                </IconButton>\n            </ListItemSecondaryAction>\n        </ListItem>\n    );\n}\n\nexport default AttachmentListItem;\n","import React, {Key} from 'react';\nimport AttachmentListItem, {AttachmentListItemProps} from \"./AttachmentListItem\";\nimport ListView from \"../ListView\";\n\nexport interface AttachmentListProps {\n    itemCount: number;\n    getItem: (index: number) => AttachmentListItemProps;\n    getItemKey?: (index: number) => Key;\n}\n\nfunction AttachmentList({\n    itemCount,\n    getItem,\n    getItemKey\n}: AttachmentListProps) {\n    const renderItem = (index: number) => {\n        const itemProps = getItem(index);\n        const itemKey = getItemKey ? getItemKey(index) : index;\n        return (\n            <AttachmentListItem\n                key={itemKey}\n                {...itemProps}\n            />\n        )\n    };\n\n    return (\n        <ListView\n            itemCount={itemCount}\n            renderItem={renderItem}\n        />\n    );\n}\n\nexport default AttachmentList;\n","import React, {ReactNode} from \"react\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport {Typography} from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {Search} from \"@material-ui/icons\";\n\nexport interface EmptyProps {\n    primary?: string;\n    secondary?: string;\n    image?: ReactNode;\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: theme.spacing(2),\n        height: '100%'\n    },\n    avatar: {\n        marginBottom: theme.spacing(2),\n        width: 72,\n        height: 72,\n        fontSize: 40\n    }\n}));\n\nfunction Empty({\n    primary = 'There is nothing',\n    secondary = 'Maybe something will be here',\n    image\n}: EmptyProps) {\n    const classes = useStyles();\n    return (\n        <div\n            className={classes.root}\n        >\n            <Avatar className={classes.avatar}>\n                <Search fontSize=\"inherit\" />\n            </Avatar>\n            <Typography variant=\"h6\">\n                {primary}\n            </Typography>\n            <Typography variant=\"body1\">\n                {secondary}\n            </Typography>\n        </div>\n    )\n}\n\nexport default Empty;","import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport AttachmentList from \"../../common/components/AttachmentList/AttachmentList\";\nimport {Attachment} from \"./Attachment\";\nimport {AttachmentListItemProps} from \"../../common/components/AttachmentList/AttachmentListItem\";\nimport {Chat} from \"../chat/Chat\";\nimport {selectChatAttachmentsById} from \"../chat/chatsSlice\";\nimport Empty from \"../../common/components/layout/Empty\";\nimport Loading from \"../../common/components/layout/Loading\";\n\nconst mapAttachmentToItemProps = (attachment: Attachment): AttachmentListItemProps => ({\n    name: attachment.name,\n    size: attachment.size,\n    lastModified: attachment.lastModified,\n    type: attachment.type,\n    avatarSrc: attachment.imageUrl\n});\n\nexport interface AttachmentListContainerProps {\n    chatId: Chat['id'];\n}\n\nfunction AttachmentListContainer({ chatId }: AttachmentListContainerProps) {\n    const selectAttachments = selectChatAttachmentsById(chatId);\n    const attachments = useSelector(selectAttachments);\n\n    if (!attachments) return <Loading/>;\n    if (!attachments.length) return <Empty/>;\n\n    return (\n        <AttachmentList\n            itemCount={attachments.length}\n            getItem={index => mapAttachmentToItemProps(attachments[index])}\n            getItemKey={index => attachments[index].id}\n        />\n    );\n}\n\nexport default AttachmentListContainer;\n","import React from \"react\";\nimport {AvatarProps, createStyles, Theme} from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {OpenInNew, Image} from \"@material-ui/icons\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nexport interface AttachmentLinkListItemProps {\n    primary: string;\n    secondary: string;\n    to: string;\n    avatarSrc?: AvatarProps['src'];\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    singleLine: {\n        display: 'block',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap'\n    }\n}));\n\nfunction LinkListItem(props: AttachmentLinkListItemProps) {\n    const classes = useStyles();\n\n    return (\n        <ListItem\n            dense\n            button\n            component=\"a\"\n            target=\"_blank\"\n            href={props.to}\n        >\n            <ListItemAvatar>\n                <Avatar\n                    variant=\"rounded\"\n                    //src={props.avatarSrc}\n                    children={<Image/>}\n                />\n            </ListItemAvatar>\n            <ListItemText\n                primary={\n                    <span className={classes.singleLine}>\n                        {props.primary}\n                    </span>\n                }\n                secondary={\n                    <span className={classes.singleLine}>\n                        {props.secondary}\n                    </span>\n                }\n            />\n            <ListItemSecondaryAction>\n                <IconButton\n                    edge=\"end\"\n                    component=\"a\"\n                    target=\"_blank\"\n                    href={props.to}\n                >\n                    <OpenInNew/>\n                </IconButton>\n            </ListItemSecondaryAction>\n        </ListItem>\n    );\n}\n\nexport default LinkListItem;\n","import React, {Key} from 'react';\nimport LinkListItem, {AttachmentLinkListItemProps} from \"./LinkListItem\";\nimport ListView from \"../ListView\";\n\nexport interface AttachmentLinkListProps {\n    itemCount: number;\n    getItem: (index: number) => AttachmentLinkListItemProps;\n    getItemKey?: (index: number) => Key;\n}\n\nfunction LinkList({\n    itemCount,\n    getItem,\n    getItemKey\n}: AttachmentLinkListProps) {\n    const renderItem = (index: number) => {\n        const itemProps = getItem(index);\n        const itemKey = getItemKey ? getItemKey(index) : index;\n        return (\n            <LinkListItem\n                key={itemKey}\n                {...itemProps}\n            />\n        )\n    };\n\n    return (\n        <ListView\n            itemCount={itemCount}\n            renderItem={renderItem}\n        />\n    );\n}\n\nexport default LinkList;\n","import React from 'react';\nimport LinkList from \"../../common/components/LinkList/LinkList\";\nimport {AttachmentLink} from \"./AttachmentLink\";\nimport {AttachmentLinkListItemProps} from \"../../common/components/LinkList/LinkListItem\";\nimport {useSelector} from \"react-redux\";\nimport {Chat} from \"../chat/Chat\";\nimport {selectChatLinksById} from \"../chat/chatsSlice\";\nimport Empty from \"../../common/components/layout/Empty\";\nimport Loading from \"../../common/components/layout/Loading\";\n\nconst mapLinkToItemProps = (link: AttachmentLink): AttachmentLinkListItemProps => ({\n    primary: link.title,\n    secondary: link.description,\n    avatarSrc: link.imageUrl,\n    to: link.url,\n});\n\nexport interface LinkListContainerProps {\n    chatId: Chat['id'];\n}\n\nfunction LinkListContainer({ chatId }: LinkListContainerProps) {\n    const selectLinks = selectChatLinksById(chatId);\n    const links = useSelector(selectLinks);\n\n    if (!links) return <Loading/>;\n    if (!links.length) return <Empty/>;\n\n    return (\n        <LinkList\n            itemCount={links.length}\n            getItem={index => mapLinkToItemProps(links[index])}\n            getItemKey={index => links[index].id}\n        />\n    );\n}\n\nexport default LinkListContainer;\n","import React from \"react\";\nimport {ListItem, ListItemIconProps, ListItemProps, ListItemTextProps} from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\n\nexport type MenuListItemProps = {\n    primary?: ListItemTextProps['primary'];\n    secondary?: ListItemTextProps['secondary'];\n    icon?: ListItemIconProps['children'];\n    button?: ListItemProps['button'];\n    selected?: ListItemProps['selected'];\n    disabled?: ListItemProps['disabled'];\n    dense?: ListItemProps['dense'];\n    onClick?: VoidFunction;\n}\n\nfunction MenuListItem({\n    icon,\n    primary,\n    secondary,\n    selected,\n    disabled,\n    dense,\n    onClick\n\n}: MenuListItemProps) {\n    const listItemIcon = icon && (\n        <ListItemIcon>\n            {icon}\n        </ListItemIcon>\n    );\n\n    return (\n        <ListItem\n            button\n            selected={selected}\n            disabled={disabled}\n            dense={dense}\n            onClick={onClick}\n        >\n            {listItemIcon}\n            <ListItemText\n                primary={primary}\n                secondary={secondary}\n            />\n        </ListItem>\n    )\n}\n\nexport default MenuListItem;","import React, {useState} from 'react';\nimport {useDispatch} from \"react-redux\";\nimport {useParams} from \"react-router-dom\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport List from \"@material-ui/core/List\";\nimport View from \"../../../common/components/layout/View\";\nimport ErrorMessage from \"../../../common/components/layout/ErrorMessage\";\nimport AttachmentList from \"../AttachmentList\";\nimport AttachmentLinkList from \"../../links/LinkList\";\nimport PopoverAction from \"../../../common/components/PopoverAction\";\nimport MenuListItem from \"../../../common/components/MenuListItem\";\nimport {removeAttachmentsSuccess, removeLinksSuccess} from \"../../chat/chatsSlice\";\nimport LayoutToolbar from \"../../../common/components/layout/LayoutToolbar\";\n\nconst FILES_TAB_VALUE = 0;\nconst LINKS_TAB_VALUE = 1;\n\nfunction AttachmentsPage() {\n    const { id: chatId } = useParams();\n    const [tabsValue, setTabsValue] = useState(FILES_TAB_VALUE);\n    const dispatch = useDispatch();\n\n    if (!chatId) return <ErrorMessage text=\"Failed fetch chat id\" />;\n\n    const popoverMenuButton = (\n        <PopoverAction\n            renderPopover={onClose => (\n                <List>\n                    <MenuListItem\n                        primary=\"Remove all files\"\n                        onClick={() => {\n                            const action = removeAttachmentsSuccess({chatId});\n                            dispatch(action);\n                            onClose();\n                        }}\n                    />\n                    <MenuListItem\n                        primary=\"Remove all links\"\n                        onClick={() => {\n                            const action = removeLinksSuccess({chatId});\n                            dispatch(action);\n                            onClose();\n                        }}\n                    />\n                </List>\n            )}\n        />\n    );\n\n    const toolbar = (\n        <LayoutToolbar\n            title=\"AttachmentsPage\"\n            endAction={popoverMenuButton}\n        />\n    );\n\n    const tabs = (\n        <Tabs\n            value={tabsValue}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            variant=\"fullWidth\"\n            onChange={(event, value) => setTabsValue(value)}\n        >\n            <Tab\n                label=\"Files\"\n            />\n            <Tab\n                label=\"Links\"\n            />\n        </Tabs>\n    );\n\n    const toolbarWithTabs = (\n        <div>\n            {toolbar}\n            {tabs}\n        </div>\n    );\n\n    const content = tabsValue === LINKS_TAB_VALUE\n        ? <AttachmentLinkList chatId={chatId}/>\n        : <AttachmentList chatId={chatId}/>;\n\n    return (\n        <View\n            toolbar={toolbarWithTabs}\n        >\n            {content}\n        </View>\n    )\n}\n\nexport default AttachmentsPage;\n","import AttachmentsPage from \"./AttachmentsPage\";\n\nexport const CHAT_ATTACHMENTS_ROUTE_PATH = '/chat/:id/attachments';\nexport const CHAT_ATTACHMENTS_FILES_ROUTE_PATH = '/chat/:id/attachments/files';\nexport const CHAT_ATTACHMENTS_LINKS_ROUTE_PATH = '/chat/:id/attachments/links';\n\nexport default AttachmentsPage;\n","import React from 'react';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\n\ninterface EmojiGroup {\n    title: string,\n    items: string[];\n}\n\n// Source: https://getemoji.com/\nconst emojiGroups: EmojiGroup[] = [\n    {\n        title: 'Smileys and Emotions',\n        items: ['😀', '😁', '😂', '🤣', '😃', '😄', '😅', '😆', '😉', '😊', '😋', '😎', '😍', '😘', '🥰', '😗', '😙', '😚', '☺️', '🙂', '🤗', '🤩', '🤔', '🤨', '😐', '😑', '😶', '🙄', '😏', '😣', '😥', '😮', '🤐', '😯', '😪', '😫', '😴', '😌', '😛', '😜', '😝', '🤤', '😒', '😓', '😔', '😕', '🙃', '🤑', '😲', '☹️', '🙁', '😖', '😞', '😟', '😤', '😢', '😭', '😦', '😧', '😨', '😩', '🤯', '😬', '😰', '😱', '🥵', '🥶', '😳', '🤪', '😵', '😡', '😠', '🤬', '😷', '🤒', '🤕', '🤢', '🤮', '🤧', '😇', '🤠', '🤡', '🥳', '🥴', '🥺', '🤥', '🤫', '🤭', '🧐', '🤓', '😈', '👿', '👹', '👺', '💀', '👻', '👽', '🤖', '💩', '😺', '😸', '😹', '😻', '😼', '😽', '🙀', '😿', '😾']\n    },\n    {\n        title: 'People',\n        items: ['👶', '👧', '🧒', '👦', '👩', '🧑', '👨', '👵', '🧓', '👴', '👲', '👳‍♀️', '👳‍♂️', '🧕', '🧔', '👱‍♂️', '👱‍♀️', '👨‍🦰', '👩‍🦰', '👨‍🦱', '👩‍🦱', '👨‍🦲', '👩‍🦲', '👨‍🦳', '👩‍🦳', '🦸‍♀️', '🦸‍♂️', '🦹‍♀️', '🦹‍♂️', '👮‍♀️', '👮‍♂️', '👷‍♀️', '👷‍♂️', '💂‍♀️', '💂‍♂️', '🕵️‍♀️', '🕵️‍♂️', '👩‍⚕️', '👨‍⚕️', '👩‍🌾', '👨‍🌾', '👩‍🍳', '👨‍🍳', '👩‍🎓', '👨‍🎓', '👩‍🎤', '👨‍🎤', '👩‍🏫', '👨‍🏫', '👩‍🏭', '👨‍🏭', '👩‍💻', '👨‍💻', '👩‍💼', '👨‍💼', '👩‍🔧', '👨‍🔧', '👩‍🔬', '👨‍🔬', '👩‍🎨', '👨‍🎨', '👩‍🚒', '👨‍🚒', '👩‍✈️', '👨‍✈️', '👩‍🚀', '👨‍🚀', '👩‍⚖️', '👨‍⚖️', '👰', '🤵', '👸', '🤴', '🤶', '🎅', '🧙‍♀️', '🧙‍♂️', '🧝‍♀️', '🧝‍♂️', '🧛‍♀️', '🧛‍♂️', '🧟‍♀️', '🧟‍♂️', '🧞‍♀️', '🧞‍♂️', '🧜‍♀️', '🧜‍♂️', '🧚‍♀️', '🧚‍♂️', '👼', '🤰', '🤱', '🙇‍♀️', '🙇‍♂️', '💁‍♀️', '💁‍♂️', '🙅‍♀️', '🙅‍♂️', '🙆‍♀️', '🙆‍♂️', '🙋‍♀️', '🙋‍♂️', '🤦‍♀️', '🤦‍♂️', '🤷‍♀️', '🤷‍♂️', '🙎‍♀️', '🙎‍♂️', '🙍‍♀️', '🙍‍♂️', '💇‍♀️', '💇‍♂️', '💆‍♀️', '💆‍♂️', '🧖‍♀️', '🧖‍♂️', '💅', '🤳', '💃', '🕺', '👯‍♀️', '👯‍♂️', '🕴', '🚶‍♀️', '🚶‍♂️', '🏃‍♀️', '🏃‍♂️', '👫', '👭', '👬', '💑', '👩‍❤️‍👩', '👨‍❤️‍👨', '💏', '👩‍❤️‍💋‍👩', '👨‍❤️‍💋‍👨', '👪', '👨‍👩‍👧', '👨‍👩‍👧‍👦', '👨‍👩‍👦‍👦', '👨‍👩‍👧‍👧', '👩‍👩‍👦', '👩‍👩‍👧', '👩‍👩‍👧‍👦', '👩‍👩‍👦‍👦', '👩‍👩‍👧‍👧', '👨‍👨‍👦', '👨‍👨‍👧', '👨‍👨‍👧‍👦', '👨‍👨‍👦‍👦', '👨‍👨‍👧‍👧', '👩‍👦', '👩‍👧', '👩‍👧‍👦', '👩‍👦‍👦', '👩‍👧‍👧', '👨‍👦', '👨‍👧', '👨‍👧‍👦', '👨‍👦‍👦', '👨‍👧‍👧', '🤲', '👐', '🙌', '👏', '🤝', '👍', '👎', '👊', '✊', '🤛', '🤜', '🤞', '✌️', '🤟', '🤘', '👌', '👈', '👉', '👆', '👇', '☝️', '✋', '🤚', '🖐', '🖖', '👋', '🤙', '💪', '🦵', '🦶', '🖕', '✍️', '🙏', '💍', '💄', '💋', '👄', '👅', '👂', '👃', '👣', '👁', '👀', '🧠', '🦴', '🦷', '🗣', '👤', '👥']\n    },\n    {\n        title: 'Pale',\n        items: ['👶🏻', '👦🏻', '👧🏻', '👨🏻', '👩🏻', '👱🏻‍♀️', '👱🏻', '👴🏻', '👵🏻', '👲🏻', '👳🏻‍♀️', '👳🏻', '👮🏻‍♀️', '👮🏻', '👷🏻‍♀️', '👷🏻', '💂🏻‍♀️', '💂🏻', '🕵🏻‍♀️', '🕵🏻', '👩🏻‍⚕️', '👨🏻‍⚕️', '👩🏻‍🌾', '👨🏻‍🌾', '👩🏻‍🍳', '👨🏻‍🍳', '👩🏻‍🎓', '👨🏻‍🎓', '👩🏻‍🎤', '👨🏻‍🎤', '👩🏻‍🏫', '👨🏻‍🏫', '👩🏻‍🏭', '👨🏻‍🏭', '👩🏻‍💻', '👨🏻‍💻', '👩🏻‍💼', '👨🏻‍💼', '👩🏻‍🔧', '👨🏻‍🔧', '👩🏻‍🔬', '👨🏻‍🔬', '👩🏻‍🎨', '👨🏻‍🎨', '👩🏻‍🚒', '👨🏻‍🚒', '👩🏻‍✈️', '👨🏻‍✈️', '👩🏻‍🚀', '👨🏻‍🚀', '👩🏻‍⚖️', '👨🏻‍⚖️', '🤶🏻', '🎅🏻', '👸🏻', '🤴🏻', '👰🏻', '🤵🏻', '👼🏻', '🤰🏻', '🙇🏻‍♀️', '🙇🏻', '💁🏻', '💁🏻‍♂️', '🙅🏻', '🙅🏻‍♂️', '🙆🏻', '🙆🏻‍♂️', '🙋🏻', '🙋🏻‍♂️', '🤦🏻‍♀️', '🤦🏻‍♂️', '🤷🏻‍♀️', '🤷🏻‍♂️', '🙎🏻', '🙎🏻‍♂️', '🙍🏻', '🙍🏻‍♂️', '💇🏻', '💇🏻‍♂️', '💆🏻', '💆🏻‍♂️', '🕴🏻', '💃🏻', '🕺🏻', '🚶🏻‍♀️', '🚶🏻', '🏃🏻‍♀️', '🏃🏻', '🤲🏻', '👐🏻', '🙌🏻', '👏🏻', '🙏🏻', '👍🏻', '👎🏻', '👊🏻', '✊🏻', '🤛🏻', '🤜🏻', '🤞🏻', '✌🏻', '🤟🏻', '🤘🏻', '👌🏻', '👈🏻', '👉🏻', '👆🏻', '👇🏻', '☝🏻', '✋🏻', '🤚🏻', '🖐🏻', '🖖🏻', '👋🏻', '🤙🏻', '💪🏻', '🖕🏻', '✍🏻', '🤳🏻', '💅🏻', '👂🏻', '👃🏻']\n    },\n    {\n        title: 'Cream White',\n        items: ['👶🏼', '👦🏼', '👧🏼', '👨🏼', '👩🏼', '👱🏼‍♀️', '👱🏼', '👴🏼', '👵🏼', '👲🏼', '👳🏼‍♀️', '👳🏼', '👮🏼‍♀️', '👮🏼', '👷🏼‍♀️', '👷🏼', '💂🏼‍♀️', '💂🏼', '🕵🏼‍♀️', '🕵🏼', '👩🏼‍⚕️', '👨🏼‍⚕️', '👩🏼‍🌾', '👨🏼‍🌾', '👩🏼‍🍳', '👨🏼‍🍳', '👩🏼‍🎓', '👨🏼‍🎓', '👩🏼‍🎤', '👨🏼‍🎤', '👩🏼‍🏫', '👨🏼‍🏫', '👩🏼‍🏭', '👨🏼‍🏭', '👩🏼‍💻', '👨🏼‍💻', '👩🏼‍💼', '👨🏼‍💼', '👩🏼‍🔧', '👨🏼‍🔧', '👩🏼‍🔬', '👨🏼‍🔬', '👩🏼‍🎨', '👨🏼‍🎨', '👩🏼‍🚒', '👨🏼‍🚒', '👩🏼‍✈️', '👨🏼‍✈️', '👩🏼‍🚀', '👨🏼‍🚀', '👩🏼‍⚖️', '👨🏼‍⚖️', '🤶🏼', '🎅🏼', '👸🏼', '🤴🏼', '👰🏼', '🤵🏼', '👼🏼', '🤰🏼', '🙇🏼‍♀️', '🙇🏼', '💁🏼', '💁🏼‍♂️', '🙅🏼', '🙅🏼‍♂️', '🙆🏼', '🙆🏼‍♂️', '🙋🏼', '🙋🏼‍♂️', '🤦🏼‍♀️', '🤦🏼‍♂️', '🤷🏼‍♀️', '🤷🏼‍♂️', '🙎🏼', '🙎🏼‍♂️', '🙍🏼', '🙍🏼‍♂️', '💇🏼', '💇🏼‍♂️', '💆🏼', '💆🏼‍♂️', '🕴🏼', '💃🏼', '🕺🏼', '🚶🏼‍♀️', '🚶🏼', '🏃🏼‍♀️', '🏃🏼', '🤲🏼', '👐🏼', '🙌🏼', '👏🏼', '🙏🏼', '👍🏼', '👎🏼', '👊🏼', '✊🏼', '🤛🏼', '🤜🏼', '🤞🏼', '✌🏼', '🤟🏼', '🤘🏼', '👌🏼', '👈🏼', '👉🏼', '👆🏼', '👇🏼', '☝🏼', '✋🏼', '🤚🏼', '🖐🏼', '🖖🏼', '👋🏼', '🤙🏼', '💪🏼', '🖕🏼', '✍🏼', '🤳🏼', '💅🏼', '👂🏼', '👃🏼']\n    },\n    {\n        title: 'Moderate Brown',\n        items: ['👶🏽', '👦🏽', '👧🏽', '👨🏽', '👩🏽', '👱🏽‍♀️', '👱🏽', '👴🏽', '👵🏽', '👲🏽', '👳🏽‍♀️', '👳🏽', '👮🏽‍♀️', '👮🏽', '👷🏽‍♀️', '👷🏽', '💂🏽‍♀️', '💂🏽', '🕵🏽‍♀️', '🕵🏽', '👩🏽‍⚕️', '👨🏽‍⚕️', '👩🏽‍🌾', '👨🏽‍🌾', '👩🏽‍🍳', '👨🏽‍🍳', '👩🏽‍🎓', '👨🏽‍🎓', '👩🏽‍🎤', '👨🏽‍🎤', '👩🏽‍🏫', '👨🏽‍🏫', '👩🏽‍🏭', '👨🏽‍🏭', '👩🏽‍💻', '👨🏽‍💻', '👩🏽‍💼', '👨🏽‍💼', '👩🏽‍🔧', '👨🏽‍🔧', '👩🏽‍🔬', '👨🏽‍🔬', '👩🏽‍🎨', '👨🏽‍🎨', '👩🏽‍🚒', '👨🏽‍🚒', '👩🏽‍✈️', '👨🏽‍✈️', '👩🏽‍🚀', '👨🏽‍🚀', '👩🏽‍⚖️', '👨🏽‍⚖️', '🤶🏽', '🎅🏽', '👸🏽', '🤴🏽', '👰🏽', '🤵🏽', '👼🏽', '🤰🏽', '🙇🏽‍♀️', '🙇🏽', '💁🏽', '💁🏽‍♂️', '🙅🏽', '🙅🏽‍♂️', '🙆🏽', '🙆🏽‍♂️', '🙋🏽', '🙋🏽‍♂️', '🤦🏽‍♀️', '🤦🏽‍♂️', '🤷🏽‍♀️', '🤷🏽‍♂️', '🙎🏽', '🙎🏽‍♂️', '🙍🏽', '🙍🏽‍♂️', '💇🏽', '💇🏽‍♂️', '💆🏽', '💆🏽‍♂️', '🕴🏼', '💃🏽', '🕺🏽', '🚶🏽‍♀️', '🚶🏽', '🏃🏽‍♀️', '🏃🏽', '🤲🏽', '👐🏽', '🙌🏽', '👏🏽', '🙏🏽', '👍🏽', '👎🏽', '👊🏽', '✊🏽', '🤛🏽', '🤜🏽', '🤞🏽', '✌🏽', '🤟🏽', '🤘🏽', '👌🏽', '👈🏽', '👉🏽', '👆🏽', '👇🏽', '☝🏽', '✋🏽', '🤚🏽', '🖐🏽', '🖖🏽', '👋🏽', '🤙🏽', '💪🏽', '🖕🏽', '✍🏽', '🤳🏽', '💅🏽', '👂🏽', '👃🏽']\n    },\n    {\n        title: 'Dark Brown',\n        items: ['👶🏾', '👦🏾', '👧🏾', '👨🏾', '👩🏾', '👱🏾‍♀️', '👱🏾', '👴🏾', '👵🏾', '👲🏾', '👳🏾‍♀️', '👳🏾', '👮🏾‍♀️', '👮🏾', '👷🏾‍♀️', '👷🏾', '💂🏾‍♀️', '💂🏾', '🕵🏾‍♀️', '🕵🏾', '👩🏾‍⚕️', '👨🏾‍⚕️', '👩🏾‍🌾', '👨🏾‍🌾', '👩🏾‍🍳', '👨🏾‍🍳', '👩🏾‍🎓', '👨🏾‍🎓', '👩🏾‍🎤', '👨🏾‍🎤', '👩🏾‍🏫', '👨🏾‍🏫', '👩🏾‍🏭', '👨🏾‍🏭', '👩🏾‍💻', '👨🏾‍💻', '👩🏾‍💼', '👨🏾‍💼', '👩🏾‍🔧', '👨🏾‍🔧', '👩🏾‍🔬', '👨🏾‍🔬', '👩🏾‍🎨', '👨🏾‍🎨', '👩🏾‍🚒', '👨🏾‍🚒', '👩🏾‍✈️', '👨🏾‍✈️', '👩🏾‍🚀', '👨🏾‍🚀', '👩🏾‍⚖️', '👨🏾‍⚖️', '🤶🏾', '🎅🏾', '👸🏾', '🤴🏾', '👰🏾', '🤵🏾', '👼🏾', '🤰🏾', '🙇🏾‍♀️', '🙇🏾', '💁🏾', '💁🏾‍♂️', '🙅🏾', '🙅🏾‍♂️', '🙆🏾', '🙆🏾‍♂️', '🙋🏾', '🙋🏾‍♂️', '🤦🏾‍♀️', '🤦🏾‍♂️', '🤷🏾‍♀️', '🤷🏾‍♂️', '🙎🏾', '🙎🏾‍♂️', '🙍🏾', '🙍🏾‍♂️', '💇🏾', '💇🏾‍♂️', '💆🏾', '💆🏾‍♂️', '🕴🏾', '💃🏾', '🕺🏾', '🚶🏾‍♀️', '🚶🏾', '🏃🏾‍♀️', '🏃🏾', '🤲🏾', '👐🏾', '🙌🏾', '👏🏾', '🙏🏾', '👍🏾', '👎🏾', '👊🏾', '✊🏾', '🤛🏾', '🤜🏾', '🤞🏾', '✌🏾', '🤟🏾', '🤘🏾', '👌🏾', '👈🏾', '👉🏾', '👆🏾', '👇🏾', '☝🏾', '✋🏾', '🤚🏾', '🖐🏾', '🖖🏾', '👋🏾', '🤙🏾', '💪🏾', '🖕🏾', '✍🏾', '🤳🏾', '💅🏾', '👂🏾', '👃🏾']\n    },\n    {\n        title: 'Black',\n        items: ['👶🏿', '👦🏿', '👧🏿', '👨🏿', '👩🏿', '👱🏿‍♀️', '👱🏿', '👴🏿', '👵🏿', '👲🏿', '👳🏿‍♀️', '👳🏿', '👮🏿‍♀️', '👮🏿', '👷🏿‍♀️', '👷🏿', '💂🏿‍♀️', '💂🏿', '🕵🏿‍♀️', '🕵🏿', '👩🏿‍⚕️', '👨🏿‍⚕️', '👩🏿‍🌾', '👨🏿‍🌾', '👩🏿‍🍳', '👨🏿‍🍳', '👩🏿‍🎓', '👨🏿‍🎓', '👩🏿‍🎤', '👨🏿‍🎤', '👩🏿‍🏫', '👨🏿‍🏫', '👩🏿‍🏭', '👨🏿‍🏭', '👩🏿‍💻', '👨🏿‍💻', '👩🏿‍💼', '👨🏿‍💼', '👩🏿‍🔧', '👨🏿‍🔧', '👩🏿‍🔬', '👨🏿‍🔬', '👩🏿‍🎨', '👨🏿‍🎨', '👩🏿‍🚒', '👨🏿‍🚒', '👩🏿‍✈️', '👨🏿‍✈️', '👩🏿‍🚀', '👨🏿‍🚀', '👩🏿‍⚖️', '👨🏿‍⚖️', '🤶🏿', '🎅🏿', '👸🏿', '🤴🏿', '👰🏿', '🤵🏿', '👼🏿', '🤰🏿', '🙇🏿‍♀️', '🙇🏿', '💁🏿', '💁🏿‍♂️', '🙅🏿', '🙅🏿‍♂️', '🙆🏿', '🙆🏿‍♂️', '🙋🏿', '🙋🏿‍♂️', '🤦🏿‍♀️', '🤦🏿‍♂️', '🤷🏿‍♀️', '🤷🏿‍♂️', '🙎🏿', '🙎🏿‍♂️', '🙍🏿', '🙍🏿‍♂️', '💇🏿', '💇🏿‍♂️', '💆🏿', '💆🏿‍♂️', '🕴🏿', '💃🏿', '🕺🏿', '🚶🏿‍♀️', '🚶🏿', '🏃🏿‍♀️', '🏃🏿', '🤲🏿', '👐🏿', '🙌🏿', '👏🏿', '🙏🏿', '👍🏿', '👎🏿', '👊🏿', '✊🏿', '🤛🏿', '🤜🏿', '🤞🏿', '✌🏿', '🤟🏿', '🤘🏿', '👌🏿', '👈🏿', '👉🏿', '👆🏿', '👇🏿', '☝🏿', '✋🏿', '🤚🏿', '🖐🏿', '🖖🏿', '👋🏿', '🤙🏿', '💪🏿', '🖕🏿', '✍🏿', '🤳🏿', '💅🏿', '👂🏿', '👃🏿']\n    },\n    {\n        title: 'Animals And Nature',\n        items: ['🐶', '🐱', '🐭', '🐹', '🐰', '🦊', '🦝', '🐻', '🐼', '🦘', '🦡', '🐨', '🐯', '🦁', '🐮', '🐷', '🐽', '🐸', '🐵', '🙈', '🙉', '🙊', '🐒', '🐔', '🐧', '🐦', '🐤', '🐣', '🐥', '🦆', '🦢', '🦅', '🦉', '🦚', '🦜', '🦇', '🐺', '🐗', '🐴', '🦄', '🐝', '🐛', '🦋', '🐌', '🐚', '🐞', '🐜', '🦗', '🕷', '🕸', '🦂', '🦟', '🦠', '🐢', '🐍', '🦎', '🦖', '🦕', '🐙', '🦑', '🦐', '🦀', '🐡', '🐠', '🐟', '🐬', '🐳', '🐋', '🦈', '🐊', '🐅', '🐆', '🦓', '🦍', '🐘', '🦏', '🦛', '🐪', '🐫', '🦙', '🦒', '🐃', '🐂', '🐄', '🐎', '🐖', '🐏', '🐑', '🐐', '🦌', '🐕', '🐩', '🐈', '🐓', '🦃', '🕊', '🐇', '🐁', '🐀', '🐿', '🦔', '🐾', '🐉', '🐲', '🌵', '🎄', '🌲', '🌳', '🌴', '🌱', '🌿', '☘️', '🍀', '🎍', '🎋', '🍃', '🍂', '🍁', '🍄', '🌾', '💐', '🌷', '🌹', '🥀', '🌺', '🌸', '🌼', '🌻', '🌞', '🌝', '🌛', '🌜', '🌚', '🌕', '🌖', '🌗', '🌘', '🌑', '🌒', '🌓', '🌔', '🌙', '🌎', '🌍', '🌏', '💫', '⭐️', '🌟', '✨', '⚡️', '☄️', '💥', '🔥', '🌪', '🌈', '☀️', '🌤', '⛅️', '🌥', '☁️', '🌦', '🌧', '⛈', '🌩', '🌨', '❄️', '☃️', '⛄️', '🌬', '💨', '💧', '💦', '☔️', '☂️', '🌊', '🌫']\n    },\n    {\n        title: 'Food and Drink',\n        items: ['🍏', '🍎', '🍐', '🍊', '🍋', '🍌', '🍉', '🍇', '🍓', '🍈', '🍒', '🍑', '🍍', '🥭', '🥥', '🥝', '🍅', '🍆', '🥑', '🥦', '🥒', '🥬', '🌶', '🌽', '🥕', '🥔', '🍠', '🥐', '🍞', '🥖', '🥨', '🥯', '🧀', '🥚', '🍳', '🥞', '🥓', '🥩', '🍗', '🍖', '🌭', '🍔', '🍟', '🍕', '🥪', '🥙', '🌮', '🌯', '🥗', '🥘', '🥫', '🍝', '🍜', '🍲', '🍛', '🍣', '🍱', '🥟', '🍤', '🍙', '🍚', '🍘', '🍥', '🥮', '🥠', '🍢', '🍡', '🍧', '🍨', '🍦', '🥧', '🍰', '🎂', '🍮', '🍭', '🍬', '🍫', '🍿', '🧂', '🍩', '🍪', '🌰', '🥜', '🍯', '🥛', '🍼', '☕️', '🍵', '🥤', '🍶', '🍺', '🍻', '🥂', '🍷', '🥃', '🍸', '🍹', '🍾', '🥄', '🍴', '🍽', '🥣', '🥡', '🥢']\n    },\n    {\n        title: 'Travel and Places',\n        items: ['🚗', '🚕', '🚙', '🚌', '🚎', '🏎', '🚓', '🚑', '🚒', '🚐', '🚚', '🚛', '🚜', '🛴', '🚲', '🛵', '🏍', '🚨', '🚔', '🚍', '🚘', '🚖', '🚡', '🚠', '🚟', '🚃', '🚋', '🚞', '🚝', '🚄', '🚅', '🚈', '🚂', '🚆', '🚇', '🚊', '🚉', '✈️', '🛫', '🛬', '🛩', '💺', '🛰', '🚀', '🛸', '🚁', '🛶', '⛵️', '🚤', '🛥', '🛳', '⛴', '🚢', '⚓️', '⛽️', '🚧', '🚦', '🚥', '🚏', '🗺', '🗿', '🗽', '🗼', '🏰', '🏯', '🏟', '🎡', '🎢', '🎠', '⛲️', '⛱', '🏖', '🏝', '🏜', '🌋', '⛰', '🏔', '🗻', '🏕', '⛺️', '🏠', '🏡', '🏘', '🏚', '🏗', '🏭', '🏢', '🏬', '🏣', '🏤', '🏥', '🏦', '🏨', '🏪', '🏫', '🏩', '💒', '🏛', '⛪️', '🕌', '🕍', '🕋', '⛩', '🛤', '🛣', '🗾', '🎑', '🏞', '🌅', '🌄', '🌠', '🎇', '🎆', '🌇', '🌆', '🏙', '🌃', '🌌', '🌉', '🌁']\n    },\n    {\n        title: 'Activities and Events',\n        items: ['⚽️', '🏀', '🏈', '⚾️', '🥎', '🏐', '🏉', '🎾', '🥏', '🎱', '🏓', '🏸', '🥅', '🏒', '🏑', '🥍', '🏏', '⛳️', '🏹', '🎣', '🥊', '🥋', '🎽', '⛸', '🥌', '🛷', '🛹', '🎿', '⛷', '🏂', '🏋️‍♀️', '🏋🏻‍♀️', '🏋🏼‍♀️', '🏋🏽‍♀️', '🏋🏾‍♀️', '🏋🏿‍♀️', '🏋️‍♂️', '🏋🏻‍♂️', '🏋🏼‍♂️', '🏋🏽‍♂️', '🏋🏾‍♂️', '🏋🏿‍♂️', '🤼‍♀️', '🤼‍♂️', '🤸‍♀️', '🤸🏻‍♀️', '🤸🏼‍♀️', '🤸🏽‍♀️', '🤸🏾‍♀️', '🤸🏿‍♀️', '🤸‍♂️', '🤸🏻‍♂️', '🤸🏼‍♂️', '🤸🏽‍♂️', '🤸🏾‍♂️', '🤸🏿‍♂️', '⛹️‍♀️', '⛹🏻‍♀️', '⛹🏼‍♀️', '⛹🏽‍♀️', '⛹🏾‍♀️', '⛹🏿‍♀️', '⛹️‍♂️', '⛹🏻‍♂️', '⛹🏼‍♂️', '⛹🏽‍♂️', '⛹🏾‍♂️', '⛹🏿‍♂️', '🤺', '🤾‍♀️', '🤾🏻‍♀️', '🤾🏼‍♀️', '🤾🏾‍♀️', '🤾🏾‍♀️', '🤾🏿‍♀️', '🤾‍♂️', '🤾🏻‍♂️', '🤾🏼‍♂️', '🤾🏽‍♂️', '🤾🏾‍♂️', '🤾🏿‍♂️', '🏌️‍♀️', '🏌🏻‍♀️', '🏌🏼‍♀️', '🏌🏽‍♀️', '🏌🏾‍♀️', '🏌🏿‍♀️', '🏌️‍♂️', '🏌🏻‍♂️', '🏌🏼‍♂️', '🏌🏽‍♂️', '🏌🏾‍♂️', '🏌🏿‍♂️', '🏇', '🏇🏻', '🏇🏼', '🏇🏽', '🏇🏾', '🏇🏿', '🧘‍♀️', '🧘🏻‍♀️', '🧘🏼‍♀️', '🧘🏽‍♀️', '🧘🏾‍♀️', '🧘🏿‍♀️', '🧘‍♂️', '🧘🏻‍♂️', '🧘🏼‍♂️', '🧘🏽‍♂️', '🧘🏾‍♂️', '🧘🏿‍♂️', '🏄‍♀️', '🏄🏻‍♀️', '🏄🏼‍♀️', '🏄🏽‍♀️', '🏄🏾‍♀️', '🏄🏿‍♀️', '🏄‍♂️', '🏄🏻‍♂️', '🏄🏼‍♂️', '🏄🏽‍♂️', '🏄🏾‍♂️', '🏄🏿‍♂️', '🏊‍♀️', '🏊🏻‍♀️', '🏊🏼‍♀️', '🏊🏽‍♀️', '🏊🏾‍♀️', '🏊🏿‍♀️', '🏊‍♂️', '🏊🏻‍♂️', '🏊🏼‍♂️', '🏊🏽‍♂️', '🏊🏾‍♂️', '🏊🏿‍♂️', '🤽‍♀️', '🤽🏻‍♀️', '🤽🏼‍♀️', '🤽🏽‍♀️', '🤽🏾‍♀️', '🤽🏿‍♀️', '🤽‍♂️', '🤽🏻‍♂️', '🤽🏼‍♂️', '🤽🏽‍♂️', '🤽🏾‍♂️', '🤽🏿‍♂️', '🚣‍♀️', '🚣🏻‍♀️', '🚣🏼‍♀️', '🚣🏽‍♀️', '🚣🏾‍♀️', '🚣🏿‍♀️', '🚣‍♂️', '🚣🏻‍♂️', '🚣🏼‍♂️', '🚣🏽‍♂️', '🚣🏾‍♂️', '🚣🏿‍♂️', '🧗‍♀️', '🧗🏻‍♀️', '🧗🏼‍♀️', '🧗🏽‍♀️', '🧗🏾‍♀️', '🧗🏿‍♀️', '🧗‍♂️', '🧗🏻‍♂️', '🧗🏼‍♂️', '🧗🏽‍♂️', '🧗🏾‍♂️', '🧗🏿‍♂️', '🚵‍♀️', '🚵🏻‍♀️', '🚵🏼‍♀️', '🚵🏽‍♀️', '🚵🏾‍♀️', '🚵🏿‍♀️', '🚵‍♂️', '🚵🏻‍♂️', '🚵🏼‍♂️', '🚵🏽‍♂️', '🚵🏾‍♂️', '🚵🏿‍♂️', '🚴‍♀️', '🚴🏻‍♀️', '🚴🏼‍♀️', '🚴🏽‍♀️', '🚴🏾‍♀️', '🚴🏿‍♀️', '🚴‍♂️', '🚴🏻‍♂️', '🚴🏼‍♂️', '🚴🏽‍♂️', '🚴🏾‍♂️', '🚴🏿‍♂️', '🏆', '🥇', '🥈', '🥉', '🏅', '🎖', '🏵', '🎗', '🎫', '🎟', '🎪', '🤹‍♀️', '🤹🏻‍♀️', '🤹🏼‍♀️', '🤹🏽‍♀️', '🤹🏾‍♀️', '🤹🏿‍♀️', '🤹‍♂️', '🤹🏻‍♂️', '🤹🏼‍♂️', '🤹🏽‍♂️', '🤹🏾‍♂️', '🤹🏿‍♂️', '🎭', '🎨', '🎬', '🎤', '🎧', '🎼', '🎹', '🥁', '🎷', '🎺', '🎸', '🎻', '🎲', '🧩', '♟', '🎯', '🎳', '🎮', '🎰']\n    },\n    {\n        title: 'Objects',\n        items: ['⌚️', '📱', '📲', '💻', '⌨️', '🖥', '🖨', '🖱', '🖲', '🕹', '🗜', '💽', '💾', '💿', '📀', '📼', '📷', '📸', '📹', '🎥', '📽', '🎞', '📞', '☎️', '📟', '📠', '📺', '📻', '🎙', '🎚', '🎛', '⏱', '⏲', '⏰', '🕰', '⌛️', '⏳', '📡', '🔋', '🔌', '💡', '🔦', '🕯', '🗑', '🛢', '💸', '💵', '💴', '💶', '💷', '💰', '💳', '🧾', '💎', '⚖️', '🔧', '🔨', '⚒', '🛠', '⛏', '🔩', '⚙️', '⛓', '🔫', '💣', '🔪', '🗡', '⚔️', '🛡', '🚬', '⚰️', '⚱️', '🏺', '🧭', '🧱', '🔮', '🧿', '🧸', '📿', '💈', '⚗️', '🔭', '🧰', '🧲', '🧪', '🧫', '🧬', '🧯', '🔬', '🕳', '💊', '💉', '🌡', '🚽', '🚰', '🚿', '🛁', '🛀', '🛀🏻', '🛀🏼', '🛀🏽', '🛀🏾', '🛀🏿', '🧴', '🧵', '🧶', '🧷', '🧹', '🧺', '🧻', '🧼', '🧽', '🛎', '🔑', '🗝', '🚪', '🛋', '🛏', '🛌', '🖼', '🛍', '🧳', '🛒', '🎁', '🎈', '🎏', '🎀', '🎊', '🎉', '🧨', '🎎', '🏮', '🎐', '🧧', '✉️', '📩', '📨', '📧', '💌', '📥', '📤', '📦', '🏷', '📪', '📫', '📬', '📭', '📮', '📯', '📜', '📃', '📄', '📑', '📊', '📈', '📉', '🗒', '🗓', '📆', '📅', '📇', '🗃', '🗳', '🗄', '📋', '📁', '📂', '🗂', '🗞', '📰', '📓', '📔', '📒', '📕', '📗', '📘', '📙', '📚', '📖', '🔖', '🔗', '📎', '🖇', '📐', '📏', '📌', '📍', '✂️', '🖊', '🖋', '✒️', '🖌', '🖍', '📝', '✏️', '🔍', '🔎', '🔏', '🔐', '🔒', '🔓']\n    },\n    {\n        title: 'Clothing and Accessories',\n        items: ['🧥', '👚', '👕', '👖', '👔', '👗', '👙', '👘', '👠', '👡', '👢', '👞', '👟', '🥾', '🥿', '🧦', '🧤', '🧣', '🎩', '🧢', '👒', '🎓', '⛑', '👑', '👝', '👛', '👜', '💼', '🎒', '👓', '🕶', '🥽', '🥼', '🌂', '🧵', '🧶']\n    },\n    {\n        title: 'Symbols',\n        items: ['❤️', '🧡', '💛', '💚', '💙', '💜', '🖤', '💔', '❣️', '💕', '💞', '💓', '💗', '💖', '💘', '💝', '💟', '☮️', '✝️', '☪️', '🕉', '☸️', '✡️', '🔯', '🕎', '☯️', '☦️', '🛐', '⛎', '♈️', '♉️', '♊️', '♋️', '♌️', '♍️', '♎️', '♏️', '♐️', '♑️', '♒️', '♓️', '🆔', '⚛️', '🉑', '☢️', '☣️', '📴', '📳', '🈶', '🈚️', '🈸', '🈺', '🈷️', '✴️', '🆚', '💮', '🉐', '㊙️', '㊗️', '🈴', '🈵', '🈹', '🈲', '🅰️', '🅱️', '🆎', '🆑', '🅾️', '🆘', '❌', '⭕️', '🛑', '⛔️', '📛', '🚫', '💯', '💢', '♨️', '🚷', '🚯', '🚳', '🚱', '🔞', '📵', '🚭', '❗️', '❕', '❓', '❔', '‼️', '⁉️', '🔅', '🔆', '〽️', '⚠️', '🚸', '🔱', '⚜️', '🔰', '♻️', '✅', '🈯️', '💹', '❇️', '✳️', '❎', '🌐', '💠', 'Ⓜ️', '🌀', '💤', '🏧', '🚾', '♿️', '🅿️', '🈳', '🈂️', '🛂', '🛃', '🛄', '🛅', '🚹', '🚺', '🚼', '🚻', '🚮', '🎦', '📶', '🈁', '🔣', 'ℹ️', '🔤', '🔡', '🔠', '🆖', '🆗', '🆙', '🆒', '🆕', '🆓', '0️⃣', '1️⃣', '2️⃣', '3️⃣', '4️⃣', '5️⃣', '6️⃣', '7️⃣', '8️⃣', '9️⃣', '🔟', '🔢', '#️⃣', '*️⃣', '⏏️', '▶️', '⏸', '⏯', '⏹', '⏺', '⏭', '⏮', '⏩', '⏪', '⏫', '⏬', '◀️', '🔼', '🔽', '➡️', '⬅️', '⬆️', '⬇️', '↗️', '↘️', '↙️', '↖️', '↕️', '↔️', '↪️', '↩️', '⤴️', '⤵️', '🔀', '🔁', '🔂', '🔄', '🔃', '🎵', '🎶', '➕', '➖', '➗', '✖️', '♾', '💲', '💱', '™️', '©️', '®️', '〰️', '➰', '➿', '🔚', '🔙', '🔛', '🔝', '🔜', '✔️', '☑️', '🔘', '⚪️', '⚫️', '🔴', '🔵', '🔺', '🔻', '🔸', '🔹', '🔶', '🔷', '🔳', '🔲', '▪️', '▫️', '◾️', '◽️', '◼️', '◻️', '⬛️', '⬜️', '🔈', '🔇', '🔉', '🔊', '🔔', '🔕', '📣', '📢', '👁‍🗨', '💬', '💭', '🗯', '♠️', '♣️', '♥️', '♦️', '🃏', '🎴', '🀄️', '🕐', '🕑', '🕒', '🕓', '🕔', '🕕', '🕖', '🕗', '🕘', '🕙', '🕚', '🕛', '🕜', '🕝', '🕞', '🕟', '🕠', '🕡', '🕢', '🕣', '🕤', '🕥', '🕦', '🕧']\n    },\n    {\n        title: 'Flags',\n        items: ['🏳️', '🏴', '🏁', '🚩', '🏳️‍🌈', '🏴‍☠️', '🇦🇫', '🇦🇽', '🇦🇱', '🇩🇿', '🇦🇸', '🇦🇩', '🇦🇴', '🇦🇮', '🇦🇶', '🇦🇬', '🇦🇷', '🇦🇲', '🇦🇼', '🇦🇺', '🇦🇹', '🇦🇿', '🇧🇸', '🇧🇭', '🇧🇩', '🇧🇧', '🇧🇾', '🇧🇪', '🇧🇿', '🇧🇯', '🇧🇲', '🇧🇹', '🇧🇴', '🇧🇦', '🇧🇼', '🇧🇷', '🇮🇴', '🇻🇬', '🇧🇳', '🇧🇬', '🇧🇫', '🇧🇮', '🇰🇭', '🇨🇲', '🇨🇦', '🇮🇨', '🇨🇻', '🇧🇶', '🇰🇾', '🇨🇫', '🇹🇩', '🇨🇱', '🇨🇳', '🇨🇽', '🇨🇨', '🇨🇴', '🇰🇲', '🇨🇬', '🇨🇩', '🇨🇰', '🇨🇷', '🇨🇮', '🇭🇷', '🇨🇺', '🇨🇼', '🇨🇾', '🇨🇿', '🇩🇰', '🇩🇯', '🇩🇲', '🇩🇴', '🇪🇨', '🇪🇬', '🇸🇻', '🇬🇶', '🇪🇷', '🇪🇪', '🇪🇹', '🇪🇺', '🇫🇰', '🇫🇴', '🇫🇯', '🇫🇮', '🇫🇷', '🇬🇫', '🇵🇫', '🇹🇫', '🇬🇦', '🇬🇲', '🇬🇪', '🇩🇪', '🇬🇭', '🇬🇮', '🇬🇷', '🇬🇱', '🇬🇩', '🇬🇵', '🇬🇺', '🇬🇹', '🇬🇬', '🇬🇳', '🇬🇼', '🇬🇾', '🇭🇹', '🇭🇳', '🇭🇰', '🇭🇺', '🇮🇸', '🇮🇳', '🇮🇩', '🇮🇷', '🇮🇶', '🇮🇪', '🇮🇲', '🇮🇱', '🇮🇹', '🇯🇲', '🇯🇵', '🎌', '🇯🇪', '🇯🇴', '🇰🇿', '🇰🇪', '🇰🇮', '🇽🇰', '🇰🇼', '🇰🇬', '🇱🇦', '🇱🇻', '🇱🇧', '🇱🇸', '🇱🇷', '🇱🇾', '🇱🇮', '🇱🇹', '🇱🇺', '🇲🇴', '🇲🇰', '🇲🇬', '🇲🇼', '🇲🇾', '🇲🇻', '🇲🇱', '🇲🇹', '🇲🇭', '🇲🇶', '🇲🇷', '🇲🇺', '🇾🇹', '🇲🇽', '🇫🇲', '🇲🇩', '🇲🇨', '🇲🇳', '🇲🇪', '🇲🇸', '🇲🇦', '🇲🇿', '🇲🇲', '🇳🇦', '🇳🇷', '🇳🇵', '🇳🇱', '🇳🇨', '🇳🇿', '🇳🇮', '🇳🇪', '🇳🇬', '🇳🇺', '🇳🇫', '🇰🇵', '🇲🇵', '🇳🇴', '🇴🇲', '🇵🇰', '🇵🇼', '🇵🇸', '🇵🇦', '🇵🇬', '🇵🇾', '🇵🇪', '🇵🇭', '🇵🇳', '🇵🇱', '🇵🇹', '🇵🇷', '🇶🇦', '🇷🇪', '🇷🇴', '🇷🇺', '🇷🇼', '🇼🇸', '🇸🇲', '🇸🇦', '🇸🇳', '🇷🇸', '🇸🇨', '🇸🇱', '🇸🇬', '🇸🇽', '🇸🇰', '🇸🇮', '🇬🇸', '🇸🇧', '🇸🇴', '🇿🇦', '🇰🇷', '🇸🇸', '🇪🇸', '🇱🇰', '🇧🇱', '🇸🇭', '🇰🇳', '🇱🇨', '🇵🇲', '🇻🇨', '🇸🇩', '🇸🇷', '🇸🇿', '🇸🇪', '🇨🇭', '🇸🇾', '🇹🇼', '🇹🇯', '🇹🇿', '🇹🇭', '🇹🇱', '🇹🇬', '🇹🇰', '🇹🇴', '🇹🇹', '🇹🇳', '🇹🇷', '🇹🇲', '🇹🇨', '🇹🇻', '🇻🇮', '🇺🇬', '🇺🇦', '🇦🇪', '🇬🇧', '🏴󠁧󠁢󠁥󠁮󠁧󠁿', '🏴󠁧󠁢󠁳󠁣󠁴󠁿', '🏴󠁧󠁢󠁷󠁬󠁳󠁿', '🇺🇳', '🇺🇸', '🇺🇾', '🇺🇿', '🇻🇺', '🇻🇦', '🇻🇪', '🇻🇳', '🇼🇫', '🇪🇭', '🇾🇪', '🇿🇲', '🇿🇼']\n    },\n    {\n        title: 'New',\n        items: ['🥱', '🤏', '🦾', '🦿', '🦻', '🧏', '🧏‍♂️', '🧏‍♀️', '🧍', '🧍‍♂️', '🧍‍♀️', '🧎', '🧎‍♂️', '🧎‍♀️', '👨‍🦯', '👩‍🦯', '👨‍🦼', '👩‍🦼', '👨‍🦽', '👩‍🦽', '🦧', '🦮', '🐕‍🦺', '🦥', '🦦', '🦨', '🦩', '🧄', '🧅', '🧇', '🧆', '🧈', '🦪', '🧃', '🧉', '🧊', '🛕', '🦽', '🦼', '🛺', '🪂', '🪐', '🤿', '🪀', '🪁', '🦺', '🥻', '🩱', '🩲', '🩳', '🩰', '🪕', '🪔', '🪓', '🦯', '🩸', '🩹', '🩺', '🪑', '🪒', '🤎', '🤍', '🟠', '🟡', '🟢', '🟣', '🟤', '🟥', '🟧', '🟨', '🟩', '🟦', '🟪', '🟫']\n    }\n];\n\nexport interface EmojiListProps {\n    onClick?: (emoji: string) => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    group: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(auto-fill, 32px)'\n    },\n    item: {\n        fontSize: theme.spacing(3),\n        cursor: 'pointer',\n    }\n}));\n\nfunction EmojiList({ onClick }: EmojiListProps) {\n    const classes = useStyles();\n\n    const renderItem = (emoji: string) => (\n        <span\n            className={classes.item}\n            role=\"button\"\n            onClick={() => onClick && onClick(emoji)}\n        >\n            {emoji}\n        </span>\n    );\n\n    const renderGroup = (emojiGroup: EmojiGroup) => (\n        <div>\n            <Toolbar\n                variant=\"dense\"\n                disableGutters\n            >\n                <Typography\n                    variant=\"overline\"\n                >\n                    {emojiGroup.title}\n                </Typography>\n            </Toolbar>\n            <Container disableGutters>\n                <div className={classes.group}>\n                    {emojiGroup.items.map(renderItem)}\n                </div>\n            </Container>\n        </div>\n    );\n\n    return (\n        <div>\n            {emojiGroups.map(renderGroup)}\n        </div>\n    )\n}\n\nexport default EmojiList;\n","import React, {useState} from \"react\";\nimport {createStyles, Theme, Toolbar} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {AttachFile, InsertEmoticon, Send} from \"@material-ui/icons\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport EmojiList from \"./EmojiList\";\nimport Container from \"@material-ui/core/Container\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport interface SendMessageToolbarProps {\n    onSubmit?: (message: string) => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {},\n    messageField: {\n        marginTop: theme.spacing(1.5),\n        marginBottom: theme.spacing(1.5),\n        flex: 'auto'\n    },\n    sendButton: {\n        marginLeft: theme.spacing(1)\n    },\n    emojiList: {\n        maxHeight: 140,\n        overflow: 'auto'\n    }\n}));\n\nconst ENTER_KEY_CODE = 13;\n\nfunction SendMessageToolbar({ onSubmit }: SendMessageToolbarProps) {\n    const classes = useStyles();\n    const [emojiOpen, setEmojiOpen] = useState<boolean>(false);\n    const [message, setMessage] = useState<string>('');\n    const handleEmojiOpen = () => setEmojiOpen(!emojiOpen);\n    const handleSubmit = () => {\n        onSubmit && onSubmit(message);\n        setMessage('');\n        setEmojiOpen(false);\n    };\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => setMessage(event.target.value);\n    const handleKeyDown = (event: React.KeyboardEvent) => {\n        const { keyCode, ctrlKey } = event;\n        if (keyCode === ENTER_KEY_CODE && ctrlKey) {\n            setMessage(message + '\\n');\n        } else if (message && keyCode === ENTER_KEY_CODE) {\n            event.preventDefault();\n            handleSubmit();\n        }\n    };\n\n    const sendButton = (\n        <Tooltip\n            title=\"Send\"\n        >\n            <span>\n                <IconButton\n                    className={classes.sendButton}\n                    edge=\"end\"\n                    color=\"primary\"\n                    disabled={!message}\n                    onClick={handleSubmit}\n                >\n                    <Send />\n                </IconButton>\n            </span>\n        </Tooltip>\n    );\n\n    const startAdornment = (\n        <InputAdornment position=\"start\">\n            <Tooltip title=\"Insert emoticon\">\n                <IconButton\n                    edge=\"start\"\n                    size=\"small\"\n                    color={emojiOpen ? 'primary' : 'default'}\n                    onClick={handleEmojiOpen}\n                >\n                    <InsertEmoticon />\n                </IconButton>\n            </Tooltip>\n        </InputAdornment>\n    );\n\n    const endAdornment = (\n        <InputAdornment position=\"end\">\n            <Tooltip title=\"Attach file\">\n                <IconButton\n                    edge=\"end\"\n                    size=\"small\"\n                    component=\"label\"\n                    htmlFor=\"attach-file\"\n                >\n                    <AttachFile />\n                </IconButton>\n            </Tooltip>\n            <input\n                id=\"attach-file\"\n                type=\"file\"\n                hidden\n            />\n        </InputAdornment>\n    );\n\n    const messageField = (\n        <div className={classes.messageField}>\n            <TextField\n                value={message}\n                onKeyDown={handleKeyDown}\n                onChange={handleChange}\n                multiline\n                autoFocus={false}\n                rowsMax={3}\n                variant=\"outlined\"\n                size=\"small\"\n                placeholder=\"Enter message\"\n                InputProps={{\n                    startAdornment,\n                    endAdornment\n                }}\n                fullWidth\n            />\n        </div>\n    );\n\n    const emojiList = emojiOpen && (\n        <Container className={classes.emojiList}>\n            <EmojiList\n                onClick={emoji => setMessage(message + emoji)}\n            />\n        </Container>\n    );\n\n    return (\n        <div className={classes.root}>\n            {emojiList}\n            <Toolbar>\n                {messageField}\n                {sendButton}\n            </Toolbar>\n        </div>\n    )\n}\n\nexport default SendMessageToolbar;\n","import React from \"react\";\nimport {AvatarProps, createStyles, ListItem, ListItemTextProps, Theme} from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {NavLink} from \"react-router-dom\";\nimport Badge from \"@material-ui/core/Badge\";\nimport {InfoOutlined} from \"@material-ui/icons\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MessageReadStatus, {MessageReadStatusProps} from \"../MessageList/MessageReadStatus\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nexport interface ContactListItemProps {\n    avatarSrc: AvatarProps['src'];\n    fullName: ListItemTextProps['primary'];\n    lastMessage?: {\n        text: ListItemTextProps['secondary'];\n        delivered: MessageReadStatusProps['delivered'];\n        read: MessageReadStatusProps['read'];\n        createdAt: Date;\n    };\n    isOnline: boolean;\n    to?: string;\n    toProfile?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    messageText: {\n        display: 'block',\n        alignItems: 'center',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n    }\n}));\n\nfunction ContactListItem({\n    avatarSrc,\n    fullName,\n    lastMessage,\n    isOnline,\n    to,\n    toProfile\n}: ContactListItemProps) {\n    const classes = useStyles();\n\n    const listItemSecondaryAction = toProfile ? (\n        <ListItemSecondaryAction>\n            <Tooltip\n                title=\"ProfilePage\"\n                placement=\"left\"\n            >\n                <IconButton\n                    component={NavLink}\n                    to={toProfile}\n                >\n                    <InfoOutlined/>\n                </IconButton>\n            </Tooltip>\n        </ListItemSecondaryAction>\n    ) : null;\n\n    const secondaryText = lastMessage ? (\n        <span className={classes.messageText}>\n            <MessageReadStatus\n                delivered={lastMessage.delivered}\n                read={lastMessage.read}\n                gutterRight\n            />\n            {lastMessage.text}\n        </span>\n    ) : null;\n\n    return (\n        <ListItem\n            button\n            component={NavLink}\n            activeClassName=\"Mui-selected\"\n            to={to || '/'}\n        >\n            <ListItemAvatar>\n                <Badge\n                    variant=\"dot\"\n                    overlap=\"circle\"\n                    anchorOrigin={{\n                        horizontal: 'right',\n                        vertical: 'bottom'\n                    }}\n                    color=\"primary\"\n                    invisible={!isOnline}\n                >\n                    <Avatar\n                        src={avatarSrc}\n                    />\n                </Badge>\n            </ListItemAvatar>\n            <ListItemText\n                primary={fullName}\n                secondary={secondaryText}\n            />\n            {listItemSecondaryAction}\n        </ListItem>\n    )\n}\n\nexport default ContactListItem;\n","import React, {Key} from \"react\";\nimport ContactListItem, {ContactListItemProps} from \"./ContactListItem\";\nimport ListView from \"../ListView\";\n\nexport interface ContactListProps {\n    itemCount: number;\n    getItem: (index: number) => ContactListItemProps;\n    getItemKey?: (index: number) => Key;\n}\n\nfunction ContactList({\n    itemCount,\n    getItem,\n    getItemKey\n}: ContactListProps) {\n    const renderItem = (index: number) => {\n        const itemProps = getItem(index);\n        const itemKey = getItemKey ? getItemKey(index) : index;\n        return (\n            <ContactListItem\n                key={itemKey}\n                {...itemProps}\n            />\n        )\n    };\n\n    return (\n        <ListView\n            itemCount={itemCount}\n            renderItem={renderItem}\n        />\n    )\n}\n\nexport default ContactList;\n","import React, {useEffect} from \"react\";\nimport ContactList from \"../../common/components/ContactList/ContactList\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {contactsRequest, selectContacts, selectFoundContacts} from \"./contactsSlice\";\nimport {Contact} from \"./Contact\";\nimport {ContactListItemProps} from \"../../common/components/ContactList/ContactListItem\";\nimport {CHAT_ROUTE_PATH} from \"../chat/ChatPage\";\nimport ErrorMessage from \"../../common/components/layout/ErrorMessage\";\nimport Loading from \"../../common/components/layout/Loading\";\nimport Empty from \"../../common/components/layout/Empty\";\n\nexport const mapContactToItemProps = (contact: Contact): ContactListItemProps => {\n    const to = CHAT_ROUTE_PATH.replace(':id', contact.id);\n    return {\n        fullName: `${contact.firstName} ${contact.lastName}`,\n        avatarSrc: contact.avatarUrl,\n        lastMessage: {\n            text: contact.lastMessage.text,\n            delivered: contact.lastMessage.delivered,\n            read: contact.lastMessage.read,\n            createdAt: contact.lastMessage.createdAt\n        },\n        isOnline: contact.isOnline,\n        toProfile: to + '/profile',\n        to\n    }\n};\n\nfunction ContactListContainer() {\n    const contacts = useSelector(selectFoundContacts);\n    const {error, loading} = useSelector(selectContacts);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const action = contactsRequest();\n        dispatch(action);\n    }, [dispatch]);\n\n    if (loading) return <Loading/>;\n    if (error) return <ErrorMessage/>;\n    if (!contacts.length) return <Empty/>;\n\n    return (\n        <ContactList\n            itemCount={contacts.length}\n            getItemKey={index => contacts[index].id}\n            getItem={index => mapContactToItemProps(contacts[index])}\n        />\n    )\n}\n\nexport default ContactListContainer;\n","import React from 'react';\nimport SwitchListItem from \"../../common/components/SwitchListItem\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectSettings, enableDarkTheme} from \"./settingsSlice\";\n\nfunction DarkThemeSwitch() {\n    const {darkThemeEnabled} = useSelector(selectSettings);\n    const dispatch = useDispatch();\n    const handleChange = (checked: boolean) => dispatch(enableDarkTheme(checked));\n\n    return (\n        <SwitchListItem\n            primary=\"Dark theme\"\n            checked={darkThemeEnabled}\n            onChange={handleChange}\n        />\n    );\n}\n\nexport default DarkThemeSwitch;\n","import React from 'react';\nimport {List} from \"@material-ui/core\";\nimport DarkThemeSwitch from \"./DarkThemeSwitch\";\n\nexport interface SettingListProps {}\n\nfunction SettingList(props: SettingListProps) {\n    return (\n        <List>\n            <DarkThemeSwitch/>\n        </List>\n    );\n}\n\nexport default SettingList;\n","import React from 'react';\nimport SettingList from \"../SettingList\";\nimport View from \"../../../common/components/layout/View\";\nimport LayoutToolbar from \"../../../common/components/layout/LayoutToolbar\";\n\nexport interface SettingsProps {}\n\nfunction SettingsPage(props: SettingsProps) {\n    const toolbar = (\n        <LayoutToolbar\n            title=\"SettingsPage\"\n        />\n    );\n\n    return (\n        <View\n            toolbar={toolbar}\n        >\n            <SettingList/>\n        </View>\n    )\n}\n\nexport default SettingsPage;\n","import SettingsPage from \"./SettingsPage\";\n\nexport const SETTINGS_ROUTE_PATH = '/settings';\n\nexport default SettingsPage;\n","import React, {ChangeEvent, useState} from \"react\";\nimport {Grid} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectAuth, updateProfile} from \"../../../features/auth/authSlice\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport {UserProfile} from \"../../../features/auth/AuthUser\";\n\nexport interface EditProfileProps {}\n\ntype FieldName = 'firstName' | 'lastName' | 'avatarUrl' | 'email' | 'phoneNumber' | 'bio' | 'dateOfBirth';\n\nfunction EditProfile(props: EditProfileProps) {\n    const {user} = useSelector(selectAuth);\n    const dispatch = useDispatch();\n    const [profile, setProfile] = useState<UserProfile>({\n        firstName: user?.firstName,\n        lastName: user?.lastName,\n        avatarUrl: user?.avatarUrl,\n        email: user?.email,\n        phoneNumber: user?.phoneNumber,\n        bio: user?.bio,\n        dateOfBirth: user?.dateOfBirth\n    });\n    const getChangeHandler = (fieldName: FieldName) => (event: ChangeEvent<HTMLInputElement>) => setProfile({\n        ...profile,\n        [fieldName]: event.target.value\n    });\n\n    return (\n        <form onSubmit={event => {\n            event.preventDefault();\n            const action = updateProfile(profile);\n            dispatch(action);\n        }}>\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <TextField\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Avatar\"\n                        value={profile.avatarUrl}\n                        onChange={getChangeHandler('avatarUrl')}\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <Avatar\n                                        style={{width: 24, height: 24}}\n                                        src={user?.avatarUrl}\n                                    />\n                                </InputAdornment>\n                            ),\n                            endAdornment: (\n                                <InputAdornment position=\"end\">\n                                    <Button\n                                        variant=\"text\"\n                                        size=\"small\"\n                                        component=\"label\"\n                                        htmlFor=\"avatar\"\n                                        disabled={true}\n                                    >\n                                        Choose\n                                    </Button>\n                                </InputAdornment>\n                            ),\n                            readOnly: true\n                        }}\n                        fullWidth\n                    />\n                    <input\n                        id=\"avatar\"\n                        name=\"avatarUrl\"\n                        type=\"file\"\n                        hidden\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        name=\"firstName\"\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"First Name\"\n                        required\n                        value={profile.firstName}\n                        onChange={getChangeHandler('firstName')}\n                        fullWidth\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        name=\"lastName\"\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Last Name\"\n                        required\n                        value={profile.lastName}\n                        onChange={getChangeHandler('lastName')}\n                        fullWidth\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        name=\"dateOfBirth\"\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Date of Birth\"\n                        type=\"date\"\n                        disabled={true}\n                        InputLabelProps={{\n                            shrink: true\n                        }}\n                        required\n                        value={profile.dateOfBirth?.toISOString().split('T')[0]}\n                        //onChange={getChangeHandler('dateOfBirth')}\n                        fullWidth\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        name=\"bio\"\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Bio\"\n                        placeholder=\"A few words about yourself\"\n                        required\n                        value={profile.bio}\n                        onChange={getChangeHandler('bio')}\n                        fullWidth\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        name=\"email\"\n                        type=\"email\"\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Email\"\n                        required\n                        value={profile.email}\n                        onChange={getChangeHandler('email')}\n                        fullWidth\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        name=\"phoneNumber\"\n                        variant=\"outlined\"\n                        size=\"small\"\n                        label=\"Phone number\"\n                        required\n                        value={profile.phoneNumber}\n                        onChange={getChangeHandler('phoneNumber')}\n                        fullWidth\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        type=\"submit\"\n                    >\n                        Save\n                    </Button>\n                </Grid>\n            </Grid>\n        </form>\n    );\n}\n\nexport default EditProfile;\n","import React from 'react';\nimport View from \"../../../common/components/layout/View\";\nimport EditProfile from \"../../../common/components/forms/EditProfile\";\nimport LayoutToolbar from \"../../../common/components/layout/LayoutToolbar\";\nimport {Container, createStyles, Theme} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nexport interface ProfileProps {}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    content: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    }\n}));\n\nfunction ProfilePage(props: ProfileProps) {\n    const classes = useStyles();\n    const toolbar = (\n        <LayoutToolbar\n            title=\"Edit ProfilePage\"\n        />\n    );\n\n    const content = (\n        <Container\n            className={classes.content}\n            maxWidth=\"xs\"\n        >\n            <EditProfile/>\n        </Container>\n    );\n\n    return (\n        <View\n            toolbar={toolbar}\n        >\n            {content}\n        </View>\n    );\n}\n\nexport default ProfilePage;\n","import ProfilePage from \"./ProfilePage\";\n\nexport const PROFILE_ROUTE_PATH = '/profile';\n\nexport default ProfilePage;\n","import React from 'react';\nimport ContactList from \"../ContactList\";\nimport ToolbarListItem from \"../../../common/components/ToolbarListItem\";\nimport {Add, Settings} from \"@material-ui/icons\";\nimport {createStyles, Fab, IconButton, Theme} from \"@material-ui/core\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport {NavLink} from \"react-router-dom\";\nimport {SETTINGS_ROUTE_PATH} from \"../../settings/SettingsPage\";\nimport {PROFILE_ROUTE_PATH} from \"../../auth/ProfilePage\";\nimport View from \"../../../common/components/layout/View\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectAuth} from \"../../auth/authSlice\";\nimport {addOneContact, contactsSearchQuery} from '../contactsSlice';\nimport ErrorMessage from \"../../../common/components/layout/ErrorMessage\";\nimport Loading from \"../../../common/components/layout/Loading\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {generateContact} from \"../generateContact\";\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        position: 'relative'\n    },\n    fab: {\n        position: 'absolute',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2)\n    }\n}));\n\nfunction ContactsPage() {\n    const classes = useStyles();\n    const { error, loading, user } = useSelector(selectAuth);\n    const dispatch = useDispatch();\n\n    if (loading || !user) return <Loading />;\n    if (error) return <ErrorMessage/>;\n\n    const settingsButton = (\n        <Tooltip title=\"SettingsPage\">\n            <IconButton\n                edge=\"end\"\n                component={NavLink}\n                to={SETTINGS_ROUTE_PATH}\n            >\n                <Settings/>\n            </IconButton>\n        </Tooltip>\n    );\n\n    const handleSearch = (value: string) => {\n        const action = contactsSearchQuery(value);\n        dispatch(action);\n    };\n\n    const handleReset = () => {\n        const action = contactsSearchQuery('');\n        dispatch(action);\n    };\n\n    const statusText = user.isOnline\n        ? (\n            <Typography\n                variant=\"inherit\"\n                color=\"primary\"\n            >\n                Online\n            </Typography>\n        )\n        : 'Offline';\n    const toolbar = (\n        <ToolbarListItem\n            primary={`${user.firstName} ${user.lastName}`}\n            secondary={statusText}\n            avatarSrc={user.avatarUrl}\n            avatarTo={PROFILE_ROUTE_PATH}\n            endAction={settingsButton}\n            SearchInputBaseProps={{\n                placeholder: 'Search contacts',\n                onChange: handleSearch,\n                onClear: handleReset,\n                onBack: handleReset\n            }}\n        />\n    );\n\n    const addButton = (\n        <Fab\n            className={classes.fab}\n            color=\"primary\"\n            onClick={() => {\n                const contact = generateContact();\n                const action = addOneContact(contact);\n                dispatch(action);\n            }}\n        >\n            <Add/>\n        </Fab>\n    );\n\n    return (\n        <View\n            toolbar={toolbar}\n            className={classes.root}\n        >\n            <ContactList/>\n            {addButton}\n        </View>\n    )\n}\n\nexport default ContactsPage;\n","import ContactsPage from \"./ContactsPage\";\n\nexport const CONTACTS_ROUTE_PATH = '/contacts';\n\nexport default ContactsPage;\n","import React from \"react\";\nimport formatDistance from \"date-fns/formatDistance\";\nimport MessageList from \"../../messages/MessageList\";\nimport ToolbarListItem from \"../../../common/components/ToolbarListItem\";\nimport {useParams, Link, Redirect} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {createStyles, IconButton, Theme, useMediaQuery, useTheme} from \"@material-ui/core\";\nimport {Attachment, Delete} from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport View from \"../../../common/components/layout/View\";\nimport {getContactByIdSelector} from \"../../contacts/contactsSlice\";\nimport {\n    switchMessagesCheckMode,\n    messagesSearchQuery,\n    selectChatById,\n    removeMessagesSuccess,\n    addMessageRequest\n} from \"../chatsSlice\";\nimport PopoverAction from \"../../../common/components/PopoverAction\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {CONTACT_PROFILE_ROUTE_PATH} from \"../../contacts/ContactProfilePage\";\nimport {CHAT_ATTACHMENTS_ROUTE_PATH} from \"../../attachments/AttachmentsPage\";\nimport MenuListItem from \"../../../common/components/MenuListItem\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport SendMessageToolbar from \"../../../common/components/SendMessageToolbar\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {CONTACTS_ROUTE_PATH} from \"../../contacts/ContactsPage\";\nimport BackButton from \"../../../common/components/layout/BackButton\";\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    cancelButton: {\n        marginLeft: theme.spacing(1)\n    }\n}));\n\nfunction ChatPage() {\n    const classes = useStyles();\n    const { id: chatId = '' } = useParams();\n    const theme = useTheme();\n    const isBreakpointSm = useMediaQuery(theme.breakpoints.down('sm'));\n    const { searchQuery, checkedIds, checkModeEnabled, prints } = useSelector(selectChatById(chatId));\n    const selectContact = getContactByIdSelector(chatId);\n    const contact = useSelector(selectContact);\n    const dispatch = useDispatch();\n    const removeAllMessages = () => {\n        const action = removeMessagesSuccess({chatId});\n        dispatch(action);\n    };\n    const switchCheckMode = () => {\n        const action = switchMessagesCheckMode({chatId});\n        dispatch(action);\n    };\n    if (!chatId || !contact) return <Redirect to=\"/\"/>;\n\n    const renderPopover = (onClose: VoidFunction) => (\n        <List>\n            <MenuListItem\n                primary={checkModeEnabled ? 'Cancel select' : 'Select messages'}\n                onClick={() => {\n                    switchCheckMode();\n                    onClose();\n                }}\n            />\n            <MenuListItem\n                primary=\"Clear chat\"\n                onClick={() => {\n                    removeAllMessages();\n                    onClose();\n                }}\n            />\n        </List>\n    );\n\n    const endAction = (\n        <>\n            <Tooltip title=\"AttachmentsPage\">\n                <IconButton\n                    component={Link}\n                    to={CHAT_ATTACHMENTS_ROUTE_PATH.replace(':id', chatId)}\n                >\n                    <Attachment/>\n                </IconButton>\n            </Tooltip>\n            <PopoverAction\n                renderPopover={renderPopover}\n            />\n        </>\n    );\n\n    const handleSearch = (value: string) => {\n        const action = messagesSearchQuery({\n            chatId,\n            searchQuery: value\n        });\n        dispatch(action);\n    };\n\n    const handleReset = () => {\n        const action = messagesSearchQuery({\n            chatId,\n            searchQuery: ''\n        });\n        dispatch(action);\n    };\n\n    const statusText = contact?.isOnline\n        ? (\n            <Typography\n                variant=\"inherit\"\n                color=\"primary\"\n            >\n                Online\n            </Typography>\n        )\n        : formatDistance(new Date(), contact?.lastVisitAt);\n\n    const pathToProfile = CONTACT_PROFILE_ROUTE_PATH.replace(':id', chatId);\n    const backButton = isBreakpointSm ? (\n        <BackButton\n            onClick={history => history.push(CONTACTS_ROUTE_PATH)}\n        />\n    ) : null;\n\n    const toolbar = (\n        <ToolbarListItem\n            avatarSrc={contact?.avatarUrl}\n            avatarTo={pathToProfile}\n            primary={`${contact?.firstName} ${contact?.lastName}`}\n            secondary={prints ? 'Prints...' : statusText}\n            startAction={backButton}\n            endAction={endAction}\n            SearchInputBaseProps={{\n                placeholder: 'Search messages',\n                onChange: handleSearch,\n                onClear: handleReset,\n                onBack: handleReset,\n                initialValue: searchQuery\n            }}\n        />\n    );\n\n    const handleRemove = () => {\n        const action = removeMessagesSuccess({\n            chatId,\n            messageIds: checkedIds\n        });\n        dispatch(action);\n    };\n\n    const footer = checkModeEnabled ? (\n        <Toolbar>\n            <Button\n                disabled={!checkedIds.length}\n                onClick={handleRemove}\n                startIcon={<Delete/>}\n                variant=\"outlined\"\n                color=\"secondary\"\n            >\n                Remove\n            </Button>\n            <Button\n                className={classes.cancelButton}\n                onClick={switchCheckMode}\n            >\n                Cancel\n            </Button>\n        </Toolbar>\n    ) : (\n        <SendMessageToolbar\n            onSubmit={messageText => {\n                messageText = messageText.trim();\n                if (!messageText) return;\n                const action = addMessageRequest({chatId, messageText});\n                dispatch(action);\n            }}\n        />\n    );\n\n    return (\n        <View\n            toolbar={toolbar}\n            footer={footer}\n            needScrollBottom={!checkModeEnabled}\n        >\n            <Container\n                disableGutters\n                maxWidth=\"md\"\n            >\n                <MessageList\n                    chatId={chatId}\n                />\n            </Container>\n        </View>\n    );\n}\n\nexport default ChatPage;\n","import React, {Component} from \"react\";\nimport ErrorMessage from \"./ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    };\n\n    componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\n        this.setState({error: true});\n    }\n\n    render() {\n        if (this.state.error) return <ErrorMessage/>;\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;\n","import React, {PropsWithChildren, ReactNode} from \"react\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport {createStyles, Theme, TypographyProps} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nexport type LayoutProps = PropsWithChildren<{\n    title?: TypographyProps['children'];\n    leftSide?: ReactNode;\n    rightSide?: ReactNode;\n}>\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%'\n    },\n    content: {\n        display: 'flex',\n        height: '100%'\n    },\n    leftSide: {\n        minWidth: 360,\n        maxWidth: 360,\n        overflow: 'auto',\n        borderRightWidth: 1,\n        borderRightStyle: 'solid',\n        borderRightColor: theme.palette.divider,\n    },\n    rightSide: {\n        minWidth: 360,\n        maxWidth: 360,\n        overflow: 'auto',\n        borderLeftWidth: 1,\n        borderLeftStyle: 'solid',\n        borderLeftColor: theme.palette.divider,\n    },\n    main: {\n        flex: 'auto',\n        overflow: 'auto'\n    },\n    appTitle: {\n        marginRight: 'auto',\n        textDecoration: 'none'\n    },\n    avatar: {\n        width: theme.spacing(4),\n        height: theme.spacing(4)\n    }\n}));\n\nfunction Layout(props: LayoutProps) {\n    const classes = useStyles();\n\n    const leftSide = props.leftSide && (\n        <aside className={classes.leftSide}>\n            {props.leftSide}\n        </aside>\n    );\n\n    const rightSide = props.rightSide && (\n        <aside className={classes.rightSide}>\n            {props.rightSide}\n        </aside>\n    );\n\n    const main = (\n        <ErrorBoundary>\n            <main className={classes.main}>\n                {props.children}\n            </main>\n        </ErrorBoundary>\n    );\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.content}>\n                {leftSide}\n                {main}\n                {rightSide}\n            </div>\n        </div>\n    )\n}\n\nexport default Layout;\n","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport ContactProfilePage, {CONTACT_PROFILE_ROUTE_PATH} from \"../../contacts/ContactProfilePage\";\nimport AttachmentsPage, {CHAT_ATTACHMENTS_ROUTE_PATH} from \"../../attachments/AttachmentsPage\";\n\nfunction ChatPageRoutes() {\n    return (\n        <Switch>\n            <Route path={CONTACT_PROFILE_ROUTE_PATH} component={ContactProfilePage} />\n            <Route path={CHAT_ATTACHMENTS_ROUTE_PATH} component={AttachmentsPage} />\n            <Route component={AttachmentsPage} />\n        </Switch>\n    );\n}\n\nexport default ChatPageRoutes;\n","import ChatPage from \"./ChatPage\";\nimport Layout from \"../../../common/components/layout\";\nimport ChatPageRoutes from \"./ChatPageRoutes\";\nimport React from \"react\";\nimport {useMediaQuery, useTheme} from \"@material-ui/core\";\n\nexport const CHAT_ROUTE_PATH = '/chat/:id';\n\nfunction ChatContainer() {\n    const theme = useTheme();\n    const isBreakpointSm = useMediaQuery(theme.breakpoints.down('sm'));\n\n    if (isBreakpointSm) return <ChatPage/>;\n\n    return (\n        <Layout\n            rightSide={<ChatPageRoutes/>}\n        >\n            <ChatPage/>\n        </Layout>\n    );\n}\n\nexport default ChatContainer;\n","import React from \"react\";\nimport {Switch, Route} from \"react-router-dom\";\nimport WelcomePage from \"../features/auth/WelcomePage\";\nimport NotFoundPage from \"../common/pages/NotFoundPage/NotFoundPage\";\nimport Chat, {CHAT_ROUTE_PATH} from \"../features/chat/ChatPage\";\nimport SettingsPage, {SETTINGS_ROUTE_PATH} from \"../features/settings/SettingsPage\";\nimport ProfilePage, {PROFILE_ROUTE_PATH} from \"../features/auth/ProfilePage\";\n\nfunction Routes() {\n    return (\n        <Switch>\n            <Route exact={true} path=\"/\" component={WelcomePage} />\n            <Route path={SETTINGS_ROUTE_PATH} component={SettingsPage} />\n            <Route path={CHAT_ROUTE_PATH} component={Chat} />\n            <Route path={PROFILE_ROUTE_PATH} component={ProfilePage} />\n            <Route component={NotFoundPage} />\n        </Switch>\n    )\n}\n\nexport default Routes;\n","import React from \"react\";\nimport {Snackbar, SnackbarProps} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Close} from \"@material-ui/icons\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectStatus, resetStatus} from \"./statusSlice\";\n\nfunction ActionSnackbar() {\n    const {message, autoHideDuration} = useSelector(selectStatus);\n    const dispatch = useDispatch();\n    const hasMessage = Boolean(message);\n    const hideSnackbar = () => dispatch(resetStatus());\n\n    if (!hasMessage) return null;\n\n    const handleClose: SnackbarProps['onClose'] = (event, reason) => {\n        hideSnackbar();\n    };\n\n    const action = (\n        <IconButton\n            size=\"small\"\n            aria-label=\"close\"\n            color=\"inherit\"\n            onClick={hideSnackbar}\n        >\n            <Close fontSize=\"small\" />\n        </IconButton>\n    );\n\n    return (\n        <Snackbar\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n            }}\n            open={hasMessage}\n            autoHideDuration={autoHideDuration}\n            onClose={handleClose}\n            message={message}\n            action={action}\n        />\n    );\n}\n\nexport default ActionSnackbar;","import React from \"react\";\nimport {Switch, Route} from \"react-router-dom\";\nimport Chat, {CHAT_ROUTE_PATH} from \"../features/chat/ChatPage\";\nimport SettingsPage, {SETTINGS_ROUTE_PATH} from \"../features/settings/SettingsPage\";\nimport ProfilePage, {PROFILE_ROUTE_PATH} from \"../features/auth/ProfilePage\";\nimport ContactsPage, {CONTACTS_ROUTE_PATH} from \"../features/contacts/ContactsPage\";\nimport ContactProfilePage, {CONTACT_PROFILE_ROUTE_PATH} from \"../features/contacts/ContactProfilePage\";\nimport AttachmentsPage, {CHAT_ATTACHMENTS_ROUTE_PATH} from \"../features/attachments/AttachmentsPage\";\n\nfunction MobileRoutes() {\n    return (\n        <Switch>\n            <Route exact={true} path=\"/\" component={ContactsPage} />\n            <Route exact={true} path={CHAT_ROUTE_PATH} component={Chat} />\n            <Route path={CONTACTS_ROUTE_PATH} component={ContactsPage} />\n            <Route path={SETTINGS_ROUTE_PATH} component={SettingsPage} />\n            <Route path={PROFILE_ROUTE_PATH} component={ProfilePage} />\n            <Route path={CONTACT_PROFILE_ROUTE_PATH} component={ContactProfilePage} />\n            <Route path={CHAT_ATTACHMENTS_ROUTE_PATH} component={AttachmentsPage} />\n            <Route component={ContactsPage} />\n        </Switch>\n    )\n}\n\nexport default MobileRoutes;\n","import React, {useEffect} from \"react\";\nimport Routes from \"./Routes\";\nimport Layout from \"../common/components/layout/Layout\";\nimport ContactsPage from \"../features/contacts/ContactsPage\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectAuth, authRequest} from \"../features/auth/authSlice\";\nimport ErrorMessage from \"../common/components/layout/ErrorMessage\";\nimport Loading from \"../common/components/layout/Loading\";\nimport ActionSnackbar from \"./ActionSnackbar\";\nimport MobileRoutes from \"./MobileRoutes\";\nimport {useMediaQuery, useTheme} from \"@material-ui/core\";\n\nfunction App() {\n    const dispatch = useDispatch();\n    const theme = useTheme();\n    const isBreakpointSm = useMediaQuery(theme.breakpoints.down('sm'));\n    const { error, loading, user } = useSelector(selectAuth);\n\n    useEffect(() => {\n        const action = authRequest({\n            login: 'someLogin',\n            password: 'somePassword'\n        });\n        dispatch(action);\n    }, [dispatch]);\n\n    if (loading || !user) return <Loading/>;\n    if (error) return <ErrorMessage/>;\n\n    if (isBreakpointSm) return (\n        <>\n            <MobileRoutes/>\n            <ActionSnackbar/>\n        </>\n    );\n\n    return (\n        <Layout\n            title=\"Fake Messenger\"\n            leftSide={<ContactsPage/>}\n        >\n            <Routes />\n            <ActionSnackbar/>\n        </Layout>\n    );\n}\n\nexport default App;","import React from \"react\";\nimport {HashRouter as Router} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {CssBaseline} from \"@material-ui/core\";\nimport store from \"./store\";\nimport ThemeProvider from \"./ThemeProvider/ThemeProvider\";\nimport App from \"./App\";\n\nfunction Root() {\n    return (\n        <Router>\n            <Provider store={store}>\n                <ThemeProvider>\n                    <React.StrictMode>\n                        <CssBaseline/>\n                        <App/>\n                    </React.StrictMode>\n                </ThemeProvider>\n            </Provider>\n        </Router>\n    )\n}\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport Root from \"./app\";\n\nReactDOM.render(\n  <Root/>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}